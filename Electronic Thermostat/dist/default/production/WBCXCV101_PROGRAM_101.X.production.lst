

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Wed Oct 16 16:52:55 2019

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F15344
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	clrtext,global,class=CODE,delta=2
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    16                           	psect	text5,local,class=CODE,merge=1,delta=2
    17                           	psect	text6,local,class=CODE,merge=1,delta=2
    18                           	psect	text7,local,class=CODE,merge=1,delta=2
    19                           	psect	text8,local,class=CODE,merge=1,delta=2
    20                           	psect	text9,local,class=CODE,merge=1,delta=2
    21                           	psect	text10,local,class=CODE,merge=1,delta=2
    22                           	psect	text11,local,class=CODE,merge=1,delta=2
    23                           	psect	text12,local,class=CODE,merge=1,delta=2
    24                           	psect	text13,local,class=CODE,merge=1,delta=2
    25                           	psect	text14,local,class=CODE,merge=1,delta=2
    26                           	psect	text15,local,class=CODE,merge=1,delta=2
    27                           	psect	intentry,global,class=CODE,delta=2
    28                           	psect	text17,local,class=CODE,merge=1,delta=2
    29                           	psect	text18,local,class=CODE,merge=1,delta=2
    30                           	psect	text19,local,class=CODE,merge=1,delta=2
    31                           	psect	text20,local,class=CODE,merge=1,delta=2
    32                           	dabs	1,0x7E,2
    33  0000                     
    34                           ; Version 2.10
    35                           ; Generated 31/07/2019 GMT
    36                           ; 
    37                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    38                           ; All rights reserved.
    39                           ; 
    40                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    41                           ; 
    42                           ; Redistribution and use in source and binary forms, with or without modification, are
    43                           ; permitted provided that the following conditions are met:
    44                           ; 
    45                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    46                           ;        conditions and the following disclaimer.
    47                           ; 
    48                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    49                           ;        of conditions and the following disclaimer in the documentation and/or other
    50                           ;        materials provided with the distribution.
    51                           ; 
    52                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    53                           ;        software without specific prior written permission.
    54                           ; 
    55                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    56                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    57                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    58                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    59                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    60                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    61                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    62                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    63                           ; 
    64                           ; 
    65                           ; Code-generator required, PIC16F15344 Definitions
    66                           ; 
    67                           ; SFR Addresses
    68  0000                     	;# 
    69  0001                     	;# 
    70  0002                     	;# 
    71  0003                     	;# 
    72  0004                     	;# 
    73  0005                     	;# 
    74  0006                     	;# 
    75  0007                     	;# 
    76  0008                     	;# 
    77  0009                     	;# 
    78  000A                     	;# 
    79  000B                     	;# 
    80  000C                     	;# 
    81  000D                     	;# 
    82  000E                     	;# 
    83  0012                     	;# 
    84  0013                     	;# 
    85  0014                     	;# 
    86  0018                     	;# 
    87  0019                     	;# 
    88  001A                     	;# 
    89  009B                     	;# 
    90  009B                     	;# 
    91  009C                     	;# 
    92  009D                     	;# 
    93  009E                     	;# 
    94  009F                     	;# 
    95  0119                     	;# 
    96  0119                     	;# 
    97  0119                     	;# 
    98  011A                     	;# 
    99  011A                     	;# 
   100  011A                     	;# 
   101  011B                     	;# 
   102  011B                     	;# 
   103  011B                     	;# 
   104  011B                     	;# 
   105  011B                     	;# 
   106  011C                     	;# 
   107  011C                     	;# 
   108  011C                     	;# 
   109  011D                     	;# 
   110  011D                     	;# 
   111  011D                     	;# 
   112  011E                     	;# 
   113  011E                     	;# 
   114  011E                     	;# 
   115  011F                     	;# 
   116  011F                     	;# 
   117  011F                     	;# 
   118  011F                     	;# 
   119  011F                     	;# 
   120  018C                     	;# 
   121  018D                     	;# 
   122  018E                     	;# 
   123  018F                     	;# 
   124  0190                     	;# 
   125  0191                     	;# 
   126  0192                     	;# 
   127  020C                     	;# 
   128  020C                     	;# 
   129  020D                     	;# 
   130  020E                     	;# 
   131  020F                     	;# 
   132  020F                     	;# 
   133  0210                     	;# 
   134  0210                     	;# 
   135  0211                     	;# 
   136  0211                     	;# 
   137  028C                     	;# 
   138  028C                     	;# 
   139  028D                     	;# 
   140  028D                     	;# 
   141  028E                     	;# 
   142  028F                     	;# 
   143  0290                     	;# 
   144  0291                     	;# 
   145  030C                     	;# 
   146  030C                     	;# 
   147  030D                     	;# 
   148  030E                     	;# 
   149  030F                     	;# 
   150  0310                     	;# 
   151  0310                     	;# 
   152  0311                     	;# 
   153  0312                     	;# 
   154  0313                     	;# 
   155  0314                     	;# 
   156  0314                     	;# 
   157  0315                     	;# 
   158  0316                     	;# 
   159  0318                     	;# 
   160  0318                     	;# 
   161  0319                     	;# 
   162  031A                     	;# 
   163  031C                     	;# 
   164  031C                     	;# 
   165  031D                     	;# 
   166  031E                     	;# 
   167  038C                     	;# 
   168  038C                     	;# 
   169  038D                     	;# 
   170  038E                     	;# 
   171  058C                     	;# 
   172  058C                     	;# 
   173  058D                     	;# 
   174  058E                     	;# 
   175  058F                     	;# 
   176  058F                     	;# 
   177  0590                     	;# 
   178  0591                     	;# 
   179  0592                     	;# 
   180  0593                     	;# 
   181  059C                     	;# 
   182  059C                     	;# 
   183  059D                     	;# 
   184  059D                     	;# 
   185  059E                     	;# 
   186  059F                     	;# 
   187  060C                     	;# 
   188  060D                     	;# 
   189  060E                     	;# 
   190  060F                     	;# 
   191  0610                     	;# 
   192  0611                     	;# 
   193  0612                     	;# 
   194  0613                     	;# 
   195  0614                     	;# 
   196  070C                     	;# 
   197  070D                     	;# 
   198  070E                     	;# 
   199  070F                     	;# 
   200  0710                     	;# 
   201  0711                     	;# 
   202  0712                     	;# 
   203  0713                     	;# 
   204  0716                     	;# 
   205  0717                     	;# 
   206  0718                     	;# 
   207  0719                     	;# 
   208  071A                     	;# 
   209  071B                     	;# 
   210  071C                     	;# 
   211  071D                     	;# 
   212  0796                     	;# 
   213  0797                     	;# 
   214  0798                     	;# 
   215  0799                     	;# 
   216  079A                     	;# 
   217  079B                     	;# 
   218  080C                     	;# 
   219  080D                     	;# 
   220  080E                     	;# 
   221  080F                     	;# 
   222  0810                     	;# 
   223  0811                     	;# 
   224  0812                     	;# 
   225  0813                     	;# 
   226  0814                     	;# 
   227  081A                     	;# 
   228  081A                     	;# 
   229  081B                     	;# 
   230  081C                     	;# 
   231  081C                     	;# 
   232  081D                     	;# 
   233  081E                     	;# 
   234  081F                     	;# 
   235  088C                     	;# 
   236  088D                     	;# 
   237  088E                     	;# 
   238  088F                     	;# 
   239  0890                     	;# 
   240  0891                     	;# 
   241  0892                     	;# 
   242  0893                     	;# 
   243  0895                     	;# 
   244  0896                     	;# 
   245  090C                     	;# 
   246  090E                     	;# 
   247  090F                     	;# 
   248  091F                     	;# 
   249  098F                     	;# 
   250  098F                     	;# 
   251  0990                     	;# 
   252  0991                     	;# 
   253  0992                     	;# 
   254  0993                     	;# 
   255  0994                     	;# 
   256  0995                     	;# 
   257  0996                     	;# 
   258  0997                     	;# 
   259  0A19                     	;# 
   260  0A19                     	;# 
   261  0A1A                     	;# 
   262  0A1A                     	;# 
   263  0A1B                     	;# 
   264  0A1B                     	;# 
   265  0A1B                     	;# 
   266  0A1C                     	;# 
   267  0A1C                     	;# 
   268  0A1D                     	;# 
   269  0A1D                     	;# 
   270  0A1E                     	;# 
   271  0A1E                     	;# 
   272  0A1F                     	;# 
   273  0A1F                     	;# 
   274  0A1F                     	;# 
   275  1E0F                     	;# 
   276  1E10                     	;# 
   277  1E11                     	;# 
   278  1E12                     	;# 
   279  1E13                     	;# 
   280  1E14                     	;# 
   281  1E15                     	;# 
   282  1E16                     	;# 
   283  1E17                     	;# 
   284  1E18                     	;# 
   285  1E19                     	;# 
   286  1E1A                     	;# 
   287  1E1B                     	;# 
   288  1E1C                     	;# 
   289  1E1D                     	;# 
   290  1E1E                     	;# 
   291  1E1F                     	;# 
   292  1E20                     	;# 
   293  1E21                     	;# 
   294  1E22                     	;# 
   295  1E23                     	;# 
   296  1E24                     	;# 
   297  1E25                     	;# 
   298  1E26                     	;# 
   299  1E27                     	;# 
   300  1E28                     	;# 
   301  1E29                     	;# 
   302  1E2A                     	;# 
   303  1E2B                     	;# 
   304  1E2C                     	;# 
   305  1E2D                     	;# 
   306  1E2E                     	;# 
   307  1E2F                     	;# 
   308  1E30                     	;# 
   309  1E31                     	;# 
   310  1E32                     	;# 
   311  1E33                     	;# 
   312  1E34                     	;# 
   313  1E35                     	;# 
   314  1E36                     	;# 
   315  1E37                     	;# 
   316  1E8F                     	;# 
   317  1E90                     	;# 
   318  1E91                     	;# 
   319  1E92                     	;# 
   320  1E93                     	;# 
   321  1E9C                     	;# 
   322  1EA1                     	;# 
   323  1EA2                     	;# 
   324  1EB1                     	;# 
   325  1EBB                     	;# 
   326  1EBC                     	;# 
   327  1EBD                     	;# 
   328  1EBE                     	;# 
   329  1EC3                     	;# 
   330  1EC5                     	;# 
   331  1EC6                     	;# 
   332  1EC7                     	;# 
   333  1ECB                     	;# 
   334  1ECC                     	;# 
   335  1ECD                     	;# 
   336  1ECE                     	;# 
   337  1F10                     	;# 
   338  1F11                     	;# 
   339  1F12                     	;# 
   340  1F13                     	;# 
   341  1F14                     	;# 
   342  1F15                     	;# 
   343  1F1C                     	;# 
   344  1F1D                     	;# 
   345  1F1E                     	;# 
   346  1F1F                     	;# 
   347  1F20                     	;# 
   348  1F21                     	;# 
   349  1F22                     	;# 
   350  1F23                     	;# 
   351  1F24                     	;# 
   352  1F25                     	;# 
   353  1F26                     	;# 
   354  1F27                     	;# 
   355  1F38                     	;# 
   356  1F39                     	;# 
   357  1F3A                     	;# 
   358  1F3B                     	;# 
   359  1F3C                     	;# 
   360  1F3D                     	;# 
   361  1F3E                     	;# 
   362  1F3F                     	;# 
   363  1F43                     	;# 
   364  1F44                     	;# 
   365  1F45                     	;# 
   366  1F46                     	;# 
   367  1F47                     	;# 
   368  1F48                     	;# 
   369  1F49                     	;# 
   370  1F4A                     	;# 
   371  1F4E                     	;# 
   372  1F4F                     	;# 
   373  1F50                     	;# 
   374  1F51                     	;# 
   375  1F52                     	;# 
   376  1F53                     	;# 
   377  1F54                     	;# 
   378  1F55                     	;# 
   379  1FE4                     	;# 
   380  1FE5                     	;# 
   381  1FE6                     	;# 
   382  1FE7                     	;# 
   383  1FE8                     	;# 
   384  1FE8                     	;# 
   385  1FE9                     	;# 
   386  1FEA                     	;# 
   387  1FEA                     	;# 
   388  1FEB                     	;# 
   389  1FED                     	;# 
   390  1FEE                     	;# 
   391  1FEF                     	;# 
   392  0000                     	;# 
   393  0001                     	;# 
   394  0002                     	;# 
   395  0003                     	;# 
   396  0004                     	;# 
   397  0005                     	;# 
   398  0006                     	;# 
   399  0007                     	;# 
   400  0008                     	;# 
   401  0009                     	;# 
   402  000A                     	;# 
   403  000B                     	;# 
   404  000C                     	;# 
   405  000D                     	;# 
   406  000E                     	;# 
   407  0012                     	;# 
   408  0013                     	;# 
   409  0014                     	;# 
   410  0018                     	;# 
   411  0019                     	;# 
   412  001A                     	;# 
   413  009B                     	;# 
   414  009B                     	;# 
   415  009C                     	;# 
   416  009D                     	;# 
   417  009E                     	;# 
   418  009F                     	;# 
   419  0119                     	;# 
   420  0119                     	;# 
   421  0119                     	;# 
   422  011A                     	;# 
   423  011A                     	;# 
   424  011A                     	;# 
   425  011B                     	;# 
   426  011B                     	;# 
   427  011B                     	;# 
   428  011B                     	;# 
   429  011B                     	;# 
   430  011C                     	;# 
   431  011C                     	;# 
   432  011C                     	;# 
   433  011D                     	;# 
   434  011D                     	;# 
   435  011D                     	;# 
   436  011E                     	;# 
   437  011E                     	;# 
   438  011E                     	;# 
   439  011F                     	;# 
   440  011F                     	;# 
   441  011F                     	;# 
   442  011F                     	;# 
   443  011F                     	;# 
   444  018C                     	;# 
   445  018D                     	;# 
   446  018E                     	;# 
   447  018F                     	;# 
   448  0190                     	;# 
   449  0191                     	;# 
   450  0192                     	;# 
   451  020C                     	;# 
   452  020C                     	;# 
   453  020D                     	;# 
   454  020E                     	;# 
   455  020F                     	;# 
   456  020F                     	;# 
   457  0210                     	;# 
   458  0210                     	;# 
   459  0211                     	;# 
   460  0211                     	;# 
   461  028C                     	;# 
   462  028C                     	;# 
   463  028D                     	;# 
   464  028D                     	;# 
   465  028E                     	;# 
   466  028F                     	;# 
   467  0290                     	;# 
   468  0291                     	;# 
   469  030C                     	;# 
   470  030C                     	;# 
   471  030D                     	;# 
   472  030E                     	;# 
   473  030F                     	;# 
   474  0310                     	;# 
   475  0310                     	;# 
   476  0311                     	;# 
   477  0312                     	;# 
   478  0313                     	;# 
   479  0314                     	;# 
   480  0314                     	;# 
   481  0315                     	;# 
   482  0316                     	;# 
   483  0318                     	;# 
   484  0318                     	;# 
   485  0319                     	;# 
   486  031A                     	;# 
   487  031C                     	;# 
   488  031C                     	;# 
   489  031D                     	;# 
   490  031E                     	;# 
   491  038C                     	;# 
   492  038C                     	;# 
   493  038D                     	;# 
   494  038E                     	;# 
   495  058C                     	;# 
   496  058C                     	;# 
   497  058D                     	;# 
   498  058E                     	;# 
   499  058F                     	;# 
   500  058F                     	;# 
   501  0590                     	;# 
   502  0591                     	;# 
   503  0592                     	;# 
   504  0593                     	;# 
   505  059C                     	;# 
   506  059C                     	;# 
   507  059D                     	;# 
   508  059D                     	;# 
   509  059E                     	;# 
   510  059F                     	;# 
   511  060C                     	;# 
   512  060D                     	;# 
   513  060E                     	;# 
   514  060F                     	;# 
   515  0610                     	;# 
   516  0611                     	;# 
   517  0612                     	;# 
   518  0613                     	;# 
   519  0614                     	;# 
   520  070C                     	;# 
   521  070D                     	;# 
   522  070E                     	;# 
   523  070F                     	;# 
   524  0710                     	;# 
   525  0711                     	;# 
   526  0712                     	;# 
   527  0713                     	;# 
   528  0716                     	;# 
   529  0717                     	;# 
   530  0718                     	;# 
   531  0719                     	;# 
   532  071A                     	;# 
   533  071B                     	;# 
   534  071C                     	;# 
   535  071D                     	;# 
   536  0796                     	;# 
   537  0797                     	;# 
   538  0798                     	;# 
   539  0799                     	;# 
   540  079A                     	;# 
   541  079B                     	;# 
   542  080C                     	;# 
   543  080D                     	;# 
   544  080E                     	;# 
   545  080F                     	;# 
   546  0810                     	;# 
   547  0811                     	;# 
   548  0812                     	;# 
   549  0813                     	;# 
   550  0814                     	;# 
   551  081A                     	;# 
   552  081A                     	;# 
   553  081B                     	;# 
   554  081C                     	;# 
   555  081C                     	;# 
   556  081D                     	;# 
   557  081E                     	;# 
   558  081F                     	;# 
   559  088C                     	;# 
   560  088D                     	;# 
   561  088E                     	;# 
   562  088F                     	;# 
   563  0890                     	;# 
   564  0891                     	;# 
   565  0892                     	;# 
   566  0893                     	;# 
   567  0895                     	;# 
   568  0896                     	;# 
   569  090C                     	;# 
   570  090E                     	;# 
   571  090F                     	;# 
   572  091F                     	;# 
   573  098F                     	;# 
   574  098F                     	;# 
   575  0990                     	;# 
   576  0991                     	;# 
   577  0992                     	;# 
   578  0993                     	;# 
   579  0994                     	;# 
   580  0995                     	;# 
   581  0996                     	;# 
   582  0997                     	;# 
   583  0A19                     	;# 
   584  0A19                     	;# 
   585  0A1A                     	;# 
   586  0A1A                     	;# 
   587  0A1B                     	;# 
   588  0A1B                     	;# 
   589  0A1B                     	;# 
   590  0A1C                     	;# 
   591  0A1C                     	;# 
   592  0A1D                     	;# 
   593  0A1D                     	;# 
   594  0A1E                     	;# 
   595  0A1E                     	;# 
   596  0A1F                     	;# 
   597  0A1F                     	;# 
   598  0A1F                     	;# 
   599  1E0F                     	;# 
   600  1E10                     	;# 
   601  1E11                     	;# 
   602  1E12                     	;# 
   603  1E13                     	;# 
   604  1E14                     	;# 
   605  1E15                     	;# 
   606  1E16                     	;# 
   607  1E17                     	;# 
   608  1E18                     	;# 
   609  1E19                     	;# 
   610  1E1A                     	;# 
   611  1E1B                     	;# 
   612  1E1C                     	;# 
   613  1E1D                     	;# 
   614  1E1E                     	;# 
   615  1E1F                     	;# 
   616  1E20                     	;# 
   617  1E21                     	;# 
   618  1E22                     	;# 
   619  1E23                     	;# 
   620  1E24                     	;# 
   621  1E25                     	;# 
   622  1E26                     	;# 
   623  1E27                     	;# 
   624  1E28                     	;# 
   625  1E29                     	;# 
   626  1E2A                     	;# 
   627  1E2B                     	;# 
   628  1E2C                     	;# 
   629  1E2D                     	;# 
   630  1E2E                     	;# 
   631  1E2F                     	;# 
   632  1E30                     	;# 
   633  1E31                     	;# 
   634  1E32                     	;# 
   635  1E33                     	;# 
   636  1E34                     	;# 
   637  1E35                     	;# 
   638  1E36                     	;# 
   639  1E37                     	;# 
   640  1E8F                     	;# 
   641  1E90                     	;# 
   642  1E91                     	;# 
   643  1E92                     	;# 
   644  1E93                     	;# 
   645  1E9C                     	;# 
   646  1EA1                     	;# 
   647  1EA2                     	;# 
   648  1EB1                     	;# 
   649  1EBB                     	;# 
   650  1EBC                     	;# 
   651  1EBD                     	;# 
   652  1EBE                     	;# 
   653  1EC3                     	;# 
   654  1EC5                     	;# 
   655  1EC6                     	;# 
   656  1EC7                     	;# 
   657  1ECB                     	;# 
   658  1ECC                     	;# 
   659  1ECD                     	;# 
   660  1ECE                     	;# 
   661  1F10                     	;# 
   662  1F11                     	;# 
   663  1F12                     	;# 
   664  1F13                     	;# 
   665  1F14                     	;# 
   666  1F15                     	;# 
   667  1F1C                     	;# 
   668  1F1D                     	;# 
   669  1F1E                     	;# 
   670  1F1F                     	;# 
   671  1F20                     	;# 
   672  1F21                     	;# 
   673  1F22                     	;# 
   674  1F23                     	;# 
   675  1F24                     	;# 
   676  1F25                     	;# 
   677  1F26                     	;# 
   678  1F27                     	;# 
   679  1F38                     	;# 
   680  1F39                     	;# 
   681  1F3A                     	;# 
   682  1F3B                     	;# 
   683  1F3C                     	;# 
   684  1F3D                     	;# 
   685  1F3E                     	;# 
   686  1F3F                     	;# 
   687  1F43                     	;# 
   688  1F44                     	;# 
   689  1F45                     	;# 
   690  1F46                     	;# 
   691  1F47                     	;# 
   692  1F48                     	;# 
   693  1F49                     	;# 
   694  1F4A                     	;# 
   695  1F4E                     	;# 
   696  1F4F                     	;# 
   697  1F50                     	;# 
   698  1F51                     	;# 
   699  1F52                     	;# 
   700  1F53                     	;# 
   701  1F54                     	;# 
   702  1F55                     	;# 
   703  1FE4                     	;# 
   704  1FE5                     	;# 
   705  1FE6                     	;# 
   706  1FE7                     	;# 
   707  1FE8                     	;# 
   708  1FE8                     	;# 
   709  1FE9                     	;# 
   710  1FEA                     	;# 
   711  1FEA                     	;# 
   712  1FEB                     	;# 
   713  1FED                     	;# 
   714  1FEE                     	;# 
   715  1FEF                     	;# 
   716  0000                     	;# 
   717  0001                     	;# 
   718  0002                     	;# 
   719  0003                     	;# 
   720  0004                     	;# 
   721  0005                     	;# 
   722  0006                     	;# 
   723  0007                     	;# 
   724  0008                     	;# 
   725  0009                     	;# 
   726  000A                     	;# 
   727  000B                     	;# 
   728  000C                     	;# 
   729  000D                     	;# 
   730  000E                     	;# 
   731  0012                     	;# 
   732  0013                     	;# 
   733  0014                     	;# 
   734  0018                     	;# 
   735  0019                     	;# 
   736  001A                     	;# 
   737  009B                     	;# 
   738  009B                     	;# 
   739  009C                     	;# 
   740  009D                     	;# 
   741  009E                     	;# 
   742  009F                     	;# 
   743  0119                     	;# 
   744  0119                     	;# 
   745  0119                     	;# 
   746  011A                     	;# 
   747  011A                     	;# 
   748  011A                     	;# 
   749  011B                     	;# 
   750  011B                     	;# 
   751  011B                     	;# 
   752  011B                     	;# 
   753  011B                     	;# 
   754  011C                     	;# 
   755  011C                     	;# 
   756  011C                     	;# 
   757  011D                     	;# 
   758  011D                     	;# 
   759  011D                     	;# 
   760  011E                     	;# 
   761  011E                     	;# 
   762  011E                     	;# 
   763  011F                     	;# 
   764  011F                     	;# 
   765  011F                     	;# 
   766  011F                     	;# 
   767  011F                     	;# 
   768  018C                     	;# 
   769  018D                     	;# 
   770  018E                     	;# 
   771  018F                     	;# 
   772  0190                     	;# 
   773  0191                     	;# 
   774  0192                     	;# 
   775  020C                     	;# 
   776  020C                     	;# 
   777  020D                     	;# 
   778  020E                     	;# 
   779  020F                     	;# 
   780  020F                     	;# 
   781  0210                     	;# 
   782  0210                     	;# 
   783  0211                     	;# 
   784  0211                     	;# 
   785  028C                     	;# 
   786  028C                     	;# 
   787  028D                     	;# 
   788  028D                     	;# 
   789  028E                     	;# 
   790  028F                     	;# 
   791  0290                     	;# 
   792  0291                     	;# 
   793  030C                     	;# 
   794  030C                     	;# 
   795  030D                     	;# 
   796  030E                     	;# 
   797  030F                     	;# 
   798  0310                     	;# 
   799  0310                     	;# 
   800  0311                     	;# 
   801  0312                     	;# 
   802  0313                     	;# 
   803  0314                     	;# 
   804  0314                     	;# 
   805  0315                     	;# 
   806  0316                     	;# 
   807  0318                     	;# 
   808  0318                     	;# 
   809  0319                     	;# 
   810  031A                     	;# 
   811  031C                     	;# 
   812  031C                     	;# 
   813  031D                     	;# 
   814  031E                     	;# 
   815  038C                     	;# 
   816  038C                     	;# 
   817  038D                     	;# 
   818  038E                     	;# 
   819  058C                     	;# 
   820  058C                     	;# 
   821  058D                     	;# 
   822  058E                     	;# 
   823  058F                     	;# 
   824  058F                     	;# 
   825  0590                     	;# 
   826  0591                     	;# 
   827  0592                     	;# 
   828  0593                     	;# 
   829  059C                     	;# 
   830  059C                     	;# 
   831  059D                     	;# 
   832  059D                     	;# 
   833  059E                     	;# 
   834  059F                     	;# 
   835  060C                     	;# 
   836  060D                     	;# 
   837  060E                     	;# 
   838  060F                     	;# 
   839  0610                     	;# 
   840  0611                     	;# 
   841  0612                     	;# 
   842  0613                     	;# 
   843  0614                     	;# 
   844  070C                     	;# 
   845  070D                     	;# 
   846  070E                     	;# 
   847  070F                     	;# 
   848  0710                     	;# 
   849  0711                     	;# 
   850  0712                     	;# 
   851  0713                     	;# 
   852  0716                     	;# 
   853  0717                     	;# 
   854  0718                     	;# 
   855  0719                     	;# 
   856  071A                     	;# 
   857  071B                     	;# 
   858  071C                     	;# 
   859  071D                     	;# 
   860  0796                     	;# 
   861  0797                     	;# 
   862  0798                     	;# 
   863  0799                     	;# 
   864  079A                     	;# 
   865  079B                     	;# 
   866  080C                     	;# 
   867  080D                     	;# 
   868  080E                     	;# 
   869  080F                     	;# 
   870  0810                     	;# 
   871  0811                     	;# 
   872  0812                     	;# 
   873  0813                     	;# 
   874  0814                     	;# 
   875  081A                     	;# 
   876  081A                     	;# 
   877  081B                     	;# 
   878  081C                     	;# 
   879  081C                     	;# 
   880  081D                     	;# 
   881  081E                     	;# 
   882  081F                     	;# 
   883  088C                     	;# 
   884  088D                     	;# 
   885  088E                     	;# 
   886  088F                     	;# 
   887  0890                     	;# 
   888  0891                     	;# 
   889  0892                     	;# 
   890  0893                     	;# 
   891  0895                     	;# 
   892  0896                     	;# 
   893  090C                     	;# 
   894  090E                     	;# 
   895  090F                     	;# 
   896  091F                     	;# 
   897  098F                     	;# 
   898  098F                     	;# 
   899  0990                     	;# 
   900  0991                     	;# 
   901  0992                     	;# 
   902  0993                     	;# 
   903  0994                     	;# 
   904  0995                     	;# 
   905  0996                     	;# 
   906  0997                     	;# 
   907  0A19                     	;# 
   908  0A19                     	;# 
   909  0A1A                     	;# 
   910  0A1A                     	;# 
   911  0A1B                     	;# 
   912  0A1B                     	;# 
   913  0A1B                     	;# 
   914  0A1C                     	;# 
   915  0A1C                     	;# 
   916  0A1D                     	;# 
   917  0A1D                     	;# 
   918  0A1E                     	;# 
   919  0A1E                     	;# 
   920  0A1F                     	;# 
   921  0A1F                     	;# 
   922  0A1F                     	;# 
   923  1E0F                     	;# 
   924  1E10                     	;# 
   925  1E11                     	;# 
   926  1E12                     	;# 
   927  1E13                     	;# 
   928  1E14                     	;# 
   929  1E15                     	;# 
   930  1E16                     	;# 
   931  1E17                     	;# 
   932  1E18                     	;# 
   933  1E19                     	;# 
   934  1E1A                     	;# 
   935  1E1B                     	;# 
   936  1E1C                     	;# 
   937  1E1D                     	;# 
   938  1E1E                     	;# 
   939  1E1F                     	;# 
   940  1E20                     	;# 
   941  1E21                     	;# 
   942  1E22                     	;# 
   943  1E23                     	;# 
   944  1E24                     	;# 
   945  1E25                     	;# 
   946  1E26                     	;# 
   947  1E27                     	;# 
   948  1E28                     	;# 
   949  1E29                     	;# 
   950  1E2A                     	;# 
   951  1E2B                     	;# 
   952  1E2C                     	;# 
   953  1E2D                     	;# 
   954  1E2E                     	;# 
   955  1E2F                     	;# 
   956  1E30                     	;# 
   957  1E31                     	;# 
   958  1E32                     	;# 
   959  1E33                     	;# 
   960  1E34                     	;# 
   961  1E35                     	;# 
   962  1E36                     	;# 
   963  1E37                     	;# 
   964  1E8F                     	;# 
   965  1E90                     	;# 
   966  1E91                     	;# 
   967  1E92                     	;# 
   968  1E93                     	;# 
   969  1E9C                     	;# 
   970  1EA1                     	;# 
   971  1EA2                     	;# 
   972  1EB1                     	;# 
   973  1EBB                     	;# 
   974  1EBC                     	;# 
   975  1EBD                     	;# 
   976  1EBE                     	;# 
   977  1EC3                     	;# 
   978  1EC5                     	;# 
   979  1EC6                     	;# 
   980  1EC7                     	;# 
   981  1ECB                     	;# 
   982  1ECC                     	;# 
   983  1ECD                     	;# 
   984  1ECE                     	;# 
   985  1F10                     	;# 
   986  1F11                     	;# 
   987  1F12                     	;# 
   988  1F13                     	;# 
   989  1F14                     	;# 
   990  1F15                     	;# 
   991  1F1C                     	;# 
   992  1F1D                     	;# 
   993  1F1E                     	;# 
   994  1F1F                     	;# 
   995  1F20                     	;# 
   996  1F21                     	;# 
   997  1F22                     	;# 
   998  1F23                     	;# 
   999  1F24                     	;# 
  1000  1F25                     	;# 
  1001  1F26                     	;# 
  1002  1F27                     	;# 
  1003  1F38                     	;# 
  1004  1F39                     	;# 
  1005  1F3A                     	;# 
  1006  1F3B                     	;# 
  1007  1F3C                     	;# 
  1008  1F3D                     	;# 
  1009  1F3E                     	;# 
  1010  1F3F                     	;# 
  1011  1F43                     	;# 
  1012  1F44                     	;# 
  1013  1F45                     	;# 
  1014  1F46                     	;# 
  1015  1F47                     	;# 
  1016  1F48                     	;# 
  1017  1F49                     	;# 
  1018  1F4A                     	;# 
  1019  1F4E                     	;# 
  1020  1F4F                     	;# 
  1021  1F50                     	;# 
  1022  1F51                     	;# 
  1023  1F52                     	;# 
  1024  1F53                     	;# 
  1025  1F54                     	;# 
  1026  1F55                     	;# 
  1027  1FE4                     	;# 
  1028  1FE5                     	;# 
  1029  1FE6                     	;# 
  1030  1FE7                     	;# 
  1031  1FE8                     	;# 
  1032  1FE8                     	;# 
  1033  1FE9                     	;# 
  1034  1FEA                     	;# 
  1035  1FEA                     	;# 
  1036  1FEB                     	;# 
  1037  1FED                     	;# 
  1038  1FEE                     	;# 
  1039  1FEF                     	;# 
  1040  0000                     	;# 
  1041  0001                     	;# 
  1042  0002                     	;# 
  1043  0003                     	;# 
  1044  0004                     	;# 
  1045  0005                     	;# 
  1046  0006                     	;# 
  1047  0007                     	;# 
  1048  0008                     	;# 
  1049  0009                     	;# 
  1050  000A                     	;# 
  1051  000B                     	;# 
  1052  000C                     	;# 
  1053  000D                     	;# 
  1054  000E                     	;# 
  1055  0012                     	;# 
  1056  0013                     	;# 
  1057  0014                     	;# 
  1058  0018                     	;# 
  1059  0019                     	;# 
  1060  001A                     	;# 
  1061  009B                     	;# 
  1062  009B                     	;# 
  1063  009C                     	;# 
  1064  009D                     	;# 
  1065  009E                     	;# 
  1066  009F                     	;# 
  1067  0119                     	;# 
  1068  0119                     	;# 
  1069  0119                     	;# 
  1070  011A                     	;# 
  1071  011A                     	;# 
  1072  011A                     	;# 
  1073  011B                     	;# 
  1074  011B                     	;# 
  1075  011B                     	;# 
  1076  011B                     	;# 
  1077  011B                     	;# 
  1078  011C                     	;# 
  1079  011C                     	;# 
  1080  011C                     	;# 
  1081  011D                     	;# 
  1082  011D                     	;# 
  1083  011D                     	;# 
  1084  011E                     	;# 
  1085  011E                     	;# 
  1086  011E                     	;# 
  1087  011F                     	;# 
  1088  011F                     	;# 
  1089  011F                     	;# 
  1090  011F                     	;# 
  1091  011F                     	;# 
  1092  018C                     	;# 
  1093  018D                     	;# 
  1094  018E                     	;# 
  1095  018F                     	;# 
  1096  0190                     	;# 
  1097  0191                     	;# 
  1098  0192                     	;# 
  1099  020C                     	;# 
  1100  020C                     	;# 
  1101  020D                     	;# 
  1102  020E                     	;# 
  1103  020F                     	;# 
  1104  020F                     	;# 
  1105  0210                     	;# 
  1106  0210                     	;# 
  1107  0211                     	;# 
  1108  0211                     	;# 
  1109  028C                     	;# 
  1110  028C                     	;# 
  1111  028D                     	;# 
  1112  028D                     	;# 
  1113  028E                     	;# 
  1114  028F                     	;# 
  1115  0290                     	;# 
  1116  0291                     	;# 
  1117  030C                     	;# 
  1118  030C                     	;# 
  1119  030D                     	;# 
  1120  030E                     	;# 
  1121  030F                     	;# 
  1122  0310                     	;# 
  1123  0310                     	;# 
  1124  0311                     	;# 
  1125  0312                     	;# 
  1126  0313                     	;# 
  1127  0314                     	;# 
  1128  0314                     	;# 
  1129  0315                     	;# 
  1130  0316                     	;# 
  1131  0318                     	;# 
  1132  0318                     	;# 
  1133  0319                     	;# 
  1134  031A                     	;# 
  1135  031C                     	;# 
  1136  031C                     	;# 
  1137  031D                     	;# 
  1138  031E                     	;# 
  1139  038C                     	;# 
  1140  038C                     	;# 
  1141  038D                     	;# 
  1142  038E                     	;# 
  1143  058C                     	;# 
  1144  058C                     	;# 
  1145  058D                     	;# 
  1146  058E                     	;# 
  1147  058F                     	;# 
  1148  058F                     	;# 
  1149  0590                     	;# 
  1150  0591                     	;# 
  1151  0592                     	;# 
  1152  0593                     	;# 
  1153  059C                     	;# 
  1154  059C                     	;# 
  1155  059D                     	;# 
  1156  059D                     	;# 
  1157  059E                     	;# 
  1158  059F                     	;# 
  1159  060C                     	;# 
  1160  060D                     	;# 
  1161  060E                     	;# 
  1162  060F                     	;# 
  1163  0610                     	;# 
  1164  0611                     	;# 
  1165  0612                     	;# 
  1166  0613                     	;# 
  1167  0614                     	;# 
  1168  070C                     	;# 
  1169  070D                     	;# 
  1170  070E                     	;# 
  1171  070F                     	;# 
  1172  0710                     	;# 
  1173  0711                     	;# 
  1174  0712                     	;# 
  1175  0713                     	;# 
  1176  0716                     	;# 
  1177  0717                     	;# 
  1178  0718                     	;# 
  1179  0719                     	;# 
  1180  071A                     	;# 
  1181  071B                     	;# 
  1182  071C                     	;# 
  1183  071D                     	;# 
  1184  0796                     	;# 
  1185  0797                     	;# 
  1186  0798                     	;# 
  1187  0799                     	;# 
  1188  079A                     	;# 
  1189  079B                     	;# 
  1190  080C                     	;# 
  1191  080D                     	;# 
  1192  080E                     	;# 
  1193  080F                     	;# 
  1194  0810                     	;# 
  1195  0811                     	;# 
  1196  0812                     	;# 
  1197  0813                     	;# 
  1198  0814                     	;# 
  1199  081A                     	;# 
  1200  081A                     	;# 
  1201  081B                     	;# 
  1202  081C                     	;# 
  1203  081C                     	;# 
  1204  081D                     	;# 
  1205  081E                     	;# 
  1206  081F                     	;# 
  1207  088C                     	;# 
  1208  088D                     	;# 
  1209  088E                     	;# 
  1210  088F                     	;# 
  1211  0890                     	;# 
  1212  0891                     	;# 
  1213  0892                     	;# 
  1214  0893                     	;# 
  1215  0895                     	;# 
  1216  0896                     	;# 
  1217  090C                     	;# 
  1218  090E                     	;# 
  1219  090F                     	;# 
  1220  091F                     	;# 
  1221  098F                     	;# 
  1222  098F                     	;# 
  1223  0990                     	;# 
  1224  0991                     	;# 
  1225  0992                     	;# 
  1226  0993                     	;# 
  1227  0994                     	;# 
  1228  0995                     	;# 
  1229  0996                     	;# 
  1230  0997                     	;# 
  1231  0A19                     	;# 
  1232  0A19                     	;# 
  1233  0A1A                     	;# 
  1234  0A1A                     	;# 
  1235  0A1B                     	;# 
  1236  0A1B                     	;# 
  1237  0A1B                     	;# 
  1238  0A1C                     	;# 
  1239  0A1C                     	;# 
  1240  0A1D                     	;# 
  1241  0A1D                     	;# 
  1242  0A1E                     	;# 
  1243  0A1E                     	;# 
  1244  0A1F                     	;# 
  1245  0A1F                     	;# 
  1246  0A1F                     	;# 
  1247  1E0F                     	;# 
  1248  1E10                     	;# 
  1249  1E11                     	;# 
  1250  1E12                     	;# 
  1251  1E13                     	;# 
  1252  1E14                     	;# 
  1253  1E15                     	;# 
  1254  1E16                     	;# 
  1255  1E17                     	;# 
  1256  1E18                     	;# 
  1257  1E19                     	;# 
  1258  1E1A                     	;# 
  1259  1E1B                     	;# 
  1260  1E1C                     	;# 
  1261  1E1D                     	;# 
  1262  1E1E                     	;# 
  1263  1E1F                     	;# 
  1264  1E20                     	;# 
  1265  1E21                     	;# 
  1266  1E22                     	;# 
  1267  1E23                     	;# 
  1268  1E24                     	;# 
  1269  1E25                     	;# 
  1270  1E26                     	;# 
  1271  1E27                     	;# 
  1272  1E28                     	;# 
  1273  1E29                     	;# 
  1274  1E2A                     	;# 
  1275  1E2B                     	;# 
  1276  1E2C                     	;# 
  1277  1E2D                     	;# 
  1278  1E2E                     	;# 
  1279  1E2F                     	;# 
  1280  1E30                     	;# 
  1281  1E31                     	;# 
  1282  1E32                     	;# 
  1283  1E33                     	;# 
  1284  1E34                     	;# 
  1285  1E35                     	;# 
  1286  1E36                     	;# 
  1287  1E37                     	;# 
  1288  1E8F                     	;# 
  1289  1E90                     	;# 
  1290  1E91                     	;# 
  1291  1E92                     	;# 
  1292  1E93                     	;# 
  1293  1E9C                     	;# 
  1294  1EA1                     	;# 
  1295  1EA2                     	;# 
  1296  1EB1                     	;# 
  1297  1EBB                     	;# 
  1298  1EBC                     	;# 
  1299  1EBD                     	;# 
  1300  1EBE                     	;# 
  1301  1EC3                     	;# 
  1302  1EC5                     	;# 
  1303  1EC6                     	;# 
  1304  1EC7                     	;# 
  1305  1ECB                     	;# 
  1306  1ECC                     	;# 
  1307  1ECD                     	;# 
  1308  1ECE                     	;# 
  1309  1F10                     	;# 
  1310  1F11                     	;# 
  1311  1F12                     	;# 
  1312  1F13                     	;# 
  1313  1F14                     	;# 
  1314  1F15                     	;# 
  1315  1F1C                     	;# 
  1316  1F1D                     	;# 
  1317  1F1E                     	;# 
  1318  1F1F                     	;# 
  1319  1F20                     	;# 
  1320  1F21                     	;# 
  1321  1F22                     	;# 
  1322  1F23                     	;# 
  1323  1F24                     	;# 
  1324  1F25                     	;# 
  1325  1F26                     	;# 
  1326  1F27                     	;# 
  1327  1F38                     	;# 
  1328  1F39                     	;# 
  1329  1F3A                     	;# 
  1330  1F3B                     	;# 
  1331  1F3C                     	;# 
  1332  1F3D                     	;# 
  1333  1F3E                     	;# 
  1334  1F3F                     	;# 
  1335  1F43                     	;# 
  1336  1F44                     	;# 
  1337  1F45                     	;# 
  1338  1F46                     	;# 
  1339  1F47                     	;# 
  1340  1F48                     	;# 
  1341  1F49                     	;# 
  1342  1F4A                     	;# 
  1343  1F4E                     	;# 
  1344  1F4F                     	;# 
  1345  1F50                     	;# 
  1346  1F51                     	;# 
  1347  1F52                     	;# 
  1348  1F53                     	;# 
  1349  1F54                     	;# 
  1350  1F55                     	;# 
  1351  1FE4                     	;# 
  1352  1FE5                     	;# 
  1353  1FE6                     	;# 
  1354  1FE7                     	;# 
  1355  1FE8                     	;# 
  1356  1FE8                     	;# 
  1357  1FE9                     	;# 
  1358  1FEA                     	;# 
  1359  1FEA                     	;# 
  1360  1FEB                     	;# 
  1361  1FED                     	;# 
  1362  1FEE                     	;# 
  1363  1FEF                     	;# 
  1364  0000                     	;# 
  1365  0001                     	;# 
  1366  0002                     	;# 
  1367  0003                     	;# 
  1368  0004                     	;# 
  1369  0005                     	;# 
  1370  0006                     	;# 
  1371  0007                     	;# 
  1372  0008                     	;# 
  1373  0009                     	;# 
  1374  000A                     	;# 
  1375  000B                     	;# 
  1376  000C                     	;# 
  1377  000D                     	;# 
  1378  000E                     	;# 
  1379  0012                     	;# 
  1380  0013                     	;# 
  1381  0014                     	;# 
  1382  0018                     	;# 
  1383  0019                     	;# 
  1384  001A                     	;# 
  1385  009B                     	;# 
  1386  009B                     	;# 
  1387  009C                     	;# 
  1388  009D                     	;# 
  1389  009E                     	;# 
  1390  009F                     	;# 
  1391  0119                     	;# 
  1392  0119                     	;# 
  1393  0119                     	;# 
  1394  011A                     	;# 
  1395  011A                     	;# 
  1396  011A                     	;# 
  1397  011B                     	;# 
  1398  011B                     	;# 
  1399  011B                     	;# 
  1400  011B                     	;# 
  1401  011B                     	;# 
  1402  011C                     	;# 
  1403  011C                     	;# 
  1404  011C                     	;# 
  1405  011D                     	;# 
  1406  011D                     	;# 
  1407  011D                     	;# 
  1408  011E                     	;# 
  1409  011E                     	;# 
  1410  011E                     	;# 
  1411  011F                     	;# 
  1412  011F                     	;# 
  1413  011F                     	;# 
  1414  011F                     	;# 
  1415  011F                     	;# 
  1416  018C                     	;# 
  1417  018D                     	;# 
  1418  018E                     	;# 
  1419  018F                     	;# 
  1420  0190                     	;# 
  1421  0191                     	;# 
  1422  0192                     	;# 
  1423  020C                     	;# 
  1424  020C                     	;# 
  1425  020D                     	;# 
  1426  020E                     	;# 
  1427  020F                     	;# 
  1428  020F                     	;# 
  1429  0210                     	;# 
  1430  0210                     	;# 
  1431  0211                     	;# 
  1432  0211                     	;# 
  1433  028C                     	;# 
  1434  028C                     	;# 
  1435  028D                     	;# 
  1436  028D                     	;# 
  1437  028E                     	;# 
  1438  028F                     	;# 
  1439  0290                     	;# 
  1440  0291                     	;# 
  1441  030C                     	;# 
  1442  030C                     	;# 
  1443  030D                     	;# 
  1444  030E                     	;# 
  1445  030F                     	;# 
  1446  0310                     	;# 
  1447  0310                     	;# 
  1448  0311                     	;# 
  1449  0312                     	;# 
  1450  0313                     	;# 
  1451  0314                     	;# 
  1452  0314                     	;# 
  1453  0315                     	;# 
  1454  0316                     	;# 
  1455  0318                     	;# 
  1456  0318                     	;# 
  1457  0319                     	;# 
  1458  031A                     	;# 
  1459  031C                     	;# 
  1460  031C                     	;# 
  1461  031D                     	;# 
  1462  031E                     	;# 
  1463  038C                     	;# 
  1464  038C                     	;# 
  1465  038D                     	;# 
  1466  038E                     	;# 
  1467  058C                     	;# 
  1468  058C                     	;# 
  1469  058D                     	;# 
  1470  058E                     	;# 
  1471  058F                     	;# 
  1472  058F                     	;# 
  1473  0590                     	;# 
  1474  0591                     	;# 
  1475  0592                     	;# 
  1476  0593                     	;# 
  1477  059C                     	;# 
  1478  059C                     	;# 
  1479  059D                     	;# 
  1480  059D                     	;# 
  1481  059E                     	;# 
  1482  059F                     	;# 
  1483  060C                     	;# 
  1484  060D                     	;# 
  1485  060E                     	;# 
  1486  060F                     	;# 
  1487  0610                     	;# 
  1488  0611                     	;# 
  1489  0612                     	;# 
  1490  0613                     	;# 
  1491  0614                     	;# 
  1492  070C                     	;# 
  1493  070D                     	;# 
  1494  070E                     	;# 
  1495  070F                     	;# 
  1496  0710                     	;# 
  1497  0711                     	;# 
  1498  0712                     	;# 
  1499  0713                     	;# 
  1500  0716                     	;# 
  1501  0717                     	;# 
  1502  0718                     	;# 
  1503  0719                     	;# 
  1504  071A                     	;# 
  1505  071B                     	;# 
  1506  071C                     	;# 
  1507  071D                     	;# 
  1508  0796                     	;# 
  1509  0797                     	;# 
  1510  0798                     	;# 
  1511  0799                     	;# 
  1512  079A                     	;# 
  1513  079B                     	;# 
  1514  080C                     	;# 
  1515  080D                     	;# 
  1516  080E                     	;# 
  1517  080F                     	;# 
  1518  0810                     	;# 
  1519  0811                     	;# 
  1520  0812                     	;# 
  1521  0813                     	;# 
  1522  0814                     	;# 
  1523  081A                     	;# 
  1524  081A                     	;# 
  1525  081B                     	;# 
  1526  081C                     	;# 
  1527  081C                     	;# 
  1528  081D                     	;# 
  1529  081E                     	;# 
  1530  081F                     	;# 
  1531  088C                     	;# 
  1532  088D                     	;# 
  1533  088E                     	;# 
  1534  088F                     	;# 
  1535  0890                     	;# 
  1536  0891                     	;# 
  1537  0892                     	;# 
  1538  0893                     	;# 
  1539  0895                     	;# 
  1540  0896                     	;# 
  1541  090C                     	;# 
  1542  090E                     	;# 
  1543  090F                     	;# 
  1544  091F                     	;# 
  1545  098F                     	;# 
  1546  098F                     	;# 
  1547  0990                     	;# 
  1548  0991                     	;# 
  1549  0992                     	;# 
  1550  0993                     	;# 
  1551  0994                     	;# 
  1552  0995                     	;# 
  1553  0996                     	;# 
  1554  0997                     	;# 
  1555  0A19                     	;# 
  1556  0A19                     	;# 
  1557  0A1A                     	;# 
  1558  0A1A                     	;# 
  1559  0A1B                     	;# 
  1560  0A1B                     	;# 
  1561  0A1B                     	;# 
  1562  0A1C                     	;# 
  1563  0A1C                     	;# 
  1564  0A1D                     	;# 
  1565  0A1D                     	;# 
  1566  0A1E                     	;# 
  1567  0A1E                     	;# 
  1568  0A1F                     	;# 
  1569  0A1F                     	;# 
  1570  0A1F                     	;# 
  1571  1E0F                     	;# 
  1572  1E10                     	;# 
  1573  1E11                     	;# 
  1574  1E12                     	;# 
  1575  1E13                     	;# 
  1576  1E14                     	;# 
  1577  1E15                     	;# 
  1578  1E16                     	;# 
  1579  1E17                     	;# 
  1580  1E18                     	;# 
  1581  1E19                     	;# 
  1582  1E1A                     	;# 
  1583  1E1B                     	;# 
  1584  1E1C                     	;# 
  1585  1E1D                     	;# 
  1586  1E1E                     	;# 
  1587  1E1F                     	;# 
  1588  1E20                     	;# 
  1589  1E21                     	;# 
  1590  1E22                     	;# 
  1591  1E23                     	;# 
  1592  1E24                     	;# 
  1593  1E25                     	;# 
  1594  1E26                     	;# 
  1595  1E27                     	;# 
  1596  1E28                     	;# 
  1597  1E29                     	;# 
  1598  1E2A                     	;# 
  1599  1E2B                     	;# 
  1600  1E2C                     	;# 
  1601  1E2D                     	;# 
  1602  1E2E                     	;# 
  1603  1E2F                     	;# 
  1604  1E30                     	;# 
  1605  1E31                     	;# 
  1606  1E32                     	;# 
  1607  1E33                     	;# 
  1608  1E34                     	;# 
  1609  1E35                     	;# 
  1610  1E36                     	;# 
  1611  1E37                     	;# 
  1612  1E8F                     	;# 
  1613  1E90                     	;# 
  1614  1E91                     	;# 
  1615  1E92                     	;# 
  1616  1E93                     	;# 
  1617  1E9C                     	;# 
  1618  1EA1                     	;# 
  1619  1EA2                     	;# 
  1620  1EB1                     	;# 
  1621  1EBB                     	;# 
  1622  1EBC                     	;# 
  1623  1EBD                     	;# 
  1624  1EBE                     	;# 
  1625  1EC3                     	;# 
  1626  1EC5                     	;# 
  1627  1EC6                     	;# 
  1628  1EC7                     	;# 
  1629  1ECB                     	;# 
  1630  1ECC                     	;# 
  1631  1ECD                     	;# 
  1632  1ECE                     	;# 
  1633  1F10                     	;# 
  1634  1F11                     	;# 
  1635  1F12                     	;# 
  1636  1F13                     	;# 
  1637  1F14                     	;# 
  1638  1F15                     	;# 
  1639  1F1C                     	;# 
  1640  1F1D                     	;# 
  1641  1F1E                     	;# 
  1642  1F1F                     	;# 
  1643  1F20                     	;# 
  1644  1F21                     	;# 
  1645  1F22                     	;# 
  1646  1F23                     	;# 
  1647  1F24                     	;# 
  1648  1F25                     	;# 
  1649  1F26                     	;# 
  1650  1F27                     	;# 
  1651  1F38                     	;# 
  1652  1F39                     	;# 
  1653  1F3A                     	;# 
  1654  1F3B                     	;# 
  1655  1F3C                     	;# 
  1656  1F3D                     	;# 
  1657  1F3E                     	;# 
  1658  1F3F                     	;# 
  1659  1F43                     	;# 
  1660  1F44                     	;# 
  1661  1F45                     	;# 
  1662  1F46                     	;# 
  1663  1F47                     	;# 
  1664  1F48                     	;# 
  1665  1F49                     	;# 
  1666  1F4A                     	;# 
  1667  1F4E                     	;# 
  1668  1F4F                     	;# 
  1669  1F50                     	;# 
  1670  1F51                     	;# 
  1671  1F52                     	;# 
  1672  1F53                     	;# 
  1673  1F54                     	;# 
  1674  1F55                     	;# 
  1675  1FE4                     	;# 
  1676  1FE5                     	;# 
  1677  1FE6                     	;# 
  1678  1FE7                     	;# 
  1679  1FE8                     	;# 
  1680  1FE8                     	;# 
  1681  1FE9                     	;# 
  1682  1FEA                     	;# 
  1683  1FEA                     	;# 
  1684  1FEB                     	;# 
  1685  1FED                     	;# 
  1686  1FEE                     	;# 
  1687  1FEF                     	;# 
  1688  0000                     	;# 
  1689  0001                     	;# 
  1690  0002                     	;# 
  1691  0003                     	;# 
  1692  0004                     	;# 
  1693  0005                     	;# 
  1694  0006                     	;# 
  1695  0007                     	;# 
  1696  0008                     	;# 
  1697  0009                     	;# 
  1698  000A                     	;# 
  1699  000B                     	;# 
  1700  000C                     	;# 
  1701  000D                     	;# 
  1702  000E                     	;# 
  1703  0012                     	;# 
  1704  0013                     	;# 
  1705  0014                     	;# 
  1706  0018                     	;# 
  1707  0019                     	;# 
  1708  001A                     	;# 
  1709  009B                     	;# 
  1710  009B                     	;# 
  1711  009C                     	;# 
  1712  009D                     	;# 
  1713  009E                     	;# 
  1714  009F                     	;# 
  1715  0119                     	;# 
  1716  0119                     	;# 
  1717  0119                     	;# 
  1718  011A                     	;# 
  1719  011A                     	;# 
  1720  011A                     	;# 
  1721  011B                     	;# 
  1722  011B                     	;# 
  1723  011B                     	;# 
  1724  011B                     	;# 
  1725  011B                     	;# 
  1726  011C                     	;# 
  1727  011C                     	;# 
  1728  011C                     	;# 
  1729  011D                     	;# 
  1730  011D                     	;# 
  1731  011D                     	;# 
  1732  011E                     	;# 
  1733  011E                     	;# 
  1734  011E                     	;# 
  1735  011F                     	;# 
  1736  011F                     	;# 
  1737  011F                     	;# 
  1738  011F                     	;# 
  1739  011F                     	;# 
  1740  018C                     	;# 
  1741  018D                     	;# 
  1742  018E                     	;# 
  1743  018F                     	;# 
  1744  0190                     	;# 
  1745  0191                     	;# 
  1746  0192                     	;# 
  1747  020C                     	;# 
  1748  020C                     	;# 
  1749  020D                     	;# 
  1750  020E                     	;# 
  1751  020F                     	;# 
  1752  020F                     	;# 
  1753  0210                     	;# 
  1754  0210                     	;# 
  1755  0211                     	;# 
  1756  0211                     	;# 
  1757  028C                     	;# 
  1758  028C                     	;# 
  1759  028D                     	;# 
  1760  028D                     	;# 
  1761  028E                     	;# 
  1762  028F                     	;# 
  1763  0290                     	;# 
  1764  0291                     	;# 
  1765  030C                     	;# 
  1766  030C                     	;# 
  1767  030D                     	;# 
  1768  030E                     	;# 
  1769  030F                     	;# 
  1770  0310                     	;# 
  1771  0310                     	;# 
  1772  0311                     	;# 
  1773  0312                     	;# 
  1774  0313                     	;# 
  1775  0314                     	;# 
  1776  0314                     	;# 
  1777  0315                     	;# 
  1778  0316                     	;# 
  1779  0318                     	;# 
  1780  0318                     	;# 
  1781  0319                     	;# 
  1782  031A                     	;# 
  1783  031C                     	;# 
  1784  031C                     	;# 
  1785  031D                     	;# 
  1786  031E                     	;# 
  1787  038C                     	;# 
  1788  038C                     	;# 
  1789  038D                     	;# 
  1790  038E                     	;# 
  1791  058C                     	;# 
  1792  058C                     	;# 
  1793  058D                     	;# 
  1794  058E                     	;# 
  1795  058F                     	;# 
  1796  058F                     	;# 
  1797  0590                     	;# 
  1798  0591                     	;# 
  1799  0592                     	;# 
  1800  0593                     	;# 
  1801  059C                     	;# 
  1802  059C                     	;# 
  1803  059D                     	;# 
  1804  059D                     	;# 
  1805  059E                     	;# 
  1806  059F                     	;# 
  1807  060C                     	;# 
  1808  060D                     	;# 
  1809  060E                     	;# 
  1810  060F                     	;# 
  1811  0610                     	;# 
  1812  0611                     	;# 
  1813  0612                     	;# 
  1814  0613                     	;# 
  1815  0614                     	;# 
  1816  070C                     	;# 
  1817  070D                     	;# 
  1818  070E                     	;# 
  1819  070F                     	;# 
  1820  0710                     	;# 
  1821  0711                     	;# 
  1822  0712                     	;# 
  1823  0713                     	;# 
  1824  0716                     	;# 
  1825  0717                     	;# 
  1826  0718                     	;# 
  1827  0719                     	;# 
  1828  071A                     	;# 
  1829  071B                     	;# 
  1830  071C                     	;# 
  1831  071D                     	;# 
  1832  0796                     	;# 
  1833  0797                     	;# 
  1834  0798                     	;# 
  1835  0799                     	;# 
  1836  079A                     	;# 
  1837  079B                     	;# 
  1838  080C                     	;# 
  1839  080D                     	;# 
  1840  080E                     	;# 
  1841  080F                     	;# 
  1842  0810                     	;# 
  1843  0811                     	;# 
  1844  0812                     	;# 
  1845  0813                     	;# 
  1846  0814                     	;# 
  1847  081A                     	;# 
  1848  081A                     	;# 
  1849  081B                     	;# 
  1850  081C                     	;# 
  1851  081C                     	;# 
  1852  081D                     	;# 
  1853  081E                     	;# 
  1854  081F                     	;# 
  1855  088C                     	;# 
  1856  088D                     	;# 
  1857  088E                     	;# 
  1858  088F                     	;# 
  1859  0890                     	;# 
  1860  0891                     	;# 
  1861  0892                     	;# 
  1862  0893                     	;# 
  1863  0895                     	;# 
  1864  0896                     	;# 
  1865  090C                     	;# 
  1866  090E                     	;# 
  1867  090F                     	;# 
  1868  091F                     	;# 
  1869  098F                     	;# 
  1870  098F                     	;# 
  1871  0990                     	;# 
  1872  0991                     	;# 
  1873  0992                     	;# 
  1874  0993                     	;# 
  1875  0994                     	;# 
  1876  0995                     	;# 
  1877  0996                     	;# 
  1878  0997                     	;# 
  1879  0A19                     	;# 
  1880  0A19                     	;# 
  1881  0A1A                     	;# 
  1882  0A1A                     	;# 
  1883  0A1B                     	;# 
  1884  0A1B                     	;# 
  1885  0A1B                     	;# 
  1886  0A1C                     	;# 
  1887  0A1C                     	;# 
  1888  0A1D                     	;# 
  1889  0A1D                     	;# 
  1890  0A1E                     	;# 
  1891  0A1E                     	;# 
  1892  0A1F                     	;# 
  1893  0A1F                     	;# 
  1894  0A1F                     	;# 
  1895  1E0F                     	;# 
  1896  1E10                     	;# 
  1897  1E11                     	;# 
  1898  1E12                     	;# 
  1899  1E13                     	;# 
  1900  1E14                     	;# 
  1901  1E15                     	;# 
  1902  1E16                     	;# 
  1903  1E17                     	;# 
  1904  1E18                     	;# 
  1905  1E19                     	;# 
  1906  1E1A                     	;# 
  1907  1E1B                     	;# 
  1908  1E1C                     	;# 
  1909  1E1D                     	;# 
  1910  1E1E                     	;# 
  1911  1E1F                     	;# 
  1912  1E20                     	;# 
  1913  1E21                     	;# 
  1914  1E22                     	;# 
  1915  1E23                     	;# 
  1916  1E24                     	;# 
  1917  1E25                     	;# 
  1918  1E26                     	;# 
  1919  1E27                     	;# 
  1920  1E28                     	;# 
  1921  1E29                     	;# 
  1922  1E2A                     	;# 
  1923  1E2B                     	;# 
  1924  1E2C                     	;# 
  1925  1E2D                     	;# 
  1926  1E2E                     	;# 
  1927  1E2F                     	;# 
  1928  1E30                     	;# 
  1929  1E31                     	;# 
  1930  1E32                     	;# 
  1931  1E33                     	;# 
  1932  1E34                     	;# 
  1933  1E35                     	;# 
  1934  1E36                     	;# 
  1935  1E37                     	;# 
  1936  1E8F                     	;# 
  1937  1E90                     	;# 
  1938  1E91                     	;# 
  1939  1E92                     	;# 
  1940  1E93                     	;# 
  1941  1E9C                     	;# 
  1942  1EA1                     	;# 
  1943  1EA2                     	;# 
  1944  1EB1                     	;# 
  1945  1EBB                     	;# 
  1946  1EBC                     	;# 
  1947  1EBD                     	;# 
  1948  1EBE                     	;# 
  1949  1EC3                     	;# 
  1950  1EC5                     	;# 
  1951  1EC6                     	;# 
  1952  1EC7                     	;# 
  1953  1ECB                     	;# 
  1954  1ECC                     	;# 
  1955  1ECD                     	;# 
  1956  1ECE                     	;# 
  1957  1F10                     	;# 
  1958  1F11                     	;# 
  1959  1F12                     	;# 
  1960  1F13                     	;# 
  1961  1F14                     	;# 
  1962  1F15                     	;# 
  1963  1F1C                     	;# 
  1964  1F1D                     	;# 
  1965  1F1E                     	;# 
  1966  1F1F                     	;# 
  1967  1F20                     	;# 
  1968  1F21                     	;# 
  1969  1F22                     	;# 
  1970  1F23                     	;# 
  1971  1F24                     	;# 
  1972  1F25                     	;# 
  1973  1F26                     	;# 
  1974  1F27                     	;# 
  1975  1F38                     	;# 
  1976  1F39                     	;# 
  1977  1F3A                     	;# 
  1978  1F3B                     	;# 
  1979  1F3C                     	;# 
  1980  1F3D                     	;# 
  1981  1F3E                     	;# 
  1982  1F3F                     	;# 
  1983  1F43                     	;# 
  1984  1F44                     	;# 
  1985  1F45                     	;# 
  1986  1F46                     	;# 
  1987  1F47                     	;# 
  1988  1F48                     	;# 
  1989  1F49                     	;# 
  1990  1F4A                     	;# 
  1991  1F4E                     	;# 
  1992  1F4F                     	;# 
  1993  1F50                     	;# 
  1994  1F51                     	;# 
  1995  1F52                     	;# 
  1996  1F53                     	;# 
  1997  1F54                     	;# 
  1998  1F55                     	;# 
  1999  1FE4                     	;# 
  2000  1FE5                     	;# 
  2001  1FE6                     	;# 
  2002  1FE7                     	;# 
  2003  1FE8                     	;# 
  2004  1FE8                     	;# 
  2005  1FE9                     	;# 
  2006  1FEA                     	;# 
  2007  1FEA                     	;# 
  2008  1FEB                     	;# 
  2009  1FED                     	;# 
  2010  1FEE                     	;# 
  2011  1FEF                     	;# 
  2012  0000                     	;# 
  2013  0001                     	;# 
  2014  0002                     	;# 
  2015  0003                     	;# 
  2016  0004                     	;# 
  2017  0005                     	;# 
  2018  0006                     	;# 
  2019  0007                     	;# 
  2020  0008                     	;# 
  2021  0009                     	;# 
  2022  000A                     	;# 
  2023  000B                     	;# 
  2024  000C                     	;# 
  2025  000D                     	;# 
  2026  000E                     	;# 
  2027  0012                     	;# 
  2028  0013                     	;# 
  2029  0014                     	;# 
  2030  0018                     	;# 
  2031  0019                     	;# 
  2032  001A                     	;# 
  2033  009B                     	;# 
  2034  009B                     	;# 
  2035  009C                     	;# 
  2036  009D                     	;# 
  2037  009E                     	;# 
  2038  009F                     	;# 
  2039  0119                     	;# 
  2040  0119                     	;# 
  2041  0119                     	;# 
  2042  011A                     	;# 
  2043  011A                     	;# 
  2044  011A                     	;# 
  2045  011B                     	;# 
  2046  011B                     	;# 
  2047  011B                     	;# 
  2048  011B                     	;# 
  2049  011B                     	;# 
  2050  011C                     	;# 
  2051  011C                     	;# 
  2052  011C                     	;# 
  2053  011D                     	;# 
  2054  011D                     	;# 
  2055  011D                     	;# 
  2056  011E                     	;# 
  2057  011E                     	;# 
  2058  011E                     	;# 
  2059  011F                     	;# 
  2060  011F                     	;# 
  2061  011F                     	;# 
  2062  011F                     	;# 
  2063  011F                     	;# 
  2064  018C                     	;# 
  2065  018D                     	;# 
  2066  018E                     	;# 
  2067  018F                     	;# 
  2068  0190                     	;# 
  2069  0191                     	;# 
  2070  0192                     	;# 
  2071  020C                     	;# 
  2072  020C                     	;# 
  2073  020D                     	;# 
  2074  020E                     	;# 
  2075  020F                     	;# 
  2076  020F                     	;# 
  2077  0210                     	;# 
  2078  0210                     	;# 
  2079  0211                     	;# 
  2080  0211                     	;# 
  2081  028C                     	;# 
  2082  028C                     	;# 
  2083  028D                     	;# 
  2084  028D                     	;# 
  2085  028E                     	;# 
  2086  028F                     	;# 
  2087  0290                     	;# 
  2088  0291                     	;# 
  2089  030C                     	;# 
  2090  030C                     	;# 
  2091  030D                     	;# 
  2092  030E                     	;# 
  2093  030F                     	;# 
  2094  0310                     	;# 
  2095  0310                     	;# 
  2096  0311                     	;# 
  2097  0312                     	;# 
  2098  0313                     	;# 
  2099  0314                     	;# 
  2100  0314                     	;# 
  2101  0315                     	;# 
  2102  0316                     	;# 
  2103  0318                     	;# 
  2104  0318                     	;# 
  2105  0319                     	;# 
  2106  031A                     	;# 
  2107  031C                     	;# 
  2108  031C                     	;# 
  2109  031D                     	;# 
  2110  031E                     	;# 
  2111  038C                     	;# 
  2112  038C                     	;# 
  2113  038D                     	;# 
  2114  038E                     	;# 
  2115  058C                     	;# 
  2116  058C                     	;# 
  2117  058D                     	;# 
  2118  058E                     	;# 
  2119  058F                     	;# 
  2120  058F                     	;# 
  2121  0590                     	;# 
  2122  0591                     	;# 
  2123  0592                     	;# 
  2124  0593                     	;# 
  2125  059C                     	;# 
  2126  059C                     	;# 
  2127  059D                     	;# 
  2128  059D                     	;# 
  2129  059E                     	;# 
  2130  059F                     	;# 
  2131  060C                     	;# 
  2132  060D                     	;# 
  2133  060E                     	;# 
  2134  060F                     	;# 
  2135  0610                     	;# 
  2136  0611                     	;# 
  2137  0612                     	;# 
  2138  0613                     	;# 
  2139  0614                     	;# 
  2140  070C                     	;# 
  2141  070D                     	;# 
  2142  070E                     	;# 
  2143  070F                     	;# 
  2144  0710                     	;# 
  2145  0711                     	;# 
  2146  0712                     	;# 
  2147  0713                     	;# 
  2148  0716                     	;# 
  2149  0717                     	;# 
  2150  0718                     	;# 
  2151  0719                     	;# 
  2152  071A                     	;# 
  2153  071B                     	;# 
  2154  071C                     	;# 
  2155  071D                     	;# 
  2156  0796                     	;# 
  2157  0797                     	;# 
  2158  0798                     	;# 
  2159  0799                     	;# 
  2160  079A                     	;# 
  2161  079B                     	;# 
  2162  080C                     	;# 
  2163  080D                     	;# 
  2164  080E                     	;# 
  2165  080F                     	;# 
  2166  0810                     	;# 
  2167  0811                     	;# 
  2168  0812                     	;# 
  2169  0813                     	;# 
  2170  0814                     	;# 
  2171  081A                     	;# 
  2172  081A                     	;# 
  2173  081B                     	;# 
  2174  081C                     	;# 
  2175  081C                     	;# 
  2176  081D                     	;# 
  2177  081E                     	;# 
  2178  081F                     	;# 
  2179  088C                     	;# 
  2180  088D                     	;# 
  2181  088E                     	;# 
  2182  088F                     	;# 
  2183  0890                     	;# 
  2184  0891                     	;# 
  2185  0892                     	;# 
  2186  0893                     	;# 
  2187  0895                     	;# 
  2188  0896                     	;# 
  2189  090C                     	;# 
  2190  090E                     	;# 
  2191  090F                     	;# 
  2192  091F                     	;# 
  2193  098F                     	;# 
  2194  098F                     	;# 
  2195  0990                     	;# 
  2196  0991                     	;# 
  2197  0992                     	;# 
  2198  0993                     	;# 
  2199  0994                     	;# 
  2200  0995                     	;# 
  2201  0996                     	;# 
  2202  0997                     	;# 
  2203  0A19                     	;# 
  2204  0A19                     	;# 
  2205  0A1A                     	;# 
  2206  0A1A                     	;# 
  2207  0A1B                     	;# 
  2208  0A1B                     	;# 
  2209  0A1B                     	;# 
  2210  0A1C                     	;# 
  2211  0A1C                     	;# 
  2212  0A1D                     	;# 
  2213  0A1D                     	;# 
  2214  0A1E                     	;# 
  2215  0A1E                     	;# 
  2216  0A1F                     	;# 
  2217  0A1F                     	;# 
  2218  0A1F                     	;# 
  2219  1E0F                     	;# 
  2220  1E10                     	;# 
  2221  1E11                     	;# 
  2222  1E12                     	;# 
  2223  1E13                     	;# 
  2224  1E14                     	;# 
  2225  1E15                     	;# 
  2226  1E16                     	;# 
  2227  1E17                     	;# 
  2228  1E18                     	;# 
  2229  1E19                     	;# 
  2230  1E1A                     	;# 
  2231  1E1B                     	;# 
  2232  1E1C                     	;# 
  2233  1E1D                     	;# 
  2234  1E1E                     	;# 
  2235  1E1F                     	;# 
  2236  1E20                     	;# 
  2237  1E21                     	;# 
  2238  1E22                     	;# 
  2239  1E23                     	;# 
  2240  1E24                     	;# 
  2241  1E25                     	;# 
  2242  1E26                     	;# 
  2243  1E27                     	;# 
  2244  1E28                     	;# 
  2245  1E29                     	;# 
  2246  1E2A                     	;# 
  2247  1E2B                     	;# 
  2248  1E2C                     	;# 
  2249  1E2D                     	;# 
  2250  1E2E                     	;# 
  2251  1E2F                     	;# 
  2252  1E30                     	;# 
  2253  1E31                     	;# 
  2254  1E32                     	;# 
  2255  1E33                     	;# 
  2256  1E34                     	;# 
  2257  1E35                     	;# 
  2258  1E36                     	;# 
  2259  1E37                     	;# 
  2260  1E8F                     	;# 
  2261  1E90                     	;# 
  2262  1E91                     	;# 
  2263  1E92                     	;# 
  2264  1E93                     	;# 
  2265  1E9C                     	;# 
  2266  1EA1                     	;# 
  2267  1EA2                     	;# 
  2268  1EB1                     	;# 
  2269  1EBB                     	;# 
  2270  1EBC                     	;# 
  2271  1EBD                     	;# 
  2272  1EBE                     	;# 
  2273  1EC3                     	;# 
  2274  1EC5                     	;# 
  2275  1EC6                     	;# 
  2276  1EC7                     	;# 
  2277  1ECB                     	;# 
  2278  1ECC                     	;# 
  2279  1ECD                     	;# 
  2280  1ECE                     	;# 
  2281  1F10                     	;# 
  2282  1F11                     	;# 
  2283  1F12                     	;# 
  2284  1F13                     	;# 
  2285  1F14                     	;# 
  2286  1F15                     	;# 
  2287  1F1C                     	;# 
  2288  1F1D                     	;# 
  2289  1F1E                     	;# 
  2290  1F1F                     	;# 
  2291  1F20                     	;# 
  2292  1F21                     	;# 
  2293  1F22                     	;# 
  2294  1F23                     	;# 
  2295  1F24                     	;# 
  2296  1F25                     	;# 
  2297  1F26                     	;# 
  2298  1F27                     	;# 
  2299  1F38                     	;# 
  2300  1F39                     	;# 
  2301  1F3A                     	;# 
  2302  1F3B                     	;# 
  2303  1F3C                     	;# 
  2304  1F3D                     	;# 
  2305  1F3E                     	;# 
  2306  1F3F                     	;# 
  2307  1F43                     	;# 
  2308  1F44                     	;# 
  2309  1F45                     	;# 
  2310  1F46                     	;# 
  2311  1F47                     	;# 
  2312  1F48                     	;# 
  2313  1F49                     	;# 
  2314  1F4A                     	;# 
  2315  1F4E                     	;# 
  2316  1F4F                     	;# 
  2317  1F50                     	;# 
  2318  1F51                     	;# 
  2319  1F52                     	;# 
  2320  1F53                     	;# 
  2321  1F54                     	;# 
  2322  1F55                     	;# 
  2323  1FE4                     	;# 
  2324  1FE5                     	;# 
  2325  1FE6                     	;# 
  2326  1FE7                     	;# 
  2327  1FE8                     	;# 
  2328  1FE8                     	;# 
  2329  1FE9                     	;# 
  2330  1FEA                     	;# 
  2331  1FEA                     	;# 
  2332  1FEB                     	;# 
  2333  1FED                     	;# 
  2334  1FEE                     	;# 
  2335  1FEF                     	;# 
  2336                           
  2337 ;; Function _EUSART1_DefaultFramingErrorHandler is unused but had its address taken
  2338  0000                     
  2339 ;; Function _EUSART1_DefaultOverrunErrorHandler is unused but had its address taken
  2340  0000                     
  2341 ;; Function _EUSART1_DefaultErrorHandler is unused but had its address taken
  2342  0000                     
  2343                           	psect	nvBANK0
  2344  0050                     __pnvBANK0:	
  2345  0050                     _EUSART1_ErrorHandler:	
  2346  0050                     	ds	2
  2347  0052                     _EUSART1_OverrunErrorHandler:	
  2348  0052                     	ds	2
  2349  0054                     _EUSART1_FramingErrorHandler:	
  2350  0054                     	ds	2
  2351  0056                     _TMR1_InterruptHandler:	
  2352  0056                     	ds	2
  2353  0058                     _timer1ReloadVal:	
  2354  0058                     	ds	2
  2355  005A                     _u8_Refrigeration_State:	
  2356  005A                     	ds	1
  2357  0018                     _LATAbits	set	24
  2358  0019                     _LATBbits	set	25
  2359  0014                     _TRISC	set	20
  2360  0013                     _TRISB	set	19
  2361  0012                     _TRISA	set	18
  2362  001A                     _LATC	set	26
  2363  0019                     _LATB	set	25
  2364  0018                     _LATA	set	24
  2365  000B                     _INTCONbits	set	11
  2366  009D                     _ADCON0bits	set	157
  2367  009C                     _ADRESH	set	156
  2368  009B                     _ADRESL	set	155
  2369  009E                     _ADCON1	set	158
  2370  009D                     _ADCON0	set	157
  2371  011A                     _TX1REG	set	282
  2372  0119                     _RC1REG	set	281
  2373  011D                     _RC1STAbits	set	285
  2374  011E                     _TX1STAbits	set	286
  2375  011C                     _SP1BRGH	set	284
  2376  011B                     _SP1BRGL	set	283
  2377  011E                     _TX1STA	set	286
  2378  011D                     _RC1STA	set	285
  2379  011F                     _BAUD1CON	set	287
  2380  020F                     _T1GCONbits	set	527
  2381  020E                     _T1CONbits	set	526
  2382  020E                     _T1CON	set	526
  2383  020C                     _TMR1L	set	524
  2384  020D                     _TMR1H	set	525
  2385  0211                     _T1CLK	set	529
  2386  0210                     _T1GATE	set	528
  2387  020F                     _T1GCON	set	527
  2388  070F                     _PIR3bits	set	1807
  2389  071A                     _PIE4bits	set	1818
  2390  0710                     _PIR4bits	set	1808
  2391  079B                     _PMD5	set	1947
  2392  079A                     _PMD4	set	1946
  2393  0799                     _PMD3	set	1945
  2394  0798                     _PMD2	set	1944
  2395  0797                     _PMD1	set	1943
  2396  0796                     _PMD0	set	1942
  2397  0892                     _OSCTUNE	set	2194
  2398  0890                     _OSCSTAT	set	2192
  2399  0893                     _OSCFRQ	set	2195
  2400  0891                     _OSCEN	set	2193
  2401  088F                     _OSCCON3	set	2191
  2402  088D                     _OSCCON1	set	2189
  2403  1ECB                     _RX1DTPPS	set	7883
  2404  1F1C                     _RB4PPS	set	7964
  2405  1F52                     _INLVLC	set	8018
  2406  1F47                     _INLVLB	set	8007
  2407  1F3C                     _INLVLA	set	7996
  2408  1F51                     _SLRCONC	set	8017
  2409  1F46                     _SLRCONB	set	8006
  2410  1F3B                     _SLRCONA	set	7995
  2411  1F50                     _ODCONC	set	8016
  2412  1F45                     _ODCONB	set	8005
  2413  1F3A                     _ODCONA	set	7994
  2414  1F4F                     _WPUC	set	8015
  2415  1F39                     _WPUA	set	7993
  2416  1F44                     _WPUB	set	8004
  2417  1F38                     _ANSELA	set	7992
  2418  1F43                     _ANSELB	set	8003
  2419  1F4E                     _ANSELC	set	8014
  2420                           
  2421                           ; #config settings
  2422  0000                     
  2423                           	psect	cinit
  2424  001A                     start_initialization:	
  2425  001A                     __initialization:	
  2426                           
  2427                           ; Clear objects allocated to COMMON
  2428  001A  01F8               	clrf	__pbssCOMMON& (0+127)
  2429  001B  01F9               	clrf	(__pbssCOMMON+1)& (0+127)
  2430  001C  01FA               	clrf	(__pbssCOMMON+2)& (0+127)
  2431  001D  01FB               	clrf	(__pbssCOMMON+3)& (0+127)
  2432                           
  2433                           ; Clear objects allocated to BANK0
  2434  001E  3020               	movlw	low __pbssBANK0
  2435  001F  0084               	movwf	4
  2436  0020  3000               	movlw	high __pbssBANK0
  2437  0021  0085               	movwf	5
  2438  0022  3023               	movlw	35
  2439  0023  3185  257D  3180   	fcall	clear_ram0
  2440  0026                     end_of_initialization:	
  2441                           ;End of C runtime variable initialization code
  2442                           
  2443  0026                     __end_of__initialization:	
  2444  0026  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  2445  0027  0140               	movlb	0
  2446  0028  3180  282A         	ljmp	_main	;jump to C main() function
  2447                           
  2448                           	psect	bssCOMMON
  2449  0078                     __pbssCOMMON:	
  2450  0078                     _u16_Knob_Res:	
  2451  0078                     	ds	2
  2452  007A                     _u8_CabinetSensor_Error:	
  2453  007A                     	ds	1
  2454  007B                     _u8_CompressorStatus:	
  2455  007B                     	ds	1
  2456                           
  2457                           	psect	bssBANK0
  2458  0020                     __pbssBANK0:	
  2459  0020                     _i32_CabinetSensor_ADCsample:	
  2460  0020                     	ds	4
  2461  0024                     _u32_KnobPOT_ADCsample:	
  2462  0024                     	ds	4
  2463  0028                     _u32_Cn:	
  2464  0028                     	ds	4
  2465  002C                     _u32_Mn:	
  2466  002C                     	ds	4
  2467  0030                     _i16_CabinetSensor_Temp:	
  2468  0030                     	ds	2
  2469  0032                     _u16_ADCsample_Count:	
  2470  0032                     	ds	2
  2471  0034                     _i16_CompressorStop_Temp:	
  2472  0034                     	ds	2
  2473  0036                     _i16_CompressorStart_Temp:	
  2474  0036                     	ds	2
  2475  0038                     _u16_Error_CompressorOFF_Duration:	
  2476  0038                     	ds	2
  2477  003A                     _u16_Error_CompressorON_Duration:	
  2478  003A                     	ds	2
  2479  003C                     _u16_CompressorStop_CountDown:	
  2480  003C                     	ds	2
  2481  003E                     _u16_CompressorStart_CountDown:	
  2482  003E                     	ds	2
  2483  0040                     _u8_SetLevel:	
  2484  0040                     	ds	1
  2485  0041                     _u8_Refrigeration_Mode:	
  2486  0041                     	ds	1
  2487  0042                     _eusart1RxLastError:	
  2488  0042                     	ds	1
  2489                           
  2490                           	psect	clrtext
  2491  057D                     clear_ram0:	
  2492                           ;	Called with FSR0 containing the base address, and
  2493                           ;	WREG with the size to clear
  2494                           
  2495  057D  0064               	clrwdt	;clear the watchdog before getting into this loop
  2496  057E                     clrloop0:	
  2497  057E  0180               	clrf	0	;clear RAM location pointed to by FSR
  2498  057F  3101               	addfsr 0,1
  2499  0580  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  2500  0581  2D7E               	goto	clrloop0	;have we reached the end yet?
  2501  0582  3400               	retlw	0	;all done for this memory range, return
  2502                           
  2503                           	psect	cstackCOMMON
  2504  0070                     __pcstackCOMMON:	
  2505  0070                     ?_TMR1_DefaultInterruptHandler:	
  2506  0070                     ??_TMR1_DefaultInterruptHandler:	
  2507                           ; 1 bytes @ 0x0
  2508                           
  2509  0070                     ?_PMD_Initialize:	
  2510                           ; 1 bytes @ 0x0
  2511                           
  2512  0070                     ?_PIN_MANAGER_Initialize:	
  2513                           ; 1 bytes @ 0x0
  2514                           
  2515  0070                     ?_OSCILLATOR_Initialize:	
  2516                           ; 1 bytes @ 0x0
  2517                           
  2518  0070                     ?_TMR1_Initialize:	
  2519                           ; 1 bytes @ 0x0
  2520                           
  2521  0070                     ?_TMR1_WriteTimer:	
  2522                           ; 1 bytes @ 0x0
  2523                           
  2524  0070                     ?_TMR1_ISR:	
  2525                           ; 1 bytes @ 0x0
  2526                           
  2527  0070                     ?_ADC_Initialize:	
  2528                           ; 1 bytes @ 0x0
  2529                           
  2530  0070                     ?_EUSART1_Initialize:	
  2531                           ; 1 bytes @ 0x0
  2532                           
  2533  0070                     ?_INTERRUPT_InterruptManager:	
  2534                           ; 1 bytes @ 0x0
  2535                           
  2536  0070                     ?_SYSTEM_Initialize:	
  2537                           ; 1 bytes @ 0x0
  2538                           
  2539  0070                     ?_v_1s_service_routine:	
  2540                           ; 1 bytes @ 0x0
  2541                           
  2542  0070                     ??_v_1s_service_routine:	
  2543                           ; 1 bytes @ 0x0
  2544                           
  2545  0070                     ?_main:	
  2546                           ; 1 bytes @ 0x0
  2547                           
  2548  0070                     TMR1_WriteTimer@timerVal:	
  2549                           ; 1 bytes @ 0x0
  2550                           
  2551                           
  2552                           ; 2 bytes @ 0x0
  2553  0070                     	ds	2
  2554  0072                     ?_TMR1_SetInterruptHandler:	
  2555  0072                     ?_EUSART1_SetFramingErrorHandler:	
  2556                           ; 1 bytes @ 0x2
  2557                           
  2558  0072                     ?_EUSART1_SetOverrunErrorHandler:	
  2559                           ; 1 bytes @ 0x2
  2560                           
  2561  0072                     ?_EUSART1_SetErrorHandler:	
  2562                           ; 1 bytes @ 0x2
  2563                           
  2564  0072                     ??_PMD_Initialize:	
  2565                           ; 1 bytes @ 0x2
  2566                           
  2567  0072                     ??_PIN_MANAGER_Initialize:	
  2568                           ; 1 bytes @ 0x2
  2569                           
  2570  0072                     ??_OSCILLATOR_Initialize:	
  2571                           ; 1 bytes @ 0x2
  2572                           
  2573  0072                     ??_TMR1_WriteTimer:	
  2574                           ; 1 bytes @ 0x2
  2575                           
  2576  0072                     ??_TMR1_ISR:	
  2577                           ; 1 bytes @ 0x2
  2578                           
  2579  0072                     ??_ADC_Initialize:	
  2580                           ; 1 bytes @ 0x2
  2581                           
  2582  0072                     ??_INTERRUPT_InterruptManager:	
  2583                           ; 1 bytes @ 0x2
  2584                           
  2585  0072                     ?_v_get_slope_intercept:	
  2586                           ; 1 bytes @ 0x2
  2587                           
  2588  0072                     ??___lmul:	
  2589                           ; 1 bytes @ 0x2
  2590                           
  2591  0072                     ?_ADC_GetConversion:	
  2592                           ; 1 bytes @ 0x2
  2593                           
  2594  0072                     TMR1_SetInterruptHandler@InterruptHandler:	
  2595                           ; 2 bytes @ 0x2
  2596                           
  2597  0072                     EUSART1_SetFramingErrorHandler@interruptHandler:	
  2598                           ; 2 bytes @ 0x2
  2599                           
  2600  0072                     EUSART1_SetOverrunErrorHandler@interruptHandler:	
  2601                           ; 2 bytes @ 0x2
  2602                           
  2603  0072                     EUSART1_SetErrorHandler@interruptHandler:	
  2604                           ; 2 bytes @ 0x2
  2605                           
  2606  0072                     v_get_slope_intercept@u16_adc:	
  2607                           ; 2 bytes @ 0x2
  2608                           
  2609  0072                     ___lmul@product:	
  2610                           ; 2 bytes @ 0x2
  2611                           
  2612                           
  2613                           ; 4 bytes @ 0x2
  2614  0072                     	ds	2
  2615  0074                     ??_TMR1_SetInterruptHandler:	
  2616  0074                     ??_EUSART1_SetFramingErrorHandler:	
  2617                           ; 1 bytes @ 0x4
  2618                           
  2619  0074                     ??_EUSART1_SetOverrunErrorHandler:	
  2620                           ; 1 bytes @ 0x4
  2621                           
  2622  0074                     ??_EUSART1_SetErrorHandler:	
  2623                           ; 1 bytes @ 0x4
  2624                           
  2625  0074                     ??_TMR1_Initialize:	
  2626                           ; 1 bytes @ 0x4
  2627                           
  2628  0074                     ??_ADC_GetConversion:	
  2629                           ; 1 bytes @ 0x4
  2630                           
  2631  0074                     ??_EUSART1_Initialize:	
  2632                           ; 1 bytes @ 0x4
  2633                           
  2634  0074                     ??_SYSTEM_Initialize:	
  2635                           ; 1 bytes @ 0x4
  2636                           
  2637  0074                     ??_v_get_slope_intercept:	
  2638                           ; 1 bytes @ 0x4
  2639                           
  2640                           
  2641                           ; 1 bytes @ 0x4
  2642  0074                     	ds	1
  2643  0075                     ADC_GetConversion@channel:	
  2644                           
  2645                           ; 1 bytes @ 0x5
  2646  0075                     	ds	1
  2647  0076                     ?_u16_get_adc_value:	
  2648                           
  2649                           ; 2 bytes @ 0x6
  2650  0076                     	ds	2
  2651                           
  2652                           	psect	cstackBANK0
  2653  0043                     __pcstackBANK0:	
  2654  0043                     ??_u16_get_adc_value:	
  2655  0043                     ?___lmul:	
  2656                           ; 1 bytes @ 0x0
  2657                           
  2658  0043                     ___lmul@multiplier:	
  2659                           ; 4 bytes @ 0x0
  2660                           
  2661                           
  2662                           ; 4 bytes @ 0x0
  2663  0043                     	ds	2
  2664  0045                     u16_get_adc_value@u8_ADC_channel:	
  2665                           
  2666                           ; 1 bytes @ 0x2
  2667  0045                     	ds	1
  2668  0046                     u16_get_adc_value@u16_ADC_sample:	
  2669                           
  2670                           ; 2 bytes @ 0x3
  2671  0046                     	ds	1
  2672  0047                     ___lmul@multiplicand:	
  2673                           
  2674                           ; 4 bytes @ 0x4
  2675  0047                     	ds	4
  2676  004B                     ??_main:	
  2677                           
  2678                           ; 1 bytes @ 0x8
  2679  004B                     	ds	5
  2680                           
  2681                           	psect	maintext
  2682  002A                     __pmaintext:	
  2683 ;;
  2684 ;;Main: autosize = 0, tempsize = 5, incstack = 0, save=0
  2685 ;;
  2686 ;; *************** function _main *****************
  2687 ;; Defined at:
  2688 ;;		line 198 in file "main.c"
  2689 ;; Parameters:    Size  Location     Type
  2690 ;;		None
  2691 ;; Auto vars:     Size  Location     Type
  2692 ;;		None
  2693 ;; Return value:  Size  Location     Type
  2694 ;;                  1    wreg      void 
  2695 ;; Registers used:
  2696 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2697 ;; Tracked objects:
  2698 ;;		On entry : B3F/0
  2699 ;;		On exit  : 0/0
  2700 ;;		Unchanged: 0/0
  2701 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2702 ;;      Params:         0       0       0       0       0       0       0       0
  2703 ;;      Locals:         0       0       0       0       0       0       0       0
  2704 ;;      Temps:          0       5       0       0       0       0       0       0
  2705 ;;      Totals:         0       5       0       0       0       0       0       0
  2706 ;;Total ram usage:        5 bytes
  2707 ;; Hardware stack levels required when called:    6
  2708 ;; This function calls:
  2709 ;;		_SYSTEM_Initialize
  2710 ;;		_TMR1_SetInterruptHandler
  2711 ;;		___lmul
  2712 ;;		_u16_get_adc_value
  2713 ;;		_v_get_slope_intercept
  2714 ;; This function is called by:
  2715 ;;		Startup code after reset
  2716 ;; This function uses a non-reentrant model
  2717 ;;
  2718                           
  2719                           
  2720                           ;psect for function _main
  2721  002A                     _main:	
  2722  002A                     l2234:	
  2723                           ;incstack = 0
  2724                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2725                           
  2726                           
  2727                           ;main.c: 200:     SYSTEM_Initialize();
  2728  002A  3185  253F  3180   	fcall	_SYSTEM_Initialize
  2729  002D                     l2236:	
  2730                           
  2731                           ;main.c: 202:     (INTCONbits.GIE = 1);
  2732  002D  178B               	bsf	11,7	;volatile
  2733  002E                     l2238:	
  2734                           
  2735                           ;main.c: 204:     (INTCONbits.PEIE = 1);
  2736  002E  170B               	bsf	11,6	;volatile
  2737                           
  2738                           ;main.c: 207:     TMR1_SetInterruptHandler(v_1s_service_routine);
  2739  002F  3008               	movlw	low _v_1s_service_routine
  2740  0030  00F2               	movwf	TMR1_SetInterruptHandler@InterruptHandler
  2741  0031  3004               	movlw	high _v_1s_service_routine
  2742  0032  00F3               	movwf	TMR1_SetInterruptHandler@InterruptHandler+1
  2743  0033  3185  2583  3180   	fcall	_TMR1_SetInterruptHandler
  2744  0036                     l2240:	
  2745                           
  2746                           ;main.c: 211:     u8_CompressorStatus = 0;
  2747  0036  01FB               	clrf	_u8_CompressorStatus
  2748  0037                     l2242:	
  2749                           
  2750                           ;main.c: 212:     u16_CompressorStart_CountDown = 0;
  2751  0037  0140               	movlb	0	; select bank0
  2752  0038  01BE               	clrf	_u16_CompressorStart_CountDown
  2753  0039  01BF               	clrf	_u16_CompressorStart_CountDown+1
  2754  003A                     l2244:	
  2755                           
  2756                           ;main.c: 213:     u16_CompressorStop_CountDown = 0;
  2757  003A  01BC               	clrf	_u16_CompressorStop_CountDown
  2758  003B  01BD               	clrf	_u16_CompressorStop_CountDown+1
  2759  003C                     l2246:	
  2760                           
  2761                           ;main.c: 214:     u16_Error_CompressorON_Duration = 0;
  2762  003C  01BA               	clrf	_u16_Error_CompressorON_Duration
  2763  003D  01BB               	clrf	_u16_Error_CompressorON_Duration+1
  2764  003E                     l2248:	
  2765                           
  2766                           ;main.c: 215:     u16_Error_CompressorOFF_Duration = 0;
  2767  003E  01B8               	clrf	_u16_Error_CompressorOFF_Duration
  2768  003F  01B9               	clrf	_u16_Error_CompressorOFF_Duration+1
  2769  0040                     l2250:	
  2770                           
  2771                           ;main.c: 216:     i16_CompressorStart_Temp = 0;
  2772  0040  01B6               	clrf	_i16_CompressorStart_Temp
  2773  0041  01B7               	clrf	_i16_CompressorStart_Temp+1
  2774  0042                     l2252:	
  2775                           
  2776                           ;main.c: 217:     i16_CompressorStop_Temp = 0;
  2777  0042  01B4               	clrf	_i16_CompressorStop_Temp
  2778  0043  01B5               	clrf	_i16_CompressorStop_Temp+1
  2779  0044                     l2254:	
  2780                           
  2781                           ;main.c: 219:     u8_CabinetSensor_Error = 0;
  2782  0044  01FA               	clrf	_u8_CabinetSensor_Error
  2783  0045                     l2256:	
  2784                           
  2785                           ;main.c: 220:     u16_Knob_Res = 0;
  2786  0045  01F8               	clrf	_u16_Knob_Res
  2787  0046  01F9               	clrf	_u16_Knob_Res+1
  2788  0047                     l2258:	
  2789                           
  2790                           ;main.c: 221:     u16_ADCsample_Count = 0;
  2791  0047  01B2               	clrf	_u16_ADCsample_Count
  2792  0048  01B3               	clrf	_u16_ADCsample_Count+1
  2793  0049                     l2260:	
  2794                           
  2795                           ;main.c: 222:     u32_Mn = 0;
  2796  0049  3000               	movlw	0
  2797  004A  00AF               	movwf	_u32_Mn+3
  2798  004B  3000               	movlw	0
  2799  004C  00AE               	movwf	_u32_Mn+2
  2800  004D  3000               	movlw	0
  2801  004E  00AD               	movwf	_u32_Mn+1
  2802  004F  3000               	movlw	0
  2803  0050  00AC               	movwf	_u32_Mn
  2804  0051                     l2262:	
  2805                           
  2806                           ;main.c: 223:     u32_Cn = 0;
  2807  0051  3000               	movlw	0
  2808  0052  00AB               	movwf	_u32_Cn+3
  2809  0053  3000               	movlw	0
  2810  0054  00AA               	movwf	_u32_Cn+2
  2811  0055  3000               	movlw	0
  2812  0056  00A9               	movwf	_u32_Cn+1
  2813  0057  3000               	movlw	0
  2814  0058  00A8               	movwf	_u32_Cn
  2815  0059                     l2264:	
  2816                           
  2817                           ;main.c: 224:     i32_CabinetSensor_ADCsample = 0;
  2818  0059  3000               	movlw	0
  2819  005A  00A3               	movwf	_i32_CabinetSensor_ADCsample+3
  2820  005B  3000               	movlw	0
  2821  005C  00A2               	movwf	_i32_CabinetSensor_ADCsample+2
  2822  005D  3000               	movlw	0
  2823  005E  00A1               	movwf	_i32_CabinetSensor_ADCsample+1
  2824  005F  3000               	movlw	0
  2825  0060  00A0               	movwf	_i32_CabinetSensor_ADCsample
  2826  0061                     l2266:	
  2827                           
  2828                           ;main.c: 225:     u32_KnobPOT_ADCsample = 0;
  2829  0061  3000               	movlw	0
  2830  0062  00A7               	movwf	_u32_KnobPOT_ADCsample+3
  2831  0063  3000               	movlw	0
  2832  0064  00A6               	movwf	_u32_KnobPOT_ADCsample+2
  2833  0065  3000               	movlw	0
  2834  0066  00A5               	movwf	_u32_KnobPOT_ADCsample+1
  2835  0067  3000               	movlw	0
  2836  0068  00A4               	movwf	_u32_KnobPOT_ADCsample
  2837  0069                     l2268:	
  2838                           
  2839                           ;main.c: 226:     i16_CabinetSensor_Temp = 0;
  2840  0069  01B0               	clrf	_i16_CabinetSensor_Temp
  2841  006A  01B1               	clrf	_i16_CabinetSensor_Temp+1
  2842  006B                     l2270:	
  2843                           
  2844                           ;main.c: 228:     u8_Refrigeration_Mode = 0;
  2845  006B  01C1               	clrf	_u8_Refrigeration_Mode
  2846  006C                     l2272:	
  2847                           
  2848                           ;main.c: 229:     u8_Refrigeration_State = 1;
  2849  006C  01DA               	clrf	_u8_Refrigeration_State
  2850  006D  0ADA               	incf	_u8_Refrigeration_State,f
  2851  006E                     l2274:	
  2852                           
  2853                           ;main.c: 239:         i32_CabinetSensor_ADCsample += (int32_t) u16_get_adc_value(1);
  2854  006E  3001               	movlw	1
  2855  006F  3184  247D  3180   	fcall	_u16_get_adc_value
  2856  0072  0876               	movf	?_u16_get_adc_value,w
  2857  0073  0140               	movlb	0	; select bank0
  2858  0074  07A0               	addwf	_i32_CabinetSensor_ADCsample,f
  2859  0075  0877               	movf	?_u16_get_adc_value+1,w
  2860  0076  3DA1               	addwfc	_i32_CabinetSensor_ADCsample+1,f
  2861  0077  3000               	movlw	0
  2862  0078  3DA2               	addwfc	_i32_CabinetSensor_ADCsample+2,f
  2863  0079  3DA3               	addwfc	_i32_CabinetSensor_ADCsample+3,f
  2864  007A                     l2276:	
  2865                           
  2866                           ;main.c: 240:         u32_KnobPOT_ADCsample += (uint32_t) u16_get_adc_value(2);
  2867  007A  3002               	movlw	2
  2868  007B  3184  247D  3180   	fcall	_u16_get_adc_value
  2869  007E  0876               	movf	?_u16_get_adc_value,w
  2870  007F  0140               	movlb	0	; select bank0
  2871  0080  07A4               	addwf	_u32_KnobPOT_ADCsample,f
  2872  0081  0877               	movf	?_u16_get_adc_value+1,w
  2873  0082  3DA5               	addwfc	_u32_KnobPOT_ADCsample+1,f
  2874  0083  3000               	movlw	0
  2875  0084  3DA6               	addwfc	_u32_KnobPOT_ADCsample+2,f
  2876  0085  3DA7               	addwfc	_u32_KnobPOT_ADCsample+3,f
  2877  0086                     l2278:	
  2878                           
  2879                           ;main.c: 241:         u16_ADCsample_Count++;
  2880  0086  3001               	movlw	1
  2881  0087  07B2               	addwf	_u16_ADCsample_Count,f
  2882  0088  3000               	movlw	0
  2883  0089  3DB3               	addwfc	_u16_ADCsample_Count+1,f
  2884  008A                     l2280:	
  2885                           
  2886                           ;main.c: 245:         if (u16_ADCsample_Count == 1024) {
  2887  008A  3004               	movlw	4
  2888  008B  0633               	xorwf	_u16_ADCsample_Count+1,w
  2889  008C  0432               	iorwf	_u16_ADCsample_Count,w
  2890  008D  1D03               	btfss	3,2
  2891  008E  2890               	goto	u1441
  2892  008F  2891               	goto	u1440
  2893  0090                     u1441:	
  2894  0090  293F               	goto	l2308
  2895  0091                     u1440:	
  2896  0091                     l2282:	
  2897                           
  2898                           ;main.c: 250:             i32_CabinetSensor_ADCsample = i32_CabinetSensor_ADCsample >> 1
      +                          0;
  2899  0091  0820               	movf	_i32_CabinetSensor_ADCsample,w
  2900  0092  00CB               	movwf	??_main
  2901  0093  0821               	movf	_i32_CabinetSensor_ADCsample+1,w
  2902  0094  00CC               	movwf	??_main+1
  2903  0095  0822               	movf	_i32_CabinetSensor_ADCsample+2,w
  2904  0096  00CD               	movwf	??_main+2
  2905  0097  0823               	movf	_i32_CabinetSensor_ADCsample+3,w
  2906  0098  00CE               	movwf	??_main+3
  2907  0099  300A               	movlw	10
  2908  009A  00CF               	movwf	??_main+4
  2909  009B                     u1455:	
  2910  009B  37CE               	asrf	??_main+3,f
  2911  009C  0CCD               	rrf	??_main+2,f
  2912  009D  0CCC               	rrf	??_main+1,f
  2913  009E  0CCB               	rrf	??_main,f
  2914  009F                     u1450:	
  2915  009F  0BCF               	decfsz	??_main+4,f
  2916  00A0  289B               	goto	u1455
  2917  00A1  084E               	movf	??_main+3,w
  2918  00A2  00A3               	movwf	_i32_CabinetSensor_ADCsample+3
  2919  00A3  084D               	movf	??_main+2,w
  2920  00A4  00A2               	movwf	_i32_CabinetSensor_ADCsample+2
  2921  00A5  084C               	movf	??_main+1,w
  2922  00A6  00A1               	movwf	_i32_CabinetSensor_ADCsample+1
  2923  00A7  084B               	movf	??_main,w
  2924  00A8  00A0               	movwf	_i32_CabinetSensor_ADCsample
  2925                           
  2926                           ;main.c: 252:             if (i32_CabinetSensor_ADCsample <= 203) {
  2927  00A9  1BA3               	btfsc	_i32_CabinetSensor_ADCsample+3,7
  2928  00AA  28BA               	goto	u1460
  2929  00AB  0823               	movf	_i32_CabinetSensor_ADCsample+3,w
  2930  00AC  1D03               	btfss	3,2
  2931  00AD  28B9               	goto	u1461
  2932  00AE  0822               	movf	_i32_CabinetSensor_ADCsample+2,w
  2933  00AF  1D03               	btfss	3,2
  2934  00B0  28B9               	goto	u1461
  2935  00B1  0821               	movf	_i32_CabinetSensor_ADCsample+1,w
  2936  00B2  1D03               	btfss	3,2
  2937  00B3  28B9               	goto	u1461
  2938  00B4  30CC               	movlw	204
  2939  00B5  0220               	subwf	_i32_CabinetSensor_ADCsample,w
  2940  00B6  1803               	btfsc	3,0
  2941  00B7  28B9               	goto	u1461
  2942  00B8  28BA               	goto	u1460
  2943  00B9                     u1461:	
  2944  00B9  28BD               	goto	l2286
  2945  00BA                     u1460:	
  2946  00BA                     l2284:	
  2947                           
  2948                           ;main.c: 254:                 u8_CabinetSensor_Error = 1;
  2949  00BA  01FA               	clrf	_u8_CabinetSensor_Error
  2950  00BB  0AFA               	incf	_u8_CabinetSensor_Error,f
  2951                           
  2952                           ;main.c: 255:             } else if (i32_CabinetSensor_ADCsample >= 994) {
  2953  00BC  2912               	goto	l2300
  2954  00BD                     l2286:	
  2955  00BD  1BA3               	btfsc	_i32_CabinetSensor_ADCsample+3,7
  2956  00BE  28CC               	goto	u1471
  2957  00BF  0823               	movf	_i32_CabinetSensor_ADCsample+3,w
  2958  00C0  1D03               	btfss	3,2
  2959  00C1  28CD               	goto	u1470
  2960  00C2  0822               	movf	_i32_CabinetSensor_ADCsample+2,w
  2961  00C3  1D03               	btfss	3,2
  2962  00C4  28CD               	goto	u1470
  2963  00C5  30E2               	movlw	226
  2964  00C6  0220               	subwf	_i32_CabinetSensor_ADCsample,w
  2965  00C7  3003               	movlw	3
  2966  00C8  3B21               	subwfb	_i32_CabinetSensor_ADCsample+1,w
  2967  00C9  1C03               	btfss	3,0
  2968  00CA  28CC               	goto	u1471
  2969  00CB  28CD               	goto	u1470
  2970  00CC                     u1471:	
  2971  00CC  28CE               	goto	l2290
  2972  00CD                     u1470:	
  2973  00CD  28BA               	goto	l2284
  2974  00CE                     l2290:	
  2975                           
  2976                           ;main.c: 260:                 u8_CabinetSensor_Error = 0;
  2977  00CE  01FA               	clrf	_u8_CabinetSensor_Error
  2978  00CF                     l2292:	
  2979                           
  2980                           ;main.c: 261:                 v_get_slope_intercept((uint16_t) i32_CabinetSensor_ADCsamp
      +                          le);
  2981  00CF  0821               	movf	_i32_CabinetSensor_ADCsample+1,w
  2982  00D0  00F3               	movwf	v_get_slope_intercept@u16_adc+1
  2983  00D1  0820               	movf	_i32_CabinetSensor_ADCsample,w
  2984  00D2  00F2               	movwf	v_get_slope_intercept@u16_adc
  2985  00D3  3182  22F3  3180   	fcall	_v_get_slope_intercept
  2986  00D6                     l2294:	
  2987                           
  2988                           ;main.c: 262:                 i32_CabinetSensor_ADCsample = i32_CabinetSensor_ADCsample 
      +                          * u32_Mn;
  2989  00D6  0140               	movlb	0	; select bank0
  2990  00D7  0823               	movf	_i32_CabinetSensor_ADCsample+3,w
  2991  00D8  00C6               	movwf	___lmul@multiplier+3
  2992  00D9  0822               	movf	_i32_CabinetSensor_ADCsample+2,w
  2993  00DA  00C5               	movwf	___lmul@multiplier+2
  2994  00DB  0821               	movf	_i32_CabinetSensor_ADCsample+1,w
  2995  00DC  00C4               	movwf	___lmul@multiplier+1
  2996  00DD  0820               	movf	_i32_CabinetSensor_ADCsample,w
  2997  00DE  00C3               	movwf	___lmul@multiplier
  2998  00DF  082F               	movf	_u32_Mn+3,w
  2999  00E0  00CA               	movwf	___lmul@multiplicand+3
  3000  00E1  082E               	movf	_u32_Mn+2,w
  3001  00E2  00C9               	movwf	___lmul@multiplicand+2
  3002  00E3  082D               	movf	_u32_Mn+1,w
  3003  00E4  00C8               	movwf	___lmul@multiplicand+1
  3004  00E5  082C               	movf	_u32_Mn,w
  3005  00E6  00C7               	movwf	___lmul@multiplicand
  3006  00E7  3184  2449  3180   	fcall	___lmul
  3007  00EA  0140               	movlb	0	; select bank0
  3008  00EB  0846               	movf	?___lmul+3,w
  3009  00EC  00A3               	movwf	_i32_CabinetSensor_ADCsample+3
  3010  00ED  0845               	movf	?___lmul+2,w
  3011  00EE  00A2               	movwf	_i32_CabinetSensor_ADCsample+2
  3012  00EF  0844               	movf	?___lmul+1,w
  3013  00F0  00A1               	movwf	_i32_CabinetSensor_ADCsample+1
  3014  00F1  0843               	movf	?___lmul,w
  3015  00F2  00A0               	movwf	_i32_CabinetSensor_ADCsample
  3016  00F3                     l2296:	
  3017                           
  3018                           ;main.c: 263:                 i32_CabinetSensor_ADCsample = (u32_Cn - i32_CabinetSensor_
      +                          ADCsample) >> 10;
  3019  00F3  0820               	movf	_i32_CabinetSensor_ADCsample,w
  3020  00F4  0228               	subwf	_u32_Cn,w
  3021  00F5  00CB               	movwf	??_main
  3022  00F6  0821               	movf	_i32_CabinetSensor_ADCsample+1,w
  3023  00F7  3B29               	subwfb	_u32_Cn+1,w
  3024  00F8  00CC               	movwf	??_main+1
  3025  00F9  0822               	movf	_i32_CabinetSensor_ADCsample+2,w
  3026  00FA  3B2A               	subwfb	_u32_Cn+2,w
  3027  00FB  00CD               	movwf	??_main+2
  3028  00FC  0823               	movf	_i32_CabinetSensor_ADCsample+3,w
  3029  00FD  3B2B               	subwfb	_u32_Cn+3,w
  3030  00FE  00CE               	movwf	??_main+3
  3031  00FF  300A               	movlw	10
  3032  0100                     u1485:	
  3033  0100  36CE               	lsrf	??_main+3,f
  3034  0101  0CCD               	rrf	??_main+2,f
  3035  0102  0CCC               	rrf	??_main+1,f
  3036  0103  0CCB               	rrf	??_main,f
  3037  0104                     u1480:	
  3038  0104  0B89               	decfsz	9,f
  3039  0105  2900               	goto	u1485
  3040  0106  084E               	movf	??_main+3,w
  3041  0107  00A3               	movwf	_i32_CabinetSensor_ADCsample+3
  3042  0108  084D               	movf	??_main+2,w
  3043  0109  00A2               	movwf	_i32_CabinetSensor_ADCsample+2
  3044  010A  084C               	movf	??_main+1,w
  3045  010B  00A1               	movwf	_i32_CabinetSensor_ADCsample+1
  3046  010C  084B               	movf	??_main,w
  3047  010D  00A0               	movwf	_i32_CabinetSensor_ADCsample
  3048  010E                     l2298:	
  3049                           
  3050                           ;main.c: 264:                 i16_CabinetSensor_Temp = (int16_t) i32_CabinetSensor_ADCsa
      +                          mple + 0;
  3051  010E  0821               	movf	_i32_CabinetSensor_ADCsample+1,w
  3052  010F  00B1               	movwf	_i16_CabinetSensor_Temp+1
  3053  0110  0820               	movf	_i32_CabinetSensor_ADCsample,w
  3054  0111  00B0               	movwf	_i16_CabinetSensor_Temp
  3055  0112                     l2300:	
  3056                           
  3057                           ;main.c: 271:             u32_KnobPOT_ADCsample = u32_KnobPOT_ADCsample >> 10;
  3058  0112  0824               	movf	_u32_KnobPOT_ADCsample,w
  3059  0113  00CB               	movwf	??_main
  3060  0114  0825               	movf	_u32_KnobPOT_ADCsample+1,w
  3061  0115  00CC               	movwf	??_main+1
  3062  0116  0826               	movf	_u32_KnobPOT_ADCsample+2,w
  3063  0117  00CD               	movwf	??_main+2
  3064  0118  0827               	movf	_u32_KnobPOT_ADCsample+3,w
  3065  0119  00CE               	movwf	??_main+3
  3066  011A  300A               	movlw	10
  3067  011B                     u1495:	
  3068  011B  36CE               	lsrf	??_main+3,f
  3069  011C  0CCD               	rrf	??_main+2,f
  3070  011D  0CCC               	rrf	??_main+1,f
  3071  011E  0CCB               	rrf	??_main,f
  3072  011F                     u1490:	
  3073  011F  0B89               	decfsz	9,f
  3074  0120  291B               	goto	u1495
  3075  0121  084E               	movf	??_main+3,w
  3076  0122  00A7               	movwf	_u32_KnobPOT_ADCsample+3
  3077  0123  084D               	movf	??_main+2,w
  3078  0124  00A6               	movwf	_u32_KnobPOT_ADCsample+2
  3079  0125  084C               	movf	??_main+1,w
  3080  0126  00A5               	movwf	_u32_KnobPOT_ADCsample+1
  3081  0127  084B               	movf	??_main,w
  3082  0128  00A4               	movwf	_u32_KnobPOT_ADCsample
  3083  0129                     l2302:	
  3084                           
  3085                           ;main.c: 272:             u16_Knob_Res = (uint16_t) u32_KnobPOT_ADCsample;
  3086  0129  0825               	movf	_u32_KnobPOT_ADCsample+1,w
  3087  012A  00F9               	movwf	_u16_Knob_Res+1
  3088  012B  0824               	movf	_u32_KnobPOT_ADCsample,w
  3089  012C  00F8               	movwf	_u16_Knob_Res
  3090                           
  3091                           ;main.c: 277:             u16_ADCsample_Count = 0;
  3092  012D  01B2               	clrf	_u16_ADCsample_Count
  3093  012E  01B3               	clrf	_u16_ADCsample_Count+1
  3094  012F                     l2304:	
  3095                           
  3096                           ;main.c: 278:             i32_CabinetSensor_ADCsample = 0;
  3097  012F  3000               	movlw	0
  3098  0130  00A3               	movwf	_i32_CabinetSensor_ADCsample+3
  3099  0131  3000               	movlw	0
  3100  0132  00A2               	movwf	_i32_CabinetSensor_ADCsample+2
  3101  0133  3000               	movlw	0
  3102  0134  00A1               	movwf	_i32_CabinetSensor_ADCsample+1
  3103  0135  3000               	movlw	0
  3104  0136  00A0               	movwf	_i32_CabinetSensor_ADCsample
  3105  0137                     l2306:	
  3106                           
  3107                           ;main.c: 279:             u32_KnobPOT_ADCsample = 0;
  3108  0137  3000               	movlw	0
  3109  0138  00A7               	movwf	_u32_KnobPOT_ADCsample+3
  3110  0139  3000               	movlw	0
  3111  013A  00A6               	movwf	_u32_KnobPOT_ADCsample+2
  3112  013B  3000               	movlw	0
  3113  013C  00A5               	movwf	_u32_KnobPOT_ADCsample+1
  3114  013D  3000               	movlw	0
  3115  013E  00A4               	movwf	_u32_KnobPOT_ADCsample
  3116  013F                     l2308:	
  3117                           
  3118                           ;main.c: 287:         if (u16_Knob_Res > 994) {
  3119  013F  3003               	movlw	3
  3120  0140  0279               	subwf	_u16_Knob_Res+1,w
  3121  0141  30E3               	movlw	227
  3122  0142  1903               	skipnz
  3123  0143  0278               	subwf	_u16_Knob_Res,w
  3124  0144  1C03               	skipc
  3125  0145  2947               	goto	u1501
  3126  0146  2948               	goto	u1500
  3127  0147                     u1501:	
  3128  0147  294A               	goto	l2312
  3129  0148                     u1500:	
  3130  0148                     l2310:	
  3131                           
  3132                           ;main.c: 288:             u8_Refrigeration_Mode = 0;
  3133  0148  01C1               	clrf	_u8_Refrigeration_Mode
  3134                           
  3135                           ;main.c: 289:         } else if (u16_Knob_Res > 897) {
  3136  0149  2AC3               	goto	l2434
  3137  014A                     l2312:	
  3138  014A  3003               	movlw	3
  3139  014B  0279               	subwf	_u16_Knob_Res+1,w
  3140  014C  3082               	movlw	130
  3141  014D  1903               	skipnz
  3142  014E  0278               	subwf	_u16_Knob_Res,w
  3143  014F  1C03               	skipc
  3144  0150  2952               	goto	u1511
  3145  0151  2953               	goto	u1510
  3146  0152                     u1511:	
  3147  0152  296A               	goto	l2320
  3148  0153                     u1510:	
  3149  0153                     l2314:	
  3150                           
  3151                           ;main.c: 290:             if (u8_CabinetSensor_Error == 0) {
  3152  0153  087A               	movf	_u8_CabinetSensor_Error,w
  3153  0154  1D03               	btfss	3,2
  3154  0155  2957               	goto	u1521
  3155  0156  2958               	goto	u1520
  3156  0157                     u1521:	
  3157  0157  2965               	goto	l2318
  3158  0158                     u1520:	
  3159  0158                     l2316:	
  3160                           
  3161                           ;main.c: 291:                 u8_Refrigeration_Mode = 2;
  3162  0158  3002               	movlw	2
  3163  0159  00CB               	movwf	??_main
  3164  015A  084B               	movf	??_main,w
  3165  015B  00C1               	movwf	_u8_Refrigeration_Mode
  3166                           
  3167                           ;main.c: 292:                 i16_CompressorStop_Temp = 25;
  3168  015C  3019               	movlw	25
  3169  015D  00B4               	movwf	_i16_CompressorStop_Temp
  3170  015E  3000               	movlw	0
  3171  015F  00B5               	movwf	_i16_CompressorStop_Temp+1
  3172                           
  3173                           ;main.c: 293:                 i16_CompressorStart_Temp = 60;
  3174  0160  303C               	movlw	60
  3175  0161  00B6               	movwf	_i16_CompressorStart_Temp
  3176  0162  3000               	movlw	0
  3177  0163  00B7               	movwf	_i16_CompressorStart_Temp+1
  3178                           
  3179                           ;main.c: 294:             } else {
  3180  0164  2AC3               	goto	l2434
  3181  0165                     l2318:	
  3182                           
  3183                           ;main.c: 295:                 u8_Refrigeration_Mode = 3;
  3184  0165  3003               	movlw	3
  3185  0166  00CB               	movwf	??_main
  3186  0167  084B               	movf	??_main,w
  3187  0168  00C1               	movwf	_u8_Refrigeration_Mode
  3188  0169  2AC3               	goto	l2434
  3189  016A                     l2320:	
  3190  016A  3002               	movlw	2
  3191  016B  0279               	subwf	_u16_Knob_Res+1,w
  3192  016C  30FB               	movlw	251
  3193  016D  1903               	skipnz
  3194  016E  0278               	subwf	_u16_Knob_Res,w
  3195  016F  1C03               	skipc
  3196  0170  2972               	goto	u1531
  3197  0171  2973               	goto	u1530
  3198  0172                     u1531:	
  3199  0172  2985               	goto	l2328
  3200  0173                     u1530:	
  3201  0173                     l2322:	
  3202                           
  3203                           ;main.c: 298:             if (u8_CabinetSensor_Error == 0) {
  3204  0173  087A               	movf	_u8_CabinetSensor_Error,w
  3205  0174  1D03               	btfss	3,2
  3206  0175  2977               	goto	u1541
  3207  0176  2978               	goto	u1540
  3208  0177                     u1541:	
  3209  0177  2965               	goto	l2318
  3210  0178                     u1540:	
  3211  0178                     l2324:	
  3212                           
  3213                           ;main.c: 299:                 u8_Refrigeration_Mode = 2;
  3214  0178  3002               	movlw	2
  3215  0179  00CB               	movwf	??_main
  3216  017A  084B               	movf	??_main,w
  3217  017B  00C1               	movwf	_u8_Refrigeration_Mode
  3218                           
  3219                           ;main.c: 300:                 i16_CompressorStop_Temp = 20;
  3220  017C  3014               	movlw	20
  3221  017D  00B4               	movwf	_i16_CompressorStop_Temp
  3222  017E  3000               	movlw	0
  3223  017F  00B5               	movwf	_i16_CompressorStop_Temp+1
  3224                           
  3225                           ;main.c: 301:                 i16_CompressorStart_Temp = 56;
  3226  0180  3038               	movlw	56
  3227  0181  00B6               	movwf	_i16_CompressorStart_Temp
  3228  0182  3000               	movlw	0
  3229  0183  00B7               	movwf	_i16_CompressorStart_Temp+1
  3230                           
  3231                           ;main.c: 302:             } else {
  3232  0184  2AC3               	goto	l2434
  3233  0185                     l2328:	
  3234  0185  3002               	movlw	2
  3235  0186  0279               	subwf	_u16_Knob_Res+1,w
  3236  0187  3067               	movlw	103
  3237  0188  1903               	skipnz
  3238  0189  0278               	subwf	_u16_Knob_Res,w
  3239  018A  1C03               	skipc
  3240  018B  298D               	goto	u1551
  3241  018C  298E               	goto	u1550
  3242  018D                     u1551:	
  3243  018D  29A0               	goto	l2336
  3244  018E                     u1550:	
  3245  018E                     l2330:	
  3246                           
  3247                           ;main.c: 306:             if (u8_CabinetSensor_Error == 0) {
  3248  018E  087A               	movf	_u8_CabinetSensor_Error,w
  3249  018F  1D03               	btfss	3,2
  3250  0190  2992               	goto	u1561
  3251  0191  2993               	goto	u1560
  3252  0192                     u1561:	
  3253  0192  2965               	goto	l2318
  3254  0193                     u1560:	
  3255  0193                     l2332:	
  3256                           
  3257                           ;main.c: 307:                 u8_Refrigeration_Mode = 2;
  3258  0193  3002               	movlw	2
  3259  0194  00CB               	movwf	??_main
  3260  0195  084B               	movf	??_main,w
  3261  0196  00C1               	movwf	_u8_Refrigeration_Mode
  3262                           
  3263                           ;main.c: 308:                 i16_CompressorStop_Temp = 12;
  3264  0197  300C               	movlw	12
  3265  0198  00B4               	movwf	_i16_CompressorStop_Temp
  3266  0199  3000               	movlw	0
  3267  019A  00B5               	movwf	_i16_CompressorStop_Temp+1
  3268                           
  3269                           ;main.c: 309:                 i16_CompressorStart_Temp = 48;
  3270  019B  3030               	movlw	48
  3271  019C  00B6               	movwf	_i16_CompressorStart_Temp
  3272  019D  3000               	movlw	0
  3273  019E  00B7               	movwf	_i16_CompressorStart_Temp+1
  3274                           
  3275                           ;main.c: 310:             } else {
  3276  019F  2AC3               	goto	l2434
  3277  01A0                     l2336:	
  3278  01A0  3001               	movlw	1
  3279  01A1  0279               	subwf	_u16_Knob_Res+1,w
  3280  01A2  30CA               	movlw	202
  3281  01A3  1903               	skipnz
  3282  01A4  0278               	subwf	_u16_Knob_Res,w
  3283  01A5  1C03               	skipc
  3284  01A6  29A8               	goto	u1571
  3285  01A7  29A9               	goto	u1570
  3286  01A8                     u1571:	
  3287  01A8  29B9               	goto	l2348
  3288  01A9                     u1570:	
  3289  01A9                     l2338:	
  3290                           
  3291                           ;main.c: 314:             if (u8_CabinetSensor_Error == 0) {
  3292  01A9  087A               	movf	_u8_CabinetSensor_Error,w
  3293  01AA  1D03               	btfss	3,2
  3294  01AB  29AD               	goto	u1581
  3295  01AC  29AE               	goto	u1580
  3296  01AD                     u1581:	
  3297  01AD  2965               	goto	l2318
  3298  01AE                     u1580:	
  3299  01AE                     l2340:	
  3300                           
  3301                           ;main.c: 315:                 u8_Refrigeration_Mode = 2;
  3302  01AE  3002               	movlw	2
  3303  01AF  00CB               	movwf	??_main
  3304  01B0  084B               	movf	??_main,w
  3305  01B1  00C1               	movwf	_u8_Refrigeration_Mode
  3306  01B2                     l2342:	
  3307                           
  3308                           ;main.c: 316:                 i16_CompressorStop_Temp = 0;
  3309  01B2  01B4               	clrf	_i16_CompressorStop_Temp
  3310  01B3  01B5               	clrf	_i16_CompressorStop_Temp+1
  3311  01B4                     l2344:	
  3312                           
  3313                           ;main.c: 317:                 i16_CompressorStart_Temp = 37;
  3314  01B4  3025               	movlw	37
  3315  01B5  00B6               	movwf	_i16_CompressorStart_Temp
  3316  01B6  3000               	movlw	0
  3317  01B7  00B7               	movwf	_i16_CompressorStart_Temp+1
  3318                           
  3319                           ;main.c: 318:             } else {
  3320  01B8  2AC3               	goto	l2434
  3321  01B9                     l2348:	
  3322  01B9  3001               	movlw	1
  3323  01BA  0279               	subwf	_u16_Knob_Res+1,w
  3324  01BB  3030               	movlw	48
  3325  01BC  1903               	skipnz
  3326  01BD  0278               	subwf	_u16_Knob_Res,w
  3327  01BE  1C03               	skipc
  3328  01BF  29C1               	goto	u1591
  3329  01C0  29C2               	goto	u1590
  3330  01C1                     u1591:	
  3331  01C1  29D4               	goto	l2356
  3332  01C2                     u1590:	
  3333  01C2                     l2350:	
  3334                           
  3335                           ;main.c: 322:             if (u8_CabinetSensor_Error == 0) {
  3336  01C2  087A               	movf	_u8_CabinetSensor_Error,w
  3337  01C3  1D03               	btfss	3,2
  3338  01C4  29C6               	goto	u1601
  3339  01C5  29C7               	goto	u1600
  3340  01C6                     u1601:	
  3341  01C6  2965               	goto	l2318
  3342  01C7                     u1600:	
  3343  01C7                     l2352:	
  3344                           
  3345                           ;main.c: 323:                 u8_Refrigeration_Mode = 2;
  3346  01C7  3002               	movlw	2
  3347  01C8  00CB               	movwf	??_main
  3348  01C9  084B               	movf	??_main,w
  3349  01CA  00C1               	movwf	_u8_Refrigeration_Mode
  3350                           
  3351                           ;main.c: 324:                 i16_CompressorStop_Temp = -6;
  3352  01CB  30FA               	movlw	250
  3353  01CC  00B4               	movwf	_i16_CompressorStop_Temp
  3354  01CD  30FF               	movlw	255
  3355  01CE  00B5               	movwf	_i16_CompressorStop_Temp+1
  3356                           
  3357                           ;main.c: 325:                 i16_CompressorStart_Temp = 32;
  3358  01CF  3020               	movlw	32
  3359  01D0  00B6               	movwf	_i16_CompressorStart_Temp
  3360  01D1  3000               	movlw	0
  3361  01D2  00B7               	movwf	_i16_CompressorStart_Temp+1
  3362                           
  3363                           ;main.c: 326:             } else {
  3364  01D3  2AC3               	goto	l2434
  3365  01D4                     l2356:	
  3366  01D4  3000               	movlw	0
  3367  01D5  0279               	subwf	_u16_Knob_Res+1,w
  3368  01D6  309C               	movlw	156
  3369  01D7  1903               	skipnz
  3370  01D8  0278               	subwf	_u16_Knob_Res,w
  3371  01D9  1C03               	skipc
  3372  01DA  29DC               	goto	u1611
  3373  01DB  29DD               	goto	u1610
  3374  01DC                     u1611:	
  3375  01DC  29EF               	goto	l2364
  3376  01DD                     u1610:	
  3377  01DD                     l2358:	
  3378                           
  3379                           ;main.c: 330:             if (u8_CabinetSensor_Error == 0) {
  3380  01DD  087A               	movf	_u8_CabinetSensor_Error,w
  3381  01DE  1D03               	btfss	3,2
  3382  01DF  29E1               	goto	u1621
  3383  01E0  29E2               	goto	u1620
  3384  01E1                     u1621:	
  3385  01E1  2965               	goto	l2318
  3386  01E2                     u1620:	
  3387  01E2                     l2360:	
  3388                           
  3389                           ;main.c: 331:                 u8_Refrigeration_Mode = 2;
  3390  01E2  3002               	movlw	2
  3391  01E3  00CB               	movwf	??_main
  3392  01E4  084B               	movf	??_main,w
  3393  01E5  00C1               	movwf	_u8_Refrigeration_Mode
  3394                           
  3395                           ;main.c: 332:                 i16_CompressorStop_Temp = -15;
  3396  01E6  30F1               	movlw	241
  3397  01E7  00B4               	movwf	_i16_CompressorStop_Temp
  3398  01E8  30FF               	movlw	255
  3399  01E9  00B5               	movwf	_i16_CompressorStop_Temp+1
  3400                           
  3401                           ;main.c: 333:                 i16_CompressorStart_Temp = 24;
  3402  01EA  3018               	movlw	24
  3403  01EB  00B6               	movwf	_i16_CompressorStart_Temp
  3404  01EC  3000               	movlw	0
  3405  01ED  00B7               	movwf	_i16_CompressorStart_Temp+1
  3406                           
  3407                           ;main.c: 334:             } else {
  3408  01EE  2AC3               	goto	l2434
  3409  01EF                     l2364:	
  3410  01EF  3000               	movlw	0
  3411  01F0  0279               	subwf	_u16_Knob_Res+1,w
  3412  01F1  302C               	movlw	44
  3413  01F2  1903               	skipnz
  3414  01F3  0278               	subwf	_u16_Knob_Res,w
  3415  01F4  1C03               	skipc
  3416  01F5  29F7               	goto	u1631
  3417  01F6  29F8               	goto	u1630
  3418  01F7                     u1631:	
  3419  01F7  2A0A               	goto	l432
  3420  01F8                     u1630:	
  3421  01F8                     l2366:	
  3422                           
  3423                           ;main.c: 338:             if (u8_CabinetSensor_Error == 0) {
  3424  01F8  087A               	movf	_u8_CabinetSensor_Error,w
  3425  01F9  1D03               	btfss	3,2
  3426  01FA  29FC               	goto	u1641
  3427  01FB  29FD               	goto	u1640
  3428  01FC                     u1641:	
  3429  01FC  2965               	goto	l2318
  3430  01FD                     u1640:	
  3431  01FD                     l2368:	
  3432                           
  3433                           ;main.c: 339:                 u8_Refrigeration_Mode = 2;
  3434  01FD  3002               	movlw	2
  3435  01FE  00CB               	movwf	??_main
  3436  01FF  084B               	movf	??_main,w
  3437  0200  00C1               	movwf	_u8_Refrigeration_Mode
  3438                           
  3439                           ;main.c: 340:                 i16_CompressorStop_Temp = -25;
  3440  0201  30E7               	movlw	231
  3441  0202  00B4               	movwf	_i16_CompressorStop_Temp
  3442  0203  30FF               	movlw	255
  3443  0204  00B5               	movwf	_i16_CompressorStop_Temp+1
  3444                           
  3445                           ;main.c: 341:                 i16_CompressorStart_Temp = 15;
  3446  0205  300F               	movlw	15
  3447  0206  00B6               	movwf	_i16_CompressorStart_Temp
  3448  0207  3000               	movlw	0
  3449  0208  00B7               	movwf	_i16_CompressorStart_Temp+1
  3450                           
  3451                           ;main.c: 342:             } else {
  3452  0209  2AC3               	goto	l2434
  3453  020A                     l432:	
  3454                           
  3455                           ;main.c: 346:             u8_Refrigeration_Mode = 1;
  3456  020A  01C1               	clrf	_u8_Refrigeration_Mode
  3457  020B  0AC1               	incf	_u8_Refrigeration_Mode,f
  3458  020C  2AC3               	goto	l2434
  3459  020D                     l2372:	
  3460                           
  3461                           ;main.c: 359:                 if (u8_CompressorStatus == 1) {
  3462  020D  037B               	decf	_u8_CompressorStatus,w
  3463  020E  1D03               	btfss	3,2
  3464  020F  2A11               	goto	u1651
  3465  0210  2A12               	goto	u1650
  3466  0211                     u1651:	
  3467  0211  2A1A               	goto	l2376
  3468  0212                     u1650:	
  3469  0212                     l2374:	
  3470                           
  3471                           ;main.c: 360:                     u8_CompressorStatus = 3;
  3472  0212  3003               	movlw	3
  3473  0213  00CB               	movwf	??_main
  3474  0214  084B               	movf	??_main,w
  3475  0215  00FB               	movwf	_u8_CompressorStatus
  3476                           
  3477                           ;main.c: 361:                     u16_CompressorStop_CountDown = 20;
  3478  0216  3014               	movlw	20
  3479  0217  00BC               	movwf	_u16_CompressorStop_CountDown
  3480  0218  3000               	movlw	0
  3481  0219  00BD               	movwf	_u16_CompressorStop_CountDown+1
  3482  021A                     l2376:	
  3483                           
  3484                           ;main.c: 363:                 if (u8_CompressorStatus == 3 && !u16_CompressorStop_CountD
      +                          own) {
  3485  021A  3003               	movlw	3
  3486  021B  067B               	xorwf	_u8_CompressorStatus,w
  3487  021C  1D03               	btfss	3,2
  3488  021D  2A1F               	goto	u1661
  3489  021E  2A20               	goto	u1660
  3490  021F                     u1661:	
  3491  021F  2AE0               	goto	l2438
  3492  0220                     u1660:	
  3493  0220                     l2378:	
  3494  0220  083C               	movf	_u16_CompressorStop_CountDown,w
  3495  0221  043D               	iorwf	_u16_CompressorStop_CountDown+1,w
  3496  0222  1D03               	btfss	3,2
  3497  0223  2A25               	goto	u1671
  3498  0224  2A26               	goto	u1670
  3499  0225                     u1671:	
  3500  0225  2AE0               	goto	l2438
  3501  0226                     u1670:	
  3502  0226                     l2380:	
  3503                           
  3504                           ;main.c: 364:                     u8_CompressorStatus = 0;
  3505  0226  01FB               	clrf	_u8_CompressorStatus
  3506  0227  2AE0               	goto	l2438
  3507  0228                     l2382:	
  3508                           
  3509                           ;main.c: 369:                 if (u8_CompressorStatus == 0) {
  3510  0228  087B               	movf	_u8_CompressorStatus,w
  3511  0229  1D03               	btfss	3,2
  3512  022A  2A2C               	goto	u1681
  3513  022B  2A2D               	goto	u1680
  3514  022C                     u1681:	
  3515  022C  2A35               	goto	l2386
  3516  022D                     u1680:	
  3517  022D                     l2384:	
  3518                           
  3519                           ;main.c: 370:                     u8_CompressorStatus = 2;
  3520  022D  3002               	movlw	2
  3521  022E  00CB               	movwf	??_main
  3522  022F  084B               	movf	??_main,w
  3523  0230  00FB               	movwf	_u8_CompressorStatus
  3524                           
  3525                           ;main.c: 371:                     u16_CompressorStart_CountDown = 20;
  3526  0231  3014               	movlw	20
  3527  0232  00BE               	movwf	_u16_CompressorStart_CountDown
  3528  0233  3000               	movlw	0
  3529  0234  00BF               	movwf	_u16_CompressorStart_CountDown+1
  3530  0235                     l2386:	
  3531                           
  3532                           ;main.c: 373:                 if (u8_CompressorStatus == 2 && !u16_CompressorStart_Count
      +                          Down) {
  3533  0235  3002               	movlw	2
  3534  0236  067B               	xorwf	_u8_CompressorStatus,w
  3535  0237  1D03               	btfss	3,2
  3536  0238  2A3A               	goto	u1691
  3537  0239  2A3B               	goto	u1690
  3538  023A                     u1691:	
  3539  023A  2AE0               	goto	l2438
  3540  023B                     u1690:	
  3541  023B                     l2388:	
  3542  023B  083E               	movf	_u16_CompressorStart_CountDown,w
  3543  023C  043F               	iorwf	_u16_CompressorStart_CountDown+1,w
  3544  023D  1D03               	btfss	3,2
  3545  023E  2A40               	goto	u1701
  3546  023F  2A41               	goto	u1700
  3547  0240                     u1701:	
  3548  0240  2AE0               	goto	l2438
  3549  0241                     u1700:	
  3550  0241                     l2390:	
  3551                           
  3552                           ;main.c: 374:                     u8_CompressorStatus = 1;
  3553  0241  01FB               	clrf	_u8_CompressorStatus
  3554  0242  0AFB               	incf	_u8_CompressorStatus,f
  3555  0243  2AE0               	goto	l2438
  3556  0244                     l2392:	
  3557                           
  3558                           ;main.c: 379:                 if (u8_CompressorStatus == 0 && i16_CabinetSensor_Temp >= 
      +                          i16_CompressorStart_Temp) {
  3559  0244  087B               	movf	_u8_CompressorStatus,w
  3560  0245  1D03               	btfss	3,2
  3561  0246  2A48               	goto	u1711
  3562  0247  2A49               	goto	u1710
  3563  0248                     u1711:	
  3564  0248  2A60               	goto	l2398
  3565  0249                     u1710:	
  3566  0249                     l2394:	
  3567  0249  0831               	movf	_i16_CabinetSensor_Temp+1,w
  3568  024A  3A80               	xorlw	128
  3569  024B  00CB               	movwf	??_main
  3570  024C  0837               	movf	_i16_CompressorStart_Temp+1,w
  3571  024D  3A80               	xorlw	128
  3572  024E  024B               	subwf	??_main,w
  3573  024F  1D03               	skipz
  3574  0250  2A53               	goto	u1725
  3575  0251  0836               	movf	_i16_CompressorStart_Temp,w
  3576  0252  0230               	subwf	_i16_CabinetSensor_Temp,w
  3577  0253                     u1725:	
  3578  0253  1C03               	skipc
  3579  0254  2A56               	goto	u1721
  3580  0255  2A57               	goto	u1720
  3581  0256                     u1721:	
  3582  0256  2A60               	goto	l2398
  3583  0257                     u1720:	
  3584  0257                     l2396:	
  3585                           
  3586                           ;main.c: 380:                     u8_CompressorStatus = 2;
  3587  0257  3002               	movlw	2
  3588  0258  0140               	movlb	0	; select bank0
  3589  0259  00CB               	movwf	??_main
  3590  025A  084B               	movf	??_main,w
  3591  025B  00FB               	movwf	_u8_CompressorStatus
  3592                           
  3593                           ;main.c: 381:                     u16_CompressorStart_CountDown = 20;
  3594  025C  3014               	movlw	20
  3595  025D  00BE               	movwf	_u16_CompressorStart_CountDown
  3596  025E  3000               	movlw	0
  3597  025F  00BF               	movwf	_u16_CompressorStart_CountDown+1
  3598  0260                     l2398:	
  3599                           
  3600                           ;main.c: 383:                 if (u8_CompressorStatus == 2 && !u16_CompressorStart_Count
      +                          Down) {
  3601  0260  3002               	movlw	2
  3602  0261  067B               	xorwf	_u8_CompressorStatus,w
  3603  0262  1D03               	btfss	3,2
  3604  0263  2A65               	goto	u1731
  3605  0264  2A66               	goto	u1730
  3606  0265                     u1731:	
  3607  0265  2A6F               	goto	l2404
  3608  0266                     u1730:	
  3609  0266                     l2400:	
  3610  0266  0140               	movlb	0	; select bank0
  3611  0267  083E               	movf	_u16_CompressorStart_CountDown,w
  3612  0268  043F               	iorwf	_u16_CompressorStart_CountDown+1,w
  3613  0269  1D03               	btfss	3,2
  3614  026A  2A6C               	goto	u1741
  3615  026B  2A6D               	goto	u1740
  3616  026C                     u1741:	
  3617  026C  2A6F               	goto	l2404
  3618  026D                     u1740:	
  3619  026D                     l2402:	
  3620                           
  3621                           ;main.c: 384:                     u8_CompressorStatus = 1;
  3622  026D  01FB               	clrf	_u8_CompressorStatus
  3623  026E  0AFB               	incf	_u8_CompressorStatus,f
  3624  026F                     l2404:	
  3625                           
  3626                           ;main.c: 387:                 if (u8_CompressorStatus == 1 && i16_CabinetSensor_Temp <= 
      +                          i16_CompressorStop_Temp) {
  3627  026F  037B               	decf	_u8_CompressorStatus,w
  3628  0270  1D03               	btfss	3,2
  3629  0271  2A73               	goto	u1751
  3630  0272  2A74               	goto	u1750
  3631  0273                     u1751:	
  3632  0273  2A8C               	goto	l2410
  3633  0274                     u1750:	
  3634  0274                     l2406:	
  3635  0274  0140               	movlb	0	; select bank0
  3636  0275  0835               	movf	_i16_CompressorStop_Temp+1,w
  3637  0276  3A80               	xorlw	128
  3638  0277  00CB               	movwf	??_main
  3639  0278  0831               	movf	_i16_CabinetSensor_Temp+1,w
  3640  0279  3A80               	xorlw	128
  3641  027A  024B               	subwf	??_main,w
  3642  027B  1D03               	skipz
  3643  027C  2A7F               	goto	u1765
  3644  027D  0830               	movf	_i16_CabinetSensor_Temp,w
  3645  027E  0234               	subwf	_i16_CompressorStop_Temp,w
  3646  027F                     u1765:	
  3647  027F  1C03               	skipc
  3648  0280  2A82               	goto	u1761
  3649  0281  2A83               	goto	u1760
  3650  0282                     u1761:	
  3651  0282  2A8C               	goto	l2410
  3652  0283                     u1760:	
  3653  0283                     l2408:	
  3654                           
  3655                           ;main.c: 388:                     u8_CompressorStatus = 3;
  3656  0283  3003               	movlw	3
  3657  0284  0140               	movlb	0	; select bank0
  3658  0285  00CB               	movwf	??_main
  3659  0286  084B               	movf	??_main,w
  3660  0287  00FB               	movwf	_u8_CompressorStatus
  3661                           
  3662                           ;main.c: 389:                     u16_CompressorStop_CountDown = 20;
  3663  0288  3014               	movlw	20
  3664  0289  00BC               	movwf	_u16_CompressorStop_CountDown
  3665  028A  3000               	movlw	0
  3666  028B  00BD               	movwf	_u16_CompressorStop_CountDown+1
  3667  028C                     l2410:	
  3668                           
  3669                           ;main.c: 391:                 if (u8_CompressorStatus == 3 && !u16_CompressorStop_CountD
      +                          own) {
  3670  028C  3003               	movlw	3
  3671  028D  067B               	xorwf	_u8_CompressorStatus,w
  3672  028E  1D03               	btfss	3,2
  3673  028F  2A91               	goto	u1771
  3674  0290  2A92               	goto	u1770
  3675  0291                     u1771:	
  3676  0291  2AE0               	goto	l2438
  3677  0292                     u1770:	
  3678  0292                     l2412:	
  3679  0292  0140               	movlb	0	; select bank0
  3680  0293  083C               	movf	_u16_CompressorStop_CountDown,w
  3681  0294  043D               	iorwf	_u16_CompressorStop_CountDown+1,w
  3682  0295  1D03               	btfss	3,2
  3683  0296  2A98               	goto	u1781
  3684  0297  2A99               	goto	u1780
  3685  0298                     u1781:	
  3686  0298  2AE0               	goto	l2438
  3687  0299                     u1780:	
  3688  0299  2A26               	goto	l2380
  3689  029A                     l2416:	
  3690                           
  3691                           ;main.c: 398:                         if (!u16_Error_CompressorON_Duration) {
  3692  029A  083A               	movf	_u16_Error_CompressorON_Duration,w
  3693  029B  043B               	iorwf	_u16_Error_CompressorON_Duration+1,w
  3694  029C  1D03               	btfss	3,2
  3695  029D  2A9F               	goto	u1791
  3696  029E  2AA0               	goto	u1790
  3697  029F                     u1791:	
  3698  029F  2AD9               	goto	l441
  3699  02A0                     u1790:	
  3700  02A0                     l2418:	
  3701                           
  3702                           ;main.c: 399:                             u8_CompressorStatus = 0;
  3703  02A0  01FB               	clrf	_u8_CompressorStatus
  3704  02A1                     l2420:	
  3705                           
  3706                           ;main.c: 400:                             u16_Error_CompressorOFF_Duration = 10;
  3707  02A1  300A               	movlw	10
  3708  02A2  00B8               	movwf	_u16_Error_CompressorOFF_Duration
  3709  02A3  3000               	movlw	0
  3710  02A4  00B9               	movwf	_u16_Error_CompressorOFF_Duration+1
  3711  02A5  2AE0               	goto	l2438
  3712  02A6                     l2422:	
  3713                           
  3714                           ;main.c: 404:                         if (!u16_Error_CompressorOFF_Duration) {
  3715  02A6  0838               	movf	_u16_Error_CompressorOFF_Duration,w
  3716  02A7  0439               	iorwf	_u16_Error_CompressorOFF_Duration+1,w
  3717  02A8  1D03               	btfss	3,2
  3718  02A9  2AAB               	goto	u1801
  3719  02AA  2AAC               	goto	u1800
  3720  02AB                     u1801:	
  3721  02AB  2AD9               	goto	l441
  3722  02AC                     u1800:	
  3723  02AC                     l2424:	
  3724                           
  3725                           ;main.c: 405:                             u8_CompressorStatus = 1;
  3726  02AC  01FB               	clrf	_u8_CompressorStatus
  3727  02AD  0AFB               	incf	_u8_CompressorStatus,f
  3728  02AE                     l2426:	
  3729                           
  3730                           ;main.c: 406:                             u16_Error_CompressorON_Duration = 10;
  3731  02AE  300A               	movlw	10
  3732  02AF  00BA               	movwf	_u16_Error_CompressorON_Duration
  3733  02B0  3000               	movlw	0
  3734  02B1  00BB               	movwf	_u16_Error_CompressorON_Duration+1
  3735  02B2  2AE0               	goto	l2438
  3736  02B3                     l2430:	
  3737  02B3  087B               	movf	_u8_CompressorStatus,w
  3738  02B4  00CB               	movwf	??_main
  3739  02B5  01CC               	clrf	??_main+1
  3740                           
  3741                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3742                           ; Switch size 1, requested type "simple"
  3743                           ; Number of cases is 1, Range of values is 0 to 0
  3744                           ; switch strategies available:
  3745                           ; Name         Instructions Cycles
  3746                           ; simple_byte            4     3 (average)
  3747                           ; direct_byte            8     6 (fixed)
  3748                           ; jumptable            260     6 (fixed)
  3749                           ;	Chosen strategy is simple_byte
  3750  02B6  084C               	movf	??_main+1,w
  3751  02B7  3A00               	xorlw	0	; case 0
  3752  02B8  1903               	skipnz
  3753  02B9  2ABB               	goto	l2578
  3754  02BA  2A41               	goto	l2390
  3755  02BB                     l2578:	
  3756                           
  3757                           ; Switch size 1, requested type "simple"
  3758                           ; Number of cases is 2, Range of values is 0 to 1
  3759                           ; switch strategies available:
  3760                           ; Name         Instructions Cycles
  3761                           ; simple_byte            7     4 (average)
  3762                           ; direct_byte           10     6 (fixed)
  3763                           ; jumptable            260     6 (fixed)
  3764                           ;	Chosen strategy is simple_byte
  3765  02BB  084B               	movf	??_main,w
  3766  02BC  3A00               	xorlw	0	; case 0
  3767  02BD  1903               	skipnz
  3768  02BE  2AA6               	goto	l2422
  3769  02BF  3A01               	xorlw	1	; case 1
  3770  02C0  1903               	skipnz
  3771  02C1  2A9A               	goto	l2416
  3772  02C2  2A41               	goto	l2390
  3773  02C3                     l2434:	
  3774  02C3  0841               	movf	_u8_Refrigeration_Mode,w
  3775  02C4  00CB               	movwf	??_main
  3776  02C5  01CC               	clrf	??_main+1
  3777                           
  3778                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3779                           ; Switch size 1, requested type "simple"
  3780                           ; Number of cases is 1, Range of values is 0 to 0
  3781                           ; switch strategies available:
  3782                           ; Name         Instructions Cycles
  3783                           ; simple_byte            4     3 (average)
  3784                           ; direct_byte            8     6 (fixed)
  3785                           ; jumptable            260     6 (fixed)
  3786                           ;	Chosen strategy is simple_byte
  3787  02C6  084C               	movf	??_main+1,w
  3788  02C7  3A00               	xorlw	0	; case 0
  3789  02C8  1903               	skipnz
  3790  02C9  2ACB               	goto	l2580
  3791  02CA  2AE0               	goto	l2438
  3792  02CB                     l2580:	
  3793                           
  3794                           ; Switch size 1, requested type "simple"
  3795                           ; Number of cases is 4, Range of values is 0 to 3
  3796                           ; switch strategies available:
  3797                           ; Name         Instructions Cycles
  3798                           ; simple_byte           13     7 (average)
  3799                           ; direct_byte           14     6 (fixed)
  3800                           ; jumptable            260     6 (fixed)
  3801                           ;	Chosen strategy is simple_byte
  3802  02CB  084B               	movf	??_main,w
  3803  02CC  3A00               	xorlw	0	; case 0
  3804  02CD  1903               	skipnz
  3805  02CE  2A0D               	goto	l2372
  3806  02CF  3A01               	xorlw	1	; case 1
  3807  02D0  1903               	skipnz
  3808  02D1  2A28               	goto	l2382
  3809  02D2  3A03               	xorlw	3	; case 2
  3810  02D3  1903               	skipnz
  3811  02D4  2A44               	goto	l2392
  3812  02D5  3A01               	xorlw	1	; case 3
  3813  02D6  1903               	skipnz
  3814  02D7  2AB3               	goto	l2430
  3815  02D8  2AE0               	goto	l2438
  3816  02D9                     l441:	
  3817                           
  3818                           ;main.c: 421:         switch (u8_CompressorStatus) {
  3819  02D9  2AE0               	goto	l2438
  3820  02DA                     l460:	
  3821                           ;main.c: 423:                 do { LATAbits.LATA2 = 0; } while(0);
  3822                           
  3823  02DA  1118               	bcf	24,2	;volatile
  3824  02DB                     l462:	
  3825                           ;main.c: 424:                 do { LATBbits.LATB7 = 0; } while(0);
  3826                           
  3827  02DB  1399               	bcf	25,7	;volatile
  3828  02DC  286E               	goto	l2274
  3829  02DD                     l466:	
  3830                           ;main.c: 427:                 do { LATAbits.LATA2 = 1; } while(0);
  3831                           
  3832  02DD  1518               	bsf	24,2	;volatile
  3833  02DE                     l468:	
  3834                           ;main.c: 428:                 do { LATBbits.LATB7 = 1; } while(0);
  3835                           
  3836  02DE  1799               	bsf	25,7	;volatile
  3837  02DF  286E               	goto	l2274
  3838  02E0                     l2438:	
  3839  02E0  087B               	movf	_u8_CompressorStatus,w
  3840  02E1  0140               	movlb	0	; select bank0
  3841  02E2  00CB               	movwf	??_main
  3842  02E3  01CC               	clrf	??_main+1
  3843                           
  3844                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3845                           ; Switch size 1, requested type "simple"
  3846                           ; Number of cases is 1, Range of values is 0 to 0
  3847                           ; switch strategies available:
  3848                           ; Name         Instructions Cycles
  3849                           ; simple_byte            4     3 (average)
  3850                           ; direct_byte            8     6 (fixed)
  3851                           ; jumptable            260     6 (fixed)
  3852                           ;	Chosen strategy is simple_byte
  3853  02E4  084C               	movf	??_main+1,w
  3854  02E5  3A00               	xorlw	0	; case 0
  3855  02E6  1903               	skipnz
  3856  02E7  2AE9               	goto	l2582
  3857  02E8  286E               	goto	l2274
  3858  02E9                     l2582:	
  3859                           
  3860                           ; Switch size 1, requested type "simple"
  3861                           ; Number of cases is 2, Range of values is 0 to 1
  3862                           ; switch strategies available:
  3863                           ; Name         Instructions Cycles
  3864                           ; simple_byte            7     4 (average)
  3865                           ; direct_byte           10     6 (fixed)
  3866                           ; jumptable            260     6 (fixed)
  3867                           ;	Chosen strategy is simple_byte
  3868  02E9  084B               	movf	??_main,w
  3869  02EA  3A00               	xorlw	0	; case 0
  3870  02EB  1903               	skipnz
  3871  02EC  2ADA               	goto	l460
  3872  02ED  3A01               	xorlw	1	; case 1
  3873  02EE  1903               	skipnz
  3874  02EF  2ADD               	goto	l466
  3875  02F0  286E               	goto	l2274
  3876  02F1  3180  2818         	ljmp	start
  3877  02F3                     __end_of_main:	
  3878                           
  3879                           	psect	text1
  3880  02F3                     __ptext1:	
  3881 ;; *************** function _v_get_slope_intercept *****************
  3882 ;; Defined at:
  3883 ;;		line 153 in file "main.c"
  3884 ;; Parameters:    Size  Location     Type
  3885 ;;  u16_adc         2    2[COMMON] unsigned short 
  3886 ;; Auto vars:     Size  Location     Type
  3887 ;;		None
  3888 ;; Return value:  Size  Location     Type
  3889 ;;                  1    wreg      void 
  3890 ;; Registers used:
  3891 ;;		wreg, status,2, status,0
  3892 ;; Tracked objects:
  3893 ;;		On entry : 0/0
  3894 ;;		On exit  : 0/0
  3895 ;;		Unchanged: 0/0
  3896 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3897 ;;      Params:         2       0       0       0       0       0       0       0
  3898 ;;      Locals:         0       0       0       0       0       0       0       0
  3899 ;;      Temps:          0       0       0       0       0       0       0       0
  3900 ;;      Totals:         2       0       0       0       0       0       0       0
  3901 ;;Total ram usage:        2 bytes
  3902 ;; Hardware stack levels used:    1
  3903 ;; Hardware stack levels required when called:    3
  3904 ;; This function calls:
  3905 ;;		Nothing
  3906 ;; This function is called by:
  3907 ;;		_main
  3908 ;; This function uses a non-reentrant model
  3909 ;;
  3910                           
  3911                           
  3912                           ;psect for function _v_get_slope_intercept
  3913  02F3                     _v_get_slope_intercept:	
  3914  02F3                     l1786:	
  3915                           ;incstack = 0
  3916                           ; Regs used in _v_get_slope_intercept: [wreg+status,2+status,0]
  3917                           
  3918                           
  3919                           ;main.c: 154:     if (u16_adc) {
  3920  02F3  0872               	movf	v_get_slope_intercept@u16_adc,w
  3921  02F4  0473               	iorwf	v_get_slope_intercept@u16_adc+1,w
  3922  02F5  1903               	btfsc	3,2
  3923  02F6  2AF8               	goto	u851
  3924  02F7  2AF9               	goto	u850
  3925  02F8                     u851:	
  3926  02F8  2C07               	goto	l395
  3927  02F9                     u850:	
  3928  02F9                     l1788:	
  3929                           
  3930                           ;main.c: 155:         if (u16_adc > 967) {
  3931  02F9  3003               	movlw	3
  3932  02FA  0273               	subwf	v_get_slope_intercept@u16_adc+1,w
  3933  02FB  30C8               	movlw	200
  3934  02FC  1903               	skipnz
  3935  02FD  0272               	subwf	v_get_slope_intercept@u16_adc,w
  3936  02FE  1C03               	skipc
  3937  02FF  2B01               	goto	u861
  3938  0300  2B02               	goto	u860
  3939  0301                     u861:	
  3940  0301  2B14               	goto	l1792
  3941  0302                     u860:	
  3942  0302                     l1790:	
  3943                           
  3944                           ;main.c: 156:             u32_Mn = 4064;
  3945  0302  3000               	movlw	0
  3946  0303  0140               	movlb	0	; select bank0
  3947  0304  00AF               	movwf	_u32_Mn+3
  3948  0305  3000               	movlw	0
  3949  0306  00AE               	movwf	_u32_Mn+2
  3950  0307  300F               	movlw	15
  3951  0308  00AD               	movwf	_u32_Mn+1
  3952  0309  30E0               	movlw	224
  3953  030A  00AC               	movwf	_u32_Mn
  3954                           
  3955                           ;main.c: 157:             u32_Cn = 3634688;
  3956  030B  3000               	movlw	0
  3957  030C  00AB               	movwf	_u32_Cn+3
  3958  030D  3037               	movlw	55
  3959  030E  00AA               	movwf	_u32_Cn+2
  3960  030F  3076               	movlw	118
  3961  0310  00A9               	movwf	_u32_Cn+1
  3962  0311  3000               	movlw	0
  3963  0312  00A8               	movwf	_u32_Cn
  3964                           
  3965                           ;main.c: 158:         } else if (u16_adc > 928) {
  3966  0313  2C07               	goto	l395
  3967  0314                     l1792:	
  3968  0314  3003               	movlw	3
  3969  0315  0273               	subwf	v_get_slope_intercept@u16_adc+1,w
  3970  0316  30A1               	movlw	161
  3971  0317  1903               	skipnz
  3972  0318  0272               	subwf	v_get_slope_intercept@u16_adc,w
  3973  0319  1C03               	skipc
  3974  031A  2B1C               	goto	u871
  3975  031B  2B1D               	goto	u870
  3976  031C                     u871:	
  3977  031C  2B2F               	goto	l1796
  3978  031D                     u870:	
  3979  031D                     l1794:	
  3980                           
  3981                           ;main.c: 159:             u32_Mn = 2503;
  3982  031D  3000               	movlw	0
  3983  031E  0140               	movlb	0	; select bank0
  3984  031F  00AF               	movwf	_u32_Mn+3
  3985  0320  3000               	movlw	0
  3986  0321  00AE               	movwf	_u32_Mn+2
  3987  0322  3009               	movlw	9
  3988  0323  00AD               	movwf	_u32_Mn+1
  3989  0324  30C7               	movlw	199
  3990  0325  00AC               	movwf	_u32_Mn
  3991                           
  3992                           ;main.c: 160:             u32_Cn = 2121523;
  3993  0326  3000               	movlw	0
  3994  0327  00AB               	movwf	_u32_Cn+3
  3995  0328  3020               	movlw	32
  3996  0329  00AA               	movwf	_u32_Cn+2
  3997  032A  305F               	movlw	95
  3998  032B  00A9               	movwf	_u32_Cn+1
  3999  032C  3033               	movlw	51
  4000  032D  00A8               	movwf	_u32_Cn
  4001                           
  4002                           ;main.c: 161:         } else if (u16_adc > 867) {
  4003  032E  2C07               	goto	l395
  4004  032F                     l1796:	
  4005  032F  3003               	movlw	3
  4006  0330  0273               	subwf	v_get_slope_intercept@u16_adc+1,w
  4007  0331  3064               	movlw	100
  4008  0332  1903               	skipnz
  4009  0333  0272               	subwf	v_get_slope_intercept@u16_adc,w
  4010  0334  1C03               	skipc
  4011  0335  2B37               	goto	u881
  4012  0336  2B38               	goto	u880
  4013  0337                     u881:	
  4014  0337  2B4A               	goto	l1800
  4015  0338                     u880:	
  4016  0338                     l1798:	
  4017                           
  4018                           ;main.c: 162:             u32_Mn = 1672;
  4019  0338  3000               	movlw	0
  4020  0339  0140               	movlb	0	; select bank0
  4021  033A  00AF               	movwf	_u32_Mn+3
  4022  033B  3000               	movlw	0
  4023  033C  00AE               	movwf	_u32_Mn+2
  4024  033D  3006               	movlw	6
  4025  033E  00AD               	movwf	_u32_Mn+1
  4026  033F  3088               	movlw	136
  4027  0340  00AC               	movwf	_u32_Mn
  4028                           
  4029                           ;main.c: 163:             u32_Cn = 1350451;
  4030  0341  3000               	movlw	0
  4031  0342  00AB               	movwf	_u32_Cn+3
  4032  0343  3014               	movlw	20
  4033  0344  00AA               	movwf	_u32_Cn+2
  4034  0345  309B               	movlw	155
  4035  0346  00A9               	movwf	_u32_Cn+1
  4036  0347  3033               	movlw	51
  4037  0348  00A8               	movwf	_u32_Cn
  4038                           
  4039                           ;main.c: 164:         } else if (u16_adc > 784) {
  4040  0349  2C07               	goto	l395
  4041  034A                     l1800:	
  4042  034A  3003               	movlw	3
  4043  034B  0273               	subwf	v_get_slope_intercept@u16_adc+1,w
  4044  034C  3011               	movlw	17
  4045  034D  1903               	skipnz
  4046  034E  0272               	subwf	v_get_slope_intercept@u16_adc,w
  4047  034F  1C03               	skipc
  4048  0350  2B52               	goto	u891
  4049  0351  2B53               	goto	u890
  4050  0352                     u891:	
  4051  0352  2B65               	goto	l1804
  4052  0353                     u890:	
  4053  0353                     l1802:	
  4054                           
  4055                           ;main.c: 165:             u32_Mn = 1227;
  4056  0353  3000               	movlw	0
  4057  0354  0140               	movlb	0	; select bank0
  4058  0355  00AF               	movwf	_u32_Mn+3
  4059  0356  3000               	movlw	0
  4060  0357  00AE               	movwf	_u32_Mn+2
  4061  0358  3004               	movlw	4
  4062  0359  00AD               	movwf	_u32_Mn+1
  4063  035A  30CB               	movlw	203
  4064  035B  00AC               	movwf	_u32_Mn
  4065                           
  4066                           ;main.c: 166:             u32_Cn = 963461;
  4067  035C  3000               	movlw	0
  4068  035D  00AB               	movwf	_u32_Cn+3
  4069  035E  300E               	movlw	14
  4070  035F  00AA               	movwf	_u32_Cn+2
  4071  0360  30B3               	movlw	179
  4072  0361  00A9               	movwf	_u32_Cn+1
  4073  0362  3085               	movlw	133
  4074  0363  00A8               	movwf	_u32_Cn
  4075                           
  4076                           ;main.c: 167:         } else if (u16_adc > 681) {
  4077  0364  2C07               	goto	l395
  4078  0365                     l1804:	
  4079  0365  3002               	movlw	2
  4080  0366  0273               	subwf	v_get_slope_intercept@u16_adc+1,w
  4081  0367  30AA               	movlw	170
  4082  0368  1903               	skipnz
  4083  0369  0272               	subwf	v_get_slope_intercept@u16_adc,w
  4084  036A  1C03               	skipc
  4085  036B  2B6D               	goto	u901
  4086  036C  2B6E               	goto	u900
  4087  036D                     u901:	
  4088  036D  2B80               	goto	l1808
  4089  036E                     u900:	
  4090  036E                     l1806:	
  4091                           
  4092                           ;main.c: 168:             u32_Mn = 998;
  4093  036E  3000               	movlw	0
  4094  036F  0140               	movlb	0	; select bank0
  4095  0370  00AF               	movwf	_u32_Mn+3
  4096  0371  3000               	movlw	0
  4097  0372  00AE               	movwf	_u32_Mn+2
  4098  0373  3003               	movlw	3
  4099  0374  00AD               	movwf	_u32_Mn+1
  4100  0375  30E6               	movlw	230
  4101  0376  00AC               	movwf	_u32_Mn
  4102                           
  4103                           ;main.c: 169:             u32_Cn = 783544;
  4104  0377  3000               	movlw	0
  4105  0378  00AB               	movwf	_u32_Cn+3
  4106  0379  300B               	movlw	11
  4107  037A  00AA               	movwf	_u32_Cn+2
  4108  037B  30F4               	movlw	244
  4109  037C  00A9               	movwf	_u32_Cn+1
  4110  037D  30B8               	movlw	184
  4111  037E  00A8               	movwf	_u32_Cn
  4112                           
  4113                           ;main.c: 170:         } else if (u16_adc > 568) {
  4114  037F  2C07               	goto	l395
  4115  0380                     l1808:	
  4116  0380  3002               	movlw	2
  4117  0381  0273               	subwf	v_get_slope_intercept@u16_adc+1,w
  4118  0382  3039               	movlw	57
  4119  0383  1903               	skipnz
  4120  0384  0272               	subwf	v_get_slope_intercept@u16_adc,w
  4121  0385  1C03               	skipc
  4122  0386  2B88               	goto	u911
  4123  0387  2B89               	goto	u910
  4124  0388                     u911:	
  4125  0388  2B9B               	goto	l1812
  4126  0389                     u910:	
  4127  0389                     l1810:	
  4128                           
  4129                           ;main.c: 171:             u32_Mn = 905;
  4130  0389  3000               	movlw	0
  4131  038A  0140               	movlb	0	; select bank0
  4132  038B  00AF               	movwf	_u32_Mn+3
  4133  038C  3000               	movlw	0
  4134  038D  00AE               	movwf	_u32_Mn+2
  4135  038E  3003               	movlw	3
  4136  038F  00AD               	movwf	_u32_Mn+1
  4137  0390  3089               	movlw	137
  4138  0391  00AC               	movwf	_u32_Mn
  4139                           
  4140                           ;main.c: 172:             u32_Cn = 719657;
  4141  0392  3000               	movlw	0
  4142  0393  00AB               	movwf	_u32_Cn+3
  4143  0394  300A               	movlw	10
  4144  0395  00AA               	movwf	_u32_Cn+2
  4145  0396  30FB               	movlw	251
  4146  0397  00A9               	movwf	_u32_Cn+1
  4147  0398  3029               	movlw	41
  4148  0399  00A8               	movwf	_u32_Cn
  4149                           
  4150                           ;main.c: 173:         } else if (u16_adc > 456) {
  4151  039A  2C07               	goto	l395
  4152  039B                     l1812:	
  4153  039B  3001               	movlw	1
  4154  039C  0273               	subwf	v_get_slope_intercept@u16_adc+1,w
  4155  039D  30C9               	movlw	201
  4156  039E  1903               	skipnz
  4157  039F  0272               	subwf	v_get_slope_intercept@u16_adc,w
  4158  03A0  1C03               	skipc
  4159  03A1  2BA3               	goto	u921
  4160  03A2  2BA4               	goto	u920
  4161  03A3                     u921:	
  4162  03A3  2BB6               	goto	l1816
  4163  03A4                     u920:	
  4164  03A4                     l1814:	
  4165                           
  4166                           ;main.c: 174:             u32_Mn = 912;
  4167  03A4  3000               	movlw	0
  4168  03A5  0140               	movlb	0	; select bank0
  4169  03A6  00AF               	movwf	_u32_Mn+3
  4170  03A7  3000               	movlw	0
  4171  03A8  00AE               	movwf	_u32_Mn+2
  4172  03A9  3003               	movlw	3
  4173  03AA  00AD               	movwf	_u32_Mn+1
  4174  03AB  3090               	movlw	144
  4175  03AC  00AC               	movwf	_u32_Mn
  4176                           
  4177                           ;main.c: 175:             u32_Cn = 723139;
  4178  03AD  3000               	movlw	0
  4179  03AE  00AB               	movwf	_u32_Cn+3
  4180  03AF  300B               	movlw	11
  4181  03B0  00AA               	movwf	_u32_Cn+2
  4182  03B1  3008               	movlw	8
  4183  03B2  00A9               	movwf	_u32_Cn+1
  4184  03B3  30C3               	movlw	195
  4185  03B4  00A8               	movwf	_u32_Cn
  4186                           
  4187                           ;main.c: 176:         } else if (u16_adc > 355) {
  4188  03B5  2C07               	goto	l395
  4189  03B6                     l1816:	
  4190  03B6  3001               	movlw	1
  4191  03B7  0273               	subwf	v_get_slope_intercept@u16_adc+1,w
  4192  03B8  3064               	movlw	100
  4193  03B9  1903               	skipnz
  4194  03BA  0272               	subwf	v_get_slope_intercept@u16_adc,w
  4195  03BB  1C03               	skipc
  4196  03BC  2BBE               	goto	u931
  4197  03BD  2BBF               	goto	u930
  4198  03BE                     u931:	
  4199  03BE  2BD1               	goto	l1820
  4200  03BF                     u930:	
  4201  03BF                     l1818:	
  4202                           
  4203                           ;main.c: 177:             u32_Mn = 1010;
  4204  03BF  3000               	movlw	0
  4205  03C0  0140               	movlb	0	; select bank0
  4206  03C1  00AF               	movwf	_u32_Mn+3
  4207  03C2  3000               	movlw	0
  4208  03C3  00AE               	movwf	_u32_Mn+2
  4209  03C4  3003               	movlw	3
  4210  03C5  00AD               	movwf	_u32_Mn+1
  4211  03C6  30F2               	movlw	242
  4212  03C7  00AC               	movwf	_u32_Mn
  4213                           
  4214                           ;main.c: 178:             u32_Cn = 767048;
  4215  03C8  3000               	movlw	0
  4216  03C9  00AB               	movwf	_u32_Cn+3
  4217  03CA  300B               	movlw	11
  4218  03CB  00AA               	movwf	_u32_Cn+2
  4219  03CC  30B4               	movlw	180
  4220  03CD  00A9               	movwf	_u32_Cn+1
  4221  03CE  3048               	movlw	72
  4222  03CF  00A8               	movwf	_u32_Cn
  4223                           
  4224                           ;main.c: 179:         } else if (u16_adc > 270) {
  4225  03D0  2C07               	goto	l395
  4226  03D1                     l1820:	
  4227  03D1  3001               	movlw	1
  4228  03D2  0273               	subwf	v_get_slope_intercept@u16_adc+1,w
  4229  03D3  300F               	movlw	15
  4230  03D4  1903               	skipnz
  4231  03D5  0272               	subwf	v_get_slope_intercept@u16_adc,w
  4232  03D6  1C03               	skipc
  4233  03D7  2BD9               	goto	u941
  4234  03D8  2BDA               	goto	u940
  4235  03D9                     u941:	
  4236  03D9  2BEC               	goto	l1824
  4237  03DA                     u940:	
  4238  03DA                     l1822:	
  4239                           
  4240                           ;main.c: 180:             u32_Mn = 1205;
  4241  03DA  3000               	movlw	0
  4242  03DB  0140               	movlb	0	; select bank0
  4243  03DC  00AF               	movwf	_u32_Mn+3
  4244  03DD  3000               	movlw	0
  4245  03DE  00AE               	movwf	_u32_Mn+2
  4246  03DF  3004               	movlw	4
  4247  03E0  00AD               	movwf	_u32_Mn+1
  4248  03E1  30B5               	movlw	181
  4249  03E2  00AC               	movwf	_u32_Mn
  4250                           
  4251                           ;main.c: 181:             u32_Cn = 835963;
  4252  03E3  3000               	movlw	0
  4253  03E4  00AB               	movwf	_u32_Cn+3
  4254  03E5  300C               	movlw	12
  4255  03E6  00AA               	movwf	_u32_Cn+2
  4256  03E7  30C1               	movlw	193
  4257  03E8  00A9               	movwf	_u32_Cn+1
  4258  03E9  307B               	movlw	123
  4259  03EA  00A8               	movwf	_u32_Cn
  4260                           
  4261                           ;main.c: 182:         } else if (u16_adc > 203) {
  4262  03EB  2C07               	goto	l395
  4263  03EC                     l1824:	
  4264  03EC  3000               	movlw	0
  4265  03ED  0273               	subwf	v_get_slope_intercept@u16_adc+1,w
  4266  03EE  30CC               	movlw	204
  4267  03EF  1903               	skipnz
  4268  03F0  0272               	subwf	v_get_slope_intercept@u16_adc,w
  4269  03F1  1C03               	skipc
  4270  03F2  2BF4               	goto	u951
  4271  03F3  2BF5               	goto	u950
  4272  03F4                     u951:	
  4273  03F4  2C07               	goto	l389
  4274  03F5                     u950:	
  4275  03F5                     l1826:	
  4276                           
  4277                           ;main.c: 183:             u32_Mn = 1521;
  4278  03F5  3000               	movlw	0
  4279  03F6  0140               	movlb	0	; select bank0
  4280  03F7  00AF               	movwf	_u32_Mn+3
  4281  03F8  3000               	movlw	0
  4282  03F9  00AE               	movwf	_u32_Mn+2
  4283  03FA  3005               	movlw	5
  4284  03FB  00AD               	movwf	_u32_Mn+1
  4285  03FC  30F1               	movlw	241
  4286  03FD  00AC               	movwf	_u32_Mn
  4287                           
  4288                           ;main.c: 184:             u32_Cn = 920842;
  4289  03FE  3000               	movlw	0
  4290  03FF  00AB               	movwf	_u32_Cn+3
  4291  0400  300E               	movlw	14
  4292  0401  00AA               	movwf	_u32_Cn+2
  4293  0402  300D               	movlw	13
  4294  0403  00A9               	movwf	_u32_Cn+1
  4295  0404  300A               	movlw	10
  4296  0405  00A8               	movwf	_u32_Cn
  4297  0406  2C07               	goto	l395
  4298  0407                     l389:	
  4299  0407                     l395:	
  4300  0407  0008               	return
  4301  0408                     __end_of_v_get_slope_intercept:	
  4302                           
  4303                           	psect	text2
  4304  047D                     __ptext2:	
  4305 ;; *************** function _u16_get_adc_value *****************
  4306 ;; Defined at:
  4307 ;;		line 132 in file "main.c"
  4308 ;; Parameters:    Size  Location     Type
  4309 ;;  u8_ADC_chann    1    wreg     unsigned char 
  4310 ;; Auto vars:     Size  Location     Type
  4311 ;;  u8_ADC_chann    1    2[BANK0 ] unsigned char 
  4312 ;;  u16_ADC_samp    2    3[BANK0 ] unsigned short 
  4313 ;; Return value:  Size  Location     Type
  4314 ;;                  2    6[COMMON] unsigned short 
  4315 ;; Registers used:
  4316 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4317 ;; Tracked objects:
  4318 ;;		On entry : 0/0
  4319 ;;		On exit  : 0/0
  4320 ;;		Unchanged: 0/0
  4321 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4322 ;;      Params:         2       0       0       0       0       0       0       0
  4323 ;;      Locals:         0       3       0       0       0       0       0       0
  4324 ;;      Temps:          0       2       0       0       0       0       0       0
  4325 ;;      Totals:         2       5       0       0       0       0       0       0
  4326 ;;Total ram usage:        7 bytes
  4327 ;; Hardware stack levels used:    1
  4328 ;; Hardware stack levels required when called:    4
  4329 ;; This function calls:
  4330 ;;		_ADC_GetConversion
  4331 ;; This function is called by:
  4332 ;;		_main
  4333 ;; This function uses a non-reentrant model
  4334 ;;
  4335                           
  4336                           
  4337                           ;psect for function _u16_get_adc_value
  4338  047D                     _u16_get_adc_value:	
  4339                           
  4340                           ;incstack = 0
  4341                           ; Regs used in _u16_get_adc_value: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4342                           ;u16_get_adc_value@u8_ADC_channel stored from wreg
  4343  047D  0140               	movlb	0	; select bank0
  4344  047E  00C5               	movwf	u16_get_adc_value@u8_ADC_channel
  4345  047F                     l2200:	
  4346                           
  4347                           ;main.c: 133:     uint16_t u16_ADC_sample;;main.c: 134:     switch (u8_ADC_channel) {
  4348  047F  2C94               	goto	l2208
  4349  0480                     l2202:	
  4350                           
  4351                           ;main.c: 136:             u16_ADC_sample = ADC_GetConversion(A_FS);
  4352  0480  3005               	movlw	5
  4353  0481  3185  2510  3184   	fcall	_ADC_GetConversion
  4354  0484  0873               	movf	?_ADC_GetConversion+1,w
  4355  0485  0140               	movlb	0	; select bank0
  4356  0486  00C7               	movwf	u16_get_adc_value@u16_ADC_sample+1
  4357  0487  0872               	movf	?_ADC_GetConversion,w
  4358  0488  00C6               	movwf	u16_get_adc_value@u16_ADC_sample
  4359                           
  4360                           ;main.c: 137:             break;
  4361  0489  2CA4               	goto	l2210
  4362  048A                     l2204:	
  4363                           
  4364                           ;main.c: 139:             u16_ADC_sample = ADC_GetConversion(A_KNOB);
  4365  048A  300E               	movlw	14
  4366  048B  3185  2510  3184   	fcall	_ADC_GetConversion
  4367  048E  0873               	movf	?_ADC_GetConversion+1,w
  4368  048F  0140               	movlb	0	; select bank0
  4369  0490  00C7               	movwf	u16_get_adc_value@u16_ADC_sample+1
  4370  0491  0872               	movf	?_ADC_GetConversion,w
  4371  0492  00C6               	movwf	u16_get_adc_value@u16_ADC_sample
  4372                           
  4373                           ;main.c: 140:             break;
  4374  0493  2CA4               	goto	l2210
  4375  0494                     l2208:	
  4376  0494  0845               	movf	u16_get_adc_value@u8_ADC_channel,w
  4377  0495  00C3               	movwf	??_u16_get_adc_value
  4378  0496  01C4               	clrf	??_u16_get_adc_value+1
  4379                           
  4380                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4381                           ; Switch size 1, requested type "simple"
  4382                           ; Number of cases is 1, Range of values is 0 to 0
  4383                           ; switch strategies available:
  4384                           ; Name         Instructions Cycles
  4385                           ; simple_byte            4     3 (average)
  4386                           ; direct_byte            8     6 (fixed)
  4387                           ; jumptable            260     6 (fixed)
  4388                           ;	Chosen strategy is simple_byte
  4389  0497  0844               	movf	??_u16_get_adc_value+1,w
  4390  0498  3A00               	xorlw	0	; case 0
  4391  0499  1903               	skipnz
  4392  049A  2C9C               	goto	l2584
  4393  049B  2CA4               	goto	l2210
  4394  049C                     l2584:	
  4395                           
  4396                           ; Switch size 1, requested type "simple"
  4397                           ; Number of cases is 2, Range of values is 1 to 2
  4398                           ; switch strategies available:
  4399                           ; Name         Instructions Cycles
  4400                           ; simple_byte            7     4 (average)
  4401                           ; direct_byte           13     9 (fixed)
  4402                           ; jumptable            263     9 (fixed)
  4403                           ;	Chosen strategy is simple_byte
  4404  049C  0843               	movf	??_u16_get_adc_value,w
  4405  049D  3A01               	xorlw	1	; case 1
  4406  049E  1903               	skipnz
  4407  049F  2C80               	goto	l2202
  4408  04A0  3A03               	xorlw	3	; case 2
  4409  04A1  1903               	skipnz
  4410  04A2  2C8A               	goto	l2204
  4411  04A3  2CA4               	goto	l2210
  4412  04A4                     l2210:	
  4413                           
  4414                           ;main.c: 142:     return (u16_ADC_sample);
  4415  04A4  0847               	movf	u16_get_adc_value@u16_ADC_sample+1,w
  4416  04A5  00F7               	movwf	?_u16_get_adc_value+1
  4417  04A6  0846               	movf	u16_get_adc_value@u16_ADC_sample,w
  4418  04A7  00F6               	movwf	?_u16_get_adc_value
  4419  04A8                     l372:	
  4420  04A8  0008               	return
  4421  04A9                     __end_of_u16_get_adc_value:	
  4422                           
  4423                           	psect	text3
  4424  0510                     __ptext3:	
  4425 ;; *************** function _ADC_GetConversion *****************
  4426 ;; Defined at:
  4427 ;;		line 110 in file "mcc_generated_files/adc.c"
  4428 ;; Parameters:    Size  Location     Type
  4429 ;;  channel         1    wreg     enum E6747
  4430 ;; Auto vars:     Size  Location     Type
  4431 ;;  channel         1    5[COMMON] enum E6747
  4432 ;; Return value:  Size  Location     Type
  4433 ;;                  2    2[COMMON] unsigned short 
  4434 ;; Registers used:
  4435 ;;		wreg, status,2, status,0
  4436 ;; Tracked objects:
  4437 ;;		On entry : 0/0
  4438 ;;		On exit  : 0/0
  4439 ;;		Unchanged: 0/0
  4440 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4441 ;;      Params:         2       0       0       0       0       0       0       0
  4442 ;;      Locals:         1       0       0       0       0       0       0       0
  4443 ;;      Temps:          1       0       0       0       0       0       0       0
  4444 ;;      Totals:         4       0       0       0       0       0       0       0
  4445 ;;Total ram usage:        4 bytes
  4446 ;; Hardware stack levels used:    1
  4447 ;; Hardware stack levels required when called:    3
  4448 ;; This function calls:
  4449 ;;		Nothing
  4450 ;; This function is called by:
  4451 ;;		_u16_get_adc_value
  4452 ;; This function uses a non-reentrant model
  4453 ;;
  4454                           
  4455                           
  4456                           ;psect for function _ADC_GetConversion
  4457  0510                     _ADC_GetConversion:	
  4458                           
  4459                           ;incstack = 0
  4460                           ; Regs used in _ADC_GetConversion: [wreg+status,2+status,0]
  4461                           ;ADC_GetConversion@channel stored from wreg
  4462  0510  00F5               	movwf	ADC_GetConversion@channel
  4463  0511                     l1650:	
  4464                           
  4465                           ;mcc_generated_files/adc.c: 110: adc_result_t ADC_GetConversion(adc_channel_t channel);m
      +                          cc_generated_files/adc.c: 111: {;mcc_generated_files/adc.c: 113:     ADCON0bits.CHS = ch
      +                          annel;
  4466  0511  0875               	movf	ADC_GetConversion@channel,w
  4467  0512  00F4               	movwf	??_ADC_GetConversion
  4468  0513  0DF4               	rlf	??_ADC_GetConversion,f
  4469  0514  0DF4               	rlf	??_ADC_GetConversion,f
  4470  0515  0141               	movlb	1	; select bank1
  4471  0516  081D               	movf	29,w	;volatile
  4472  0517  0674               	xorwf	??_ADC_GetConversion,w
  4473  0518  3903               	andlw	-253
  4474  0519  0674               	xorwf	??_ADC_GetConversion,w
  4475  051A  009D               	movwf	29	;volatile
  4476  051B                     l1652:	
  4477                           
  4478                           ;mcc_generated_files/adc.c: 116:     ADCON0bits.ADON = 1;
  4479  051B  141D               	bsf	29,0	;volatile
  4480  051C                     l1654:	
  4481                           
  4482                           ;mcc_generated_files/adc.c: 119:     _delay((unsigned long)((5)*(1000000/4000000.0)));
  4483  051C  0000               	nop
  4484  051D                     l1656:	
  4485                           
  4486                           ;mcc_generated_files/adc.c: 122:     ADCON0bits.GOnDONE = 1;
  4487  051D  0141               	movlb	1	; select bank1
  4488  051E  149D               	bsf	29,1	;volatile
  4489  051F                     l94:	
  4490                           ;mcc_generated_files/adc.c: 126:     {;mcc_generated_files/adc.c: 127:     }
  4491                           
  4492                           
  4493                           ;mcc_generated_files/adc.c: 125:     while (ADCON0bits.GOnDONE)
  4494  051F  189D               	btfsc	29,1	;volatile
  4495  0520  2D22               	goto	u731
  4496  0521  2D23               	goto	u730
  4497  0522                     u731:	
  4498  0522  2D1F               	goto	l94
  4499  0523                     u730:	
  4500  0523                     l1658:	
  4501                           
  4502                           ;mcc_generated_files/adc.c: 130:     return ((adc_result_t)((ADRESH << 8) + ADRESL));
  4503  0523  081C               	movf	28,w	;volatile
  4504  0524  00F3               	movwf	?_ADC_GetConversion+1
  4505  0525  081B               	movf	27,w	;volatile
  4506  0526  00F2               	movwf	?_ADC_GetConversion
  4507  0527                     l97:	
  4508  0527  0008               	return
  4509  0528                     __end_of_ADC_GetConversion:	
  4510                           
  4511                           	psect	text4
  4512  0449                     __ptext4:	
  4513 ;; *************** function ___lmul *****************
  4514 ;; Defined at:
  4515 ;;		line 15 in file "C:\Program Files2\Microchip\xc8\v2.10\pic\sources\c99\common\Umul32.c"
  4516 ;; Parameters:    Size  Location     Type
  4517 ;;  multiplier      4    0[BANK0 ] unsigned long 
  4518 ;;  multiplicand    4    4[BANK0 ] unsigned long 
  4519 ;; Auto vars:     Size  Location     Type
  4520 ;;  product         4    2[COMMON] unsigned long 
  4521 ;; Return value:  Size  Location     Type
  4522 ;;                  4    0[BANK0 ] unsigned long 
  4523 ;; Registers used:
  4524 ;;		wreg, status,2, status,0
  4525 ;; Tracked objects:
  4526 ;;		On entry : 0/0
  4527 ;;		On exit  : 0/0
  4528 ;;		Unchanged: 0/0
  4529 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4530 ;;      Params:         0       8       0       0       0       0       0       0
  4531 ;;      Locals:         4       0       0       0       0       0       0       0
  4532 ;;      Temps:          0       0       0       0       0       0       0       0
  4533 ;;      Totals:         4       8       0       0       0       0       0       0
  4534 ;;Total ram usage:       12 bytes
  4535 ;; Hardware stack levels used:    1
  4536 ;; Hardware stack levels required when called:    3
  4537 ;; This function calls:
  4538 ;;		Nothing
  4539 ;; This function is called by:
  4540 ;;		_main
  4541 ;; This function uses a non-reentrant model
  4542 ;;
  4543                           
  4544                           
  4545                           ;psect for function ___lmul
  4546  0449                     ___lmul:	
  4547  0449                     l2220:	
  4548                           ;incstack = 0
  4549                           ; Regs used in ___lmul: [wreg+status,2+status,0]
  4550                           
  4551  0449  3000               	movlw	0
  4552  044A  00F5               	movwf	___lmul@product+3
  4553  044B  3000               	movlw	0
  4554  044C  00F4               	movwf	___lmul@product+2
  4555  044D  3000               	movlw	0
  4556  044E  00F3               	movwf	___lmul@product+1
  4557  044F  3000               	movlw	0
  4558  0450  00F2               	movwf	___lmul@product
  4559  0451                     l2222:	
  4560  0451  0140               	movlb	0	; select bank0
  4561  0452  1C43               	btfss	___lmul@multiplier,0
  4562  0453  2C55               	goto	u1401
  4563  0454  2C56               	goto	u1400
  4564  0455                     u1401:	
  4565  0455  2C5E               	goto	l2226
  4566  0456                     u1400:	
  4567  0456                     l2224:	
  4568  0456  0847               	movf	___lmul@multiplicand,w
  4569  0457  07F2               	addwf	___lmul@product,f
  4570  0458  0848               	movf	___lmul@multiplicand+1,w
  4571  0459  3DF3               	addwfc	___lmul@product+1,f
  4572  045A  0849               	movf	___lmul@multiplicand+2,w
  4573  045B  3DF4               	addwfc	___lmul@product+2,f
  4574  045C  084A               	movf	___lmul@multiplicand+3,w
  4575  045D  3DF5               	addwfc	___lmul@product+3,f
  4576  045E                     l2226:	
  4577  045E  3001               	movlw	1
  4578  045F                     u1415:	
  4579  045F  35C7               	lslf	___lmul@multiplicand,f
  4580  0460  0DC8               	rlf	___lmul@multiplicand+1,f
  4581  0461  0DC9               	rlf	___lmul@multiplicand+2,f
  4582  0462  0DCA               	rlf	___lmul@multiplicand+3,f
  4583  0463  0B89               	decfsz	9,f
  4584  0464  2C5F               	goto	u1415
  4585  0465                     l2228:	
  4586  0465  3001               	movlw	1
  4587  0466                     u1425:	
  4588  0466  36C6               	lsrf	___lmul@multiplier+3,f
  4589  0467  0CC5               	rrf	___lmul@multiplier+2,f
  4590  0468  0CC4               	rrf	___lmul@multiplier+1,f
  4591  0469  0CC3               	rrf	___lmul@multiplier,f
  4592  046A  0B89               	decfsz	9,f
  4593  046B  2C66               	goto	u1425
  4594  046C  0846               	movf	___lmul@multiplier+3,w
  4595  046D  0445               	iorwf	___lmul@multiplier+2,w
  4596  046E  0444               	iorwf	___lmul@multiplier+1,w
  4597  046F  0443               	iorwf	___lmul@multiplier,w
  4598  0470  1D03               	skipz
  4599  0471  2C73               	goto	u1431
  4600  0472  2C74               	goto	u1430
  4601  0473                     u1431:	
  4602  0473  2C51               	goto	l2222
  4603  0474                     u1430:	
  4604  0474                     l2230:	
  4605  0474  0875               	movf	___lmul@product+3,w
  4606  0475  00C6               	movwf	?___lmul+3
  4607  0476  0874               	movf	___lmul@product+2,w
  4608  0477  00C5               	movwf	?___lmul+2
  4609  0478  0873               	movf	___lmul@product+1,w
  4610  0479  00C4               	movwf	?___lmul+1
  4611  047A  0872               	movf	___lmul@product,w
  4612  047B  00C3               	movwf	?___lmul
  4613  047C                     l554:	
  4614  047C  0008               	return
  4615  047D                     __end_of___lmul:	
  4616                           
  4617                           	psect	text5
  4618  053F                     __ptext5:	
  4619 ;; *************** function _SYSTEM_Initialize *****************
  4620 ;; Defined at:
  4621 ;;		line 50 in file "mcc_generated_files/mcc.c"
  4622 ;; Parameters:    Size  Location     Type
  4623 ;;		None
  4624 ;; Auto vars:     Size  Location     Type
  4625 ;;		None
  4626 ;; Return value:  Size  Location     Type
  4627 ;;                  1    wreg      void 
  4628 ;; Registers used:
  4629 ;;		wreg, status,2, status,0, pclath, cstack
  4630 ;; Tracked objects:
  4631 ;;		On entry : 0/0
  4632 ;;		On exit  : 0/0
  4633 ;;		Unchanged: 0/0
  4634 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4635 ;;      Params:         0       0       0       0       0       0       0       0
  4636 ;;      Locals:         0       0       0       0       0       0       0       0
  4637 ;;      Temps:          0       0       0       0       0       0       0       0
  4638 ;;      Totals:         0       0       0       0       0       0       0       0
  4639 ;;Total ram usage:        0 bytes
  4640 ;; Hardware stack levels used:    1
  4641 ;; Hardware stack levels required when called:    5
  4642 ;; This function calls:
  4643 ;;		_ADC_Initialize
  4644 ;;		_EUSART1_Initialize
  4645 ;;		_OSCILLATOR_Initialize
  4646 ;;		_PIN_MANAGER_Initialize
  4647 ;;		_PMD_Initialize
  4648 ;;		_TMR1_Initialize
  4649 ;; This function is called by:
  4650 ;;		_main
  4651 ;; This function uses a non-reentrant model
  4652 ;;
  4653                           
  4654                           
  4655                           ;psect for function _SYSTEM_Initialize
  4656  053F                     _SYSTEM_Initialize:	
  4657  053F                     l1754:	
  4658                           ;incstack = 0
  4659                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  4660                           
  4661                           
  4662                           ;mcc_generated_files/mcc.c: 52:     PMD_Initialize();
  4663  053F  3185  256D  3185   	fcall	_PMD_Initialize
  4664  0542                     l1756:	
  4665                           
  4666                           ;mcc_generated_files/mcc.c: 53:     PIN_MANAGER_Initialize();
  4667  0542  3184  24A9  3185   	fcall	_PIN_MANAGER_Initialize
  4668  0545                     l1758:	
  4669                           
  4670                           ;mcc_generated_files/mcc.c: 54:     OSCILLATOR_Initialize();
  4671  0545  3185  2563  3185   	fcall	_OSCILLATOR_Initialize
  4672  0548                     l1760:	
  4673                           
  4674                           ;mcc_generated_files/mcc.c: 55:     TMR1_Initialize();
  4675  0548  3184  24F2  3185   	fcall	_TMR1_Initialize
  4676  054B                     l1762:	
  4677                           
  4678                           ;mcc_generated_files/mcc.c: 56:     ADC_Initialize();
  4679  054B  3185  2575  3185   	fcall	_ADC_Initialize
  4680  054E                     l1764:	
  4681                           
  4682                           ;mcc_generated_files/mcc.c: 57:     EUSART1_Initialize();
  4683  054E  3184  24D0  3185   	fcall	_EUSART1_Initialize
  4684  0551                     l250:	
  4685  0551  0008               	return
  4686  0552                     __end_of_SYSTEM_Initialize:	
  4687                           
  4688                           	psect	text6
  4689  04F2                     __ptext6:	
  4690 ;; *************** function _TMR1_Initialize *****************
  4691 ;; Defined at:
  4692 ;;		line 64 in file "mcc_generated_files/tmr1.c"
  4693 ;; Parameters:    Size  Location     Type
  4694 ;;		None
  4695 ;; Auto vars:     Size  Location     Type
  4696 ;;		None
  4697 ;; Return value:  Size  Location     Type
  4698 ;;                  1    wreg      void 
  4699 ;; Registers used:
  4700 ;;		wreg, status,2, status,0, pclath, cstack
  4701 ;; Tracked objects:
  4702 ;;		On entry : 0/0
  4703 ;;		On exit  : 0/0
  4704 ;;		Unchanged: 0/0
  4705 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4706 ;;      Params:         0       0       0       0       0       0       0       0
  4707 ;;      Locals:         0       0       0       0       0       0       0       0
  4708 ;;      Temps:          0       0       0       0       0       0       0       0
  4709 ;;      Totals:         0       0       0       0       0       0       0       0
  4710 ;;Total ram usage:        0 bytes
  4711 ;; Hardware stack levels used:    1
  4712 ;; Hardware stack levels required when called:    4
  4713 ;; This function calls:
  4714 ;;		_TMR1_SetInterruptHandler
  4715 ;; This function is called by:
  4716 ;;		_SYSTEM_Initialize
  4717 ;; This function uses a non-reentrant model
  4718 ;;
  4719                           
  4720                           
  4721                           ;psect for function _TMR1_Initialize
  4722  04F2                     _TMR1_Initialize:	
  4723  04F2                     l1612:	
  4724                           ;incstack = 0
  4725                           ; Regs used in _TMR1_Initialize: [wreg+status,2+status,0+pclath+cstack]
  4726                           
  4727                           
  4728                           ;mcc_generated_files/tmr1.c: 69:     T1GCON = 0x00;
  4729  04F2  0144               	movlb	4	; select bank4
  4730  04F3  018F               	clrf	15	;volatile
  4731                           
  4732                           ;mcc_generated_files/tmr1.c: 72:     T1GATE = 0x00;
  4733  04F4  0190               	clrf	16	;volatile
  4734  04F5                     l1614:	
  4735                           
  4736                           ;mcc_generated_files/tmr1.c: 75:     T1CLK = 0x04;
  4737  04F5  3004               	movlw	4
  4738  04F6  0091               	movwf	17	;volatile
  4739  04F7                     l1616:	
  4740                           
  4741                           ;mcc_generated_files/tmr1.c: 78:     TMR1H = 0x86;
  4742  04F7  3086               	movlw	134
  4743  04F8  008D               	movwf	13	;volatile
  4744  04F9                     l1618:	
  4745                           
  4746                           ;mcc_generated_files/tmr1.c: 81:     TMR1L = 0xE8;
  4747  04F9  30E8               	movlw	232
  4748  04FA  008C               	movwf	12	;volatile
  4749  04FB                     l1620:	
  4750                           
  4751                           ;mcc_generated_files/tmr1.c: 84:     timer1ReloadVal=(uint16_t)((TMR1H << 8) | TMR1L);
  4752  04FB  080D               	movf	13,w	;volatile
  4753  04FC  0140               	movlb	0	; select bank0
  4754  04FD  00D9               	movwf	_timer1ReloadVal+1	;volatile
  4755  04FE  0144               	movlb	4	; select bank4
  4756  04FF  080C               	movf	12,w	;volatile
  4757  0500  0140               	movlb	0	; select bank0
  4758  0501  00D8               	movwf	_timer1ReloadVal	;volatile
  4759  0502                     l1622:	
  4760                           
  4761                           ;mcc_generated_files/tmr1.c: 87:     PIR4bits.TMR1IF = 0;
  4762  0502  014E               	movlb	14	; select bank14
  4763  0503  1010               	bcf	16,0	;volatile
  4764  0504                     l1624:	
  4765                           
  4766                           ;mcc_generated_files/tmr1.c: 90:     PIE4bits.TMR1IE = 1;
  4767  0504  141A               	bsf	26,0	;volatile
  4768  0505                     l1626:	
  4769                           
  4770                           ;mcc_generated_files/tmr1.c: 93:     TMR1_SetInterruptHandler(TMR1_DefaultInterruptHandl
      +                          er);
  4771  0505  309B               	movlw	low _TMR1_DefaultInterruptHandler
  4772  0506  00F2               	movwf	TMR1_SetInterruptHandler@InterruptHandler
  4773  0507  3005               	movlw	high _TMR1_DefaultInterruptHandler
  4774  0508  00F3               	movwf	TMR1_SetInterruptHandler@InterruptHandler+1
  4775  0509  3185  2583  3184   	fcall	_TMR1_SetInterruptHandler
  4776  050C                     l1628:	
  4777                           
  4778                           ;mcc_generated_files/tmr1.c: 96:     T1CON = 0x01;
  4779  050C  3001               	movlw	1
  4780  050D  0144               	movlb	4	; select bank4
  4781  050E  008E               	movwf	14	;volatile
  4782  050F                     l31:	
  4783  050F  0008               	return
  4784  0510                     __end_of_TMR1_Initialize:	
  4785                           
  4786                           	psect	text7
  4787  0583                     __ptext7:	
  4788 ;; *************** function _TMR1_SetInterruptHandler *****************
  4789 ;; Defined at:
  4790 ;;		line 178 in file "mcc_generated_files/tmr1.c"
  4791 ;; Parameters:    Size  Location     Type
  4792 ;;  InterruptHan    2    2[COMMON] PTR FTN()void 
  4793 ;;		 -> v_1s_service_routine(1), TMR1_DefaultInterruptHandler(1), 
  4794 ;; Auto vars:     Size  Location     Type
  4795 ;;		None
  4796 ;; Return value:  Size  Location     Type
  4797 ;;                  1    wreg      void 
  4798 ;; Registers used:
  4799 ;;		wreg
  4800 ;; Tracked objects:
  4801 ;;		On entry : 0/0
  4802 ;;		On exit  : 0/0
  4803 ;;		Unchanged: 0/0
  4804 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4805 ;;      Params:         2       0       0       0       0       0       0       0
  4806 ;;      Locals:         0       0       0       0       0       0       0       0
  4807 ;;      Temps:          0       0       0       0       0       0       0       0
  4808 ;;      Totals:         2       0       0       0       0       0       0       0
  4809 ;;Total ram usage:        2 bytes
  4810 ;; Hardware stack levels used:    1
  4811 ;; Hardware stack levels required when called:    3
  4812 ;; This function calls:
  4813 ;;		Nothing
  4814 ;; This function is called by:
  4815 ;;		_TMR1_Initialize
  4816 ;;		_main
  4817 ;; This function uses a non-reentrant model
  4818 ;;
  4819                           
  4820                           
  4821                           ;psect for function _TMR1_SetInterruptHandler
  4822  0583                     _TMR1_SetInterruptHandler:	
  4823  0583                     l1604:	
  4824                           ;incstack = 0
  4825                           ; Regs used in _TMR1_SetInterruptHandler: [wreg]
  4826                           
  4827                           
  4828                           ;mcc_generated_files/tmr1.c: 179:     TMR1_InterruptHandler = InterruptHandler;
  4829  0583  0873               	movf	TMR1_SetInterruptHandler@InterruptHandler+1,w
  4830  0584  0140               	movlb	0	; select bank0
  4831  0585  00D7               	movwf	_TMR1_InterruptHandler+1
  4832  0586  0872               	movf	TMR1_SetInterruptHandler@InterruptHandler,w
  4833  0587  00D6               	movwf	_TMR1_InterruptHandler
  4834  0588                     l61:	
  4835  0588  0008               	return
  4836  0589                     __end_of_TMR1_SetInterruptHandler:	
  4837                           
  4838                           	psect	text8
  4839  056D                     __ptext8:	
  4840 ;; *************** function _PMD_Initialize *****************
  4841 ;; Defined at:
  4842 ;;		line 76 in file "mcc_generated_files/mcc.c"
  4843 ;; Parameters:    Size  Location     Type
  4844 ;;		None
  4845 ;; Auto vars:     Size  Location     Type
  4846 ;;		None
  4847 ;; Return value:  Size  Location     Type
  4848 ;;                  1    wreg      void 
  4849 ;; Registers used:
  4850 ;;		status,2
  4851 ;; Tracked objects:
  4852 ;;		On entry : 0/0
  4853 ;;		On exit  : 0/0
  4854 ;;		Unchanged: 0/0
  4855 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4856 ;;      Params:         0       0       0       0       0       0       0       0
  4857 ;;      Locals:         0       0       0       0       0       0       0       0
  4858 ;;      Temps:          0       0       0       0       0       0       0       0
  4859 ;;      Totals:         0       0       0       0       0       0       0       0
  4860 ;;Total ram usage:        0 bytes
  4861 ;; Hardware stack levels used:    1
  4862 ;; Hardware stack levels required when called:    3
  4863 ;; This function calls:
  4864 ;;		Nothing
  4865 ;; This function is called by:
  4866 ;;		_SYSTEM_Initialize
  4867 ;; This function uses a non-reentrant model
  4868 ;;
  4869                           
  4870                           
  4871                           ;psect for function _PMD_Initialize
  4872  056D                     _PMD_Initialize:	
  4873  056D                     l1674:	
  4874                           ;incstack = 0
  4875                           ; Regs used in _PMD_Initialize: [status,2]
  4876                           
  4877                           
  4878                           ;mcc_generated_files/mcc.c: 79:     PMD0 = 0x00;
  4879  056D  014F               	movlb	15	; select bank15
  4880  056E  0196               	clrf	22	;volatile
  4881                           
  4882                           ;mcc_generated_files/mcc.c: 81:     PMD1 = 0x00;
  4883  056F  0197               	clrf	23	;volatile
  4884                           
  4885                           ;mcc_generated_files/mcc.c: 83:     PMD2 = 0x00;
  4886  0570  0198               	clrf	24	;volatile
  4887                           
  4888                           ;mcc_generated_files/mcc.c: 85:     PMD3 = 0x00;
  4889  0571  0199               	clrf	25	;volatile
  4890                           
  4891                           ;mcc_generated_files/mcc.c: 87:     PMD4 = 0x00;
  4892  0572  019A               	clrf	26	;volatile
  4893                           
  4894                           ;mcc_generated_files/mcc.c: 89:     PMD5 = 0x00;
  4895  0573  019B               	clrf	27	;volatile
  4896  0574                     l256:	
  4897  0574  0008               	return
  4898  0575                     __end_of_PMD_Initialize:	
  4899                           
  4900                           	psect	text9
  4901  04A9                     __ptext9:	
  4902 ;; *************** function _PIN_MANAGER_Initialize *****************
  4903 ;; Defined at:
  4904 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  4905 ;; Parameters:    Size  Location     Type
  4906 ;;		None
  4907 ;; Auto vars:     Size  Location     Type
  4908 ;;		None
  4909 ;; Return value:  Size  Location     Type
  4910 ;;                  1    wreg      void 
  4911 ;; Registers used:
  4912 ;;		wreg, status,2
  4913 ;; Tracked objects:
  4914 ;;		On entry : 0/0
  4915 ;;		On exit  : 0/0
  4916 ;;		Unchanged: 0/0
  4917 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4918 ;;      Params:         0       0       0       0       0       0       0       0
  4919 ;;      Locals:         0       0       0       0       0       0       0       0
  4920 ;;      Temps:          0       0       0       0       0       0       0       0
  4921 ;;      Totals:         0       0       0       0       0       0       0       0
  4922 ;;Total ram usage:        0 bytes
  4923 ;; Hardware stack levels used:    1
  4924 ;; Hardware stack levels required when called:    3
  4925 ;; This function calls:
  4926 ;;		Nothing
  4927 ;; This function is called by:
  4928 ;;		_SYSTEM_Initialize
  4929 ;; This function uses a non-reentrant model
  4930 ;;
  4931                           
  4932                           
  4933                           ;psect for function _PIN_MANAGER_Initialize
  4934  04A9                     _PIN_MANAGER_Initialize:	
  4935  04A9                     l1676:	
  4936                           ;incstack = 0
  4937                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  4938                           
  4939                           
  4940                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x00;
  4941  04A9  0140               	movlb	0	; select bank0
  4942  04AA  0198               	clrf	24	;volatile
  4943                           
  4944                           ;mcc_generated_files/pin_manager.c: 61:     LATB = 0x00;
  4945  04AB  0199               	clrf	25	;volatile
  4946                           
  4947                           ;mcc_generated_files/pin_manager.c: 62:     LATC = 0x00;
  4948  04AC  019A               	clrf	26	;volatile
  4949  04AD                     l1678:	
  4950                           
  4951                           ;mcc_generated_files/pin_manager.c: 67:     TRISA = 0x3B;
  4952  04AD  303B               	movlw	59
  4953  04AE  0092               	movwf	18	;volatile
  4954  04AF                     l1680:	
  4955                           
  4956                           ;mcc_generated_files/pin_manager.c: 68:     TRISB = 0x60;
  4957  04AF  3060               	movlw	96
  4958  04B0  0093               	movwf	19	;volatile
  4959  04B1                     l1682:	
  4960                           
  4961                           ;mcc_generated_files/pin_manager.c: 69:     TRISC = 0xFF;
  4962  04B1  30FF               	movlw	255
  4963  04B2  0094               	movwf	20	;volatile
  4964  04B3                     l1684:	
  4965                           
  4966                           ;mcc_generated_files/pin_manager.c: 74:     ANSELC = 0xFF;
  4967  04B3  30FF               	movlw	255
  4968  04B4  017E               	movlb	62	; select bank62
  4969  04B5  00CE               	movwf	78	;volatile
  4970  04B6                     l1686:	
  4971                           
  4972                           ;mcc_generated_files/pin_manager.c: 75:     ANSELB = 0xD0;
  4973  04B6  30D0               	movlw	208
  4974  04B7  00C3               	movwf	67	;volatile
  4975  04B8                     l1688:	
  4976                           
  4977                           ;mcc_generated_files/pin_manager.c: 76:     ANSELA = 0x37;
  4978  04B8  3037               	movlw	55
  4979  04B9  00B8               	movwf	56	;volatile
  4980                           
  4981                           ;mcc_generated_files/pin_manager.c: 81:     WPUB = 0x00;
  4982  04BA  01C4               	clrf	68	;volatile
  4983                           
  4984                           ;mcc_generated_files/pin_manager.c: 82:     WPUA = 0x00;
  4985  04BB  01B9               	clrf	57	;volatile
  4986                           
  4987                           ;mcc_generated_files/pin_manager.c: 83:     WPUC = 0x00;
  4988  04BC  01CF               	clrf	79	;volatile
  4989                           
  4990                           ;mcc_generated_files/pin_manager.c: 88:     ODCONA = 0x00;
  4991  04BD  01BA               	clrf	58	;volatile
  4992                           
  4993                           ;mcc_generated_files/pin_manager.c: 89:     ODCONB = 0x00;
  4994  04BE  01C5               	clrf	69	;volatile
  4995                           
  4996                           ;mcc_generated_files/pin_manager.c: 90:     ODCONC = 0x00;
  4997  04BF  01D0               	clrf	80	;volatile
  4998  04C0                     l1690:	
  4999                           
  5000                           ;mcc_generated_files/pin_manager.c: 95:     SLRCONA = 0x3F;
  5001  04C0  303F               	movlw	63
  5002  04C1  00BB               	movwf	59	;volatile
  5003  04C2                     l1692:	
  5004                           
  5005                           ;mcc_generated_files/pin_manager.c: 96:     SLRCONB = 0x00;
  5006  04C2  01C6               	clrf	70	;volatile
  5007                           
  5008                           ;mcc_generated_files/pin_manager.c: 97:     SLRCONC = 0x3F;
  5009  04C3  303F               	movlw	63
  5010  04C4  00D1               	movwf	81	;volatile
  5011                           
  5012                           ;mcc_generated_files/pin_manager.c: 102:     INLVLA = 0x3F;
  5013  04C5  303F               	movlw	63
  5014  04C6  00BC               	movwf	60	;volatile
  5015  04C7                     l1694:	
  5016                           
  5017                           ;mcc_generated_files/pin_manager.c: 103:     INLVLB = 0x00;
  5018  04C7  01C7               	clrf	71	;volatile
  5019  04C8                     l1696:	
  5020                           
  5021                           ;mcc_generated_files/pin_manager.c: 104:     INLVLC = 0x3F;
  5022  04C8  303F               	movlw	63
  5023  04C9  00D2               	movwf	82	;volatile
  5024  04CA                     l1698:	
  5025                           
  5026                           ;mcc_generated_files/pin_manager.c: 113:     RB4PPS = 0x0F;
  5027  04CA  300F               	movlw	15
  5028  04CB  009C               	movwf	28	;volatile
  5029  04CC                     l1700:	
  5030                           
  5031                           ;mcc_generated_files/pin_manager.c: 114:     RX1DTPPS = 0x0D;
  5032  04CC  300D               	movlw	13
  5033  04CD  017D               	movlb	61	; select bank61
  5034  04CE  00CB               	movwf	75	;volatile
  5035  04CF                     l305:	
  5036  04CF  0008               	return
  5037  04D0                     __end_of_PIN_MANAGER_Initialize:	
  5038                           
  5039                           	psect	text10
  5040  0563                     __ptext10:	
  5041 ;; *************** function _OSCILLATOR_Initialize *****************
  5042 ;; Defined at:
  5043 ;;		line 60 in file "mcc_generated_files/mcc.c"
  5044 ;; Parameters:    Size  Location     Type
  5045 ;;		None
  5046 ;; Auto vars:     Size  Location     Type
  5047 ;;		None
  5048 ;; Return value:  Size  Location     Type
  5049 ;;                  1    wreg      void 
  5050 ;; Registers used:
  5051 ;;		wreg, status,2
  5052 ;; Tracked objects:
  5053 ;;		On entry : 0/0
  5054 ;;		On exit  : 0/0
  5055 ;;		Unchanged: 0/0
  5056 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5057 ;;      Params:         0       0       0       0       0       0       0       0
  5058 ;;      Locals:         0       0       0       0       0       0       0       0
  5059 ;;      Temps:          0       0       0       0       0       0       0       0
  5060 ;;      Totals:         0       0       0       0       0       0       0       0
  5061 ;;Total ram usage:        0 bytes
  5062 ;; Hardware stack levels used:    1
  5063 ;; Hardware stack levels required when called:    3
  5064 ;; This function calls:
  5065 ;;		Nothing
  5066 ;; This function is called by:
  5067 ;;		_SYSTEM_Initialize
  5068 ;; This function uses a non-reentrant model
  5069 ;;
  5070                           
  5071                           
  5072                           ;psect for function _OSCILLATOR_Initialize
  5073  0563                     _OSCILLATOR_Initialize:	
  5074  0563                     l1702:	
  5075                           ;incstack = 0
  5076                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  5077                           
  5078                           
  5079                           ;mcc_generated_files/mcc.c: 63:     OSCCON1 = 0x62;
  5080  0563  3062               	movlw	98
  5081  0564  0151               	movlb	17	; select bank17
  5082  0565  008D               	movwf	13	;volatile
  5083  0566                     l1704:	
  5084                           
  5085                           ;mcc_generated_files/mcc.c: 65:     OSCCON3 = 0x00;
  5086  0566  018F               	clrf	15	;volatile
  5087  0567                     l1706:	
  5088                           
  5089                           ;mcc_generated_files/mcc.c: 67:     OSCEN = 0x00;
  5090  0567  0191               	clrf	17	;volatile
  5091                           
  5092                           ;mcc_generated_files/mcc.c: 69:     OSCFRQ = 0x02;
  5093  0568  3002               	movlw	2
  5094  0569  0093               	movwf	19	;volatile
  5095  056A                     l1708:	
  5096                           
  5097                           ;mcc_generated_files/mcc.c: 71:     OSCSTAT = 0x00;
  5098  056A  0190               	clrf	16	;volatile
  5099  056B                     l1710:	
  5100                           
  5101                           ;mcc_generated_files/mcc.c: 73:     OSCTUNE = 0x00;
  5102  056B  0192               	clrf	18	;volatile
  5103  056C                     l253:	
  5104  056C  0008               	return
  5105  056D                     __end_of_OSCILLATOR_Initialize:	
  5106                           
  5107                           	psect	text11
  5108  04D0                     __ptext11:	
  5109 ;; *************** function _EUSART1_Initialize *****************
  5110 ;; Defined at:
  5111 ;;		line 66 in file "mcc_generated_files/eusart1.c"
  5112 ;; Parameters:    Size  Location     Type
  5113 ;;		None
  5114 ;; Auto vars:     Size  Location     Type
  5115 ;;		None
  5116 ;; Return value:  Size  Location     Type
  5117 ;;                  1    wreg      void 
  5118 ;; Registers used:
  5119 ;;		wreg, status,2, status,0, pclath, cstack
  5120 ;; Tracked objects:
  5121 ;;		On entry : 0/0
  5122 ;;		On exit  : 0/0
  5123 ;;		Unchanged: 0/0
  5124 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5125 ;;      Params:         0       0       0       0       0       0       0       0
  5126 ;;      Locals:         0       0       0       0       0       0       0       0
  5127 ;;      Temps:          0       0       0       0       0       0       0       0
  5128 ;;      Totals:         0       0       0       0       0       0       0       0
  5129 ;;Total ram usage:        0 bytes
  5130 ;; Hardware stack levels used:    1
  5131 ;; Hardware stack levels required when called:    4
  5132 ;; This function calls:
  5133 ;;		_EUSART1_SetErrorHandler
  5134 ;;		_EUSART1_SetFramingErrorHandler
  5135 ;;		_EUSART1_SetOverrunErrorHandler
  5136 ;; This function is called by:
  5137 ;;		_SYSTEM_Initialize
  5138 ;; This function uses a non-reentrant model
  5139 ;;
  5140                           
  5141                           
  5142                           ;psect for function _EUSART1_Initialize
  5143  04D0                     _EUSART1_Initialize:	
  5144  04D0                     l1662:	
  5145                           ;incstack = 0
  5146                           ; Regs used in _EUSART1_Initialize: [wreg+status,2+status,0+pclath+cstack]
  5147                           
  5148                           
  5149                           ;mcc_generated_files/eusart1.c: 71:     BAUD1CON = 0x08;
  5150  04D0  3008               	movlw	8
  5151  04D1  0142               	movlb	2	; select bank2
  5152  04D2  009F               	movwf	31	;volatile
  5153                           
  5154                           ;mcc_generated_files/eusart1.c: 74:     RC1STA = 0x10;
  5155  04D3  3010               	movlw	16
  5156  04D4  009D               	movwf	29	;volatile
  5157                           
  5158                           ;mcc_generated_files/eusart1.c: 77:     TX1STA = 0x24;
  5159  04D5  3024               	movlw	36
  5160  04D6  009E               	movwf	30	;volatile
  5161                           
  5162                           ;mcc_generated_files/eusart1.c: 80:     SP1BRGL = 0x19;
  5163  04D7  3019               	movlw	25
  5164  04D8  009B               	movwf	27	;volatile
  5165  04D9                     l1664:	
  5166                           
  5167                           ;mcc_generated_files/eusart1.c: 83:     SP1BRGH = 0x00;
  5168  04D9  019C               	clrf	28	;volatile
  5169  04DA                     l1666:	
  5170                           
  5171                           ;mcc_generated_files/eusart1.c: 86:     EUSART1_SetFramingErrorHandler(EUSART1_DefaultFr
      +                          amingErrorHandler);
  5172  04DA  3000               	movlw	0
  5173  04DB  00F2               	movwf	EUSART1_SetFramingErrorHandler@interruptHandler
  5174  04DC  3000               	movlw	0
  5175  04DD  00F3               	movwf	EUSART1_SetFramingErrorHandler@interruptHandler+1
  5176  04DE  3185  258F  3184   	fcall	_EUSART1_SetFramingErrorHandler
  5177  04E1                     l1668:	
  5178                           
  5179                           ;mcc_generated_files/eusart1.c: 87:     EUSART1_SetOverrunErrorHandler(EUSART1_DefaultOv
      +                          errunErrorHandler);
  5180  04E1  3000               	movlw	0
  5181  04E2  00F2               	movwf	EUSART1_SetOverrunErrorHandler@interruptHandler
  5182  04E3  3000               	movlw	0
  5183  04E4  00F3               	movwf	EUSART1_SetOverrunErrorHandler@interruptHandler+1
  5184  04E5  3185  2589  3184   	fcall	_EUSART1_SetOverrunErrorHandler
  5185  04E8                     l1670:	
  5186                           
  5187                           ;mcc_generated_files/eusart1.c: 88:     EUSART1_SetErrorHandler(EUSART1_DefaultErrorHand
      +                          ler);
  5188  04E8  3000               	movlw	0
  5189  04E9  00F2               	movwf	EUSART1_SetErrorHandler@interruptHandler
  5190  04EA  3000               	movlw	0
  5191  04EB  00F3               	movwf	EUSART1_SetErrorHandler@interruptHandler+1
  5192  04EC  3185  2595  3184   	fcall	_EUSART1_SetErrorHandler
  5193  04EF                     l1672:	
  5194                           
  5195                           ;mcc_generated_files/eusart1.c: 90:     eusart1RxLastError.status = 0;
  5196  04EF  0140               	movlb	0	; select bank0
  5197  04F0  01C2               	clrf	_eusart1RxLastError	;volatile
  5198  04F1                     l143:	
  5199  04F1  0008               	return
  5200  04F2                     __end_of_EUSART1_Initialize:	
  5201                           
  5202                           	psect	text12
  5203  0589                     __ptext12:	
  5204 ;; *************** function _EUSART1_SetOverrunErrorHandler *****************
  5205 ;; Defined at:
  5206 ;;		line 170 in file "mcc_generated_files/eusart1.c"
  5207 ;; Parameters:    Size  Location     Type
  5208 ;;  interruptHan    2    2[COMMON] PTR FTN()void 
  5209 ;;		 -> EUSART1_DefaultOverrunErrorHandler(1), 
  5210 ;; Auto vars:     Size  Location     Type
  5211 ;;		None
  5212 ;; Return value:  Size  Location     Type
  5213 ;;                  1    wreg      void 
  5214 ;; Registers used:
  5215 ;;		wreg
  5216 ;; Tracked objects:
  5217 ;;		On entry : 0/0
  5218 ;;		On exit  : 0/0
  5219 ;;		Unchanged: 0/0
  5220 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5221 ;;      Params:         2       0       0       0       0       0       0       0
  5222 ;;      Locals:         0       0       0       0       0       0       0       0
  5223 ;;      Temps:          0       0       0       0       0       0       0       0
  5224 ;;      Totals:         2       0       0       0       0       0       0       0
  5225 ;;Total ram usage:        2 bytes
  5226 ;; Hardware stack levels used:    1
  5227 ;; Hardware stack levels required when called:    3
  5228 ;; This function calls:
  5229 ;;		Nothing
  5230 ;; This function is called by:
  5231 ;;		_EUSART1_Initialize
  5232 ;; This function uses a non-reentrant model
  5233 ;;
  5234                           
  5235                           
  5236                           ;psect for function _EUSART1_SetOverrunErrorHandler
  5237  0589                     _EUSART1_SetOverrunErrorHandler:	
  5238  0589                     l1608:	
  5239                           ;incstack = 0
  5240                           ; Regs used in _EUSART1_SetOverrunErrorHandler: [wreg]
  5241                           
  5242                           
  5243                           ;mcc_generated_files/eusart1.c: 171:     EUSART1_OverrunErrorHandler = interruptHandler;
  5244  0589  0873               	movf	EUSART1_SetOverrunErrorHandler@interruptHandler+1,w
  5245  058A  0140               	movlb	0	; select bank0
  5246  058B  00D3               	movwf	_EUSART1_OverrunErrorHandler+1
  5247  058C  0872               	movf	EUSART1_SetOverrunErrorHandler@interruptHandler,w
  5248  058D  00D2               	movwf	_EUSART1_OverrunErrorHandler
  5249  058E                     l191:	
  5250  058E  0008               	return
  5251  058F                     __end_of_EUSART1_SetOverrunErrorHandler:	
  5252                           
  5253                           	psect	text13
  5254  058F                     __ptext13:	
  5255 ;; *************** function _EUSART1_SetFramingErrorHandler *****************
  5256 ;; Defined at:
  5257 ;;		line 166 in file "mcc_generated_files/eusart1.c"
  5258 ;; Parameters:    Size  Location     Type
  5259 ;;  interruptHan    2    2[COMMON] PTR FTN()void 
  5260 ;;		 -> EUSART1_DefaultFramingErrorHandler(1), 
  5261 ;; Auto vars:     Size  Location     Type
  5262 ;;		None
  5263 ;; Return value:  Size  Location     Type
  5264 ;;                  1    wreg      void 
  5265 ;; Registers used:
  5266 ;;		wreg
  5267 ;; Tracked objects:
  5268 ;;		On entry : 0/0
  5269 ;;		On exit  : 0/0
  5270 ;;		Unchanged: 0/0
  5271 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5272 ;;      Params:         2       0       0       0       0       0       0       0
  5273 ;;      Locals:         0       0       0       0       0       0       0       0
  5274 ;;      Temps:          0       0       0       0       0       0       0       0
  5275 ;;      Totals:         2       0       0       0       0       0       0       0
  5276 ;;Total ram usage:        2 bytes
  5277 ;; Hardware stack levels used:    1
  5278 ;; Hardware stack levels required when called:    3
  5279 ;; This function calls:
  5280 ;;		Nothing
  5281 ;; This function is called by:
  5282 ;;		_EUSART1_Initialize
  5283 ;; This function uses a non-reentrant model
  5284 ;;
  5285                           
  5286                           
  5287                           ;psect for function _EUSART1_SetFramingErrorHandler
  5288  058F                     _EUSART1_SetFramingErrorHandler:	
  5289  058F                     l1606:	
  5290                           ;incstack = 0
  5291                           ; Regs used in _EUSART1_SetFramingErrorHandler: [wreg]
  5292                           
  5293                           
  5294                           ;mcc_generated_files/eusart1.c: 167:     EUSART1_FramingErrorHandler = interruptHandler;
  5295  058F  0873               	movf	EUSART1_SetFramingErrorHandler@interruptHandler+1,w
  5296  0590  0140               	movlb	0	; select bank0
  5297  0591  00D5               	movwf	_EUSART1_FramingErrorHandler+1
  5298  0592  0872               	movf	EUSART1_SetFramingErrorHandler@interruptHandler,w
  5299  0593  00D4               	movwf	_EUSART1_FramingErrorHandler
  5300  0594                     l188:	
  5301  0594  0008               	return
  5302  0595                     __end_of_EUSART1_SetFramingErrorHandler:	
  5303                           
  5304                           	psect	text14
  5305  0595                     __ptext14:	
  5306 ;; *************** function _EUSART1_SetErrorHandler *****************
  5307 ;; Defined at:
  5308 ;;		line 174 in file "mcc_generated_files/eusart1.c"
  5309 ;; Parameters:    Size  Location     Type
  5310 ;;  interruptHan    2    2[COMMON] PTR FTN()void 
  5311 ;;		 -> EUSART1_DefaultErrorHandler(1), 
  5312 ;; Auto vars:     Size  Location     Type
  5313 ;;		None
  5314 ;; Return value:  Size  Location     Type
  5315 ;;                  1    wreg      void 
  5316 ;; Registers used:
  5317 ;;		wreg
  5318 ;; Tracked objects:
  5319 ;;		On entry : 0/0
  5320 ;;		On exit  : 0/0
  5321 ;;		Unchanged: 0/0
  5322 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5323 ;;      Params:         2       0       0       0       0       0       0       0
  5324 ;;      Locals:         0       0       0       0       0       0       0       0
  5325 ;;      Temps:          0       0       0       0       0       0       0       0
  5326 ;;      Totals:         2       0       0       0       0       0       0       0
  5327 ;;Total ram usage:        2 bytes
  5328 ;; Hardware stack levels used:    1
  5329 ;; Hardware stack levels required when called:    3
  5330 ;; This function calls:
  5331 ;;		Nothing
  5332 ;; This function is called by:
  5333 ;;		_EUSART1_Initialize
  5334 ;; This function uses a non-reentrant model
  5335 ;;
  5336                           
  5337                           
  5338                           ;psect for function _EUSART1_SetErrorHandler
  5339  0595                     _EUSART1_SetErrorHandler:	
  5340  0595                     l1610:	
  5341                           ;incstack = 0
  5342                           ; Regs used in _EUSART1_SetErrorHandler: [wreg]
  5343                           
  5344                           
  5345                           ;mcc_generated_files/eusart1.c: 175:     EUSART1_ErrorHandler = interruptHandler;
  5346  0595  0873               	movf	EUSART1_SetErrorHandler@interruptHandler+1,w
  5347  0596  0140               	movlb	0	; select bank0
  5348  0597  00D1               	movwf	_EUSART1_ErrorHandler+1
  5349  0598  0872               	movf	EUSART1_SetErrorHandler@interruptHandler,w
  5350  0599  00D0               	movwf	_EUSART1_ErrorHandler
  5351  059A                     l194:	
  5352  059A  0008               	return
  5353  059B                     __end_of_EUSART1_SetErrorHandler:	
  5354                           
  5355                           	psect	text15
  5356  0575                     __ptext15:	
  5357 ;; *************** function _ADC_Initialize *****************
  5358 ;; Defined at:
  5359 ;;		line 65 in file "mcc_generated_files/adc.c"
  5360 ;; Parameters:    Size  Location     Type
  5361 ;;		None
  5362 ;; Auto vars:     Size  Location     Type
  5363 ;;		None
  5364 ;; Return value:  Size  Location     Type
  5365 ;;                  1    wreg      void 
  5366 ;; Registers used:
  5367 ;;		wreg, status,2
  5368 ;; Tracked objects:
  5369 ;;		On entry : 0/0
  5370 ;;		On exit  : 0/0
  5371 ;;		Unchanged: 0/0
  5372 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5373 ;;      Params:         0       0       0       0       0       0       0       0
  5374 ;;      Locals:         0       0       0       0       0       0       0       0
  5375 ;;      Temps:          0       0       0       0       0       0       0       0
  5376 ;;      Totals:         0       0       0       0       0       0       0       0
  5377 ;;Total ram usage:        0 bytes
  5378 ;; Hardware stack levels used:    1
  5379 ;; Hardware stack levels required when called:    3
  5380 ;; This function calls:
  5381 ;;		Nothing
  5382 ;; This function is called by:
  5383 ;;		_SYSTEM_Initialize
  5384 ;; This function uses a non-reentrant model
  5385 ;;
  5386                           
  5387                           
  5388                           ;psect for function _ADC_Initialize
  5389  0575                     _ADC_Initialize:	
  5390  0575                     l1644:	
  5391                           ;incstack = 0
  5392                           ; Regs used in _ADC_Initialize: [wreg+status,2]
  5393                           
  5394                           
  5395                           ;mcc_generated_files/adc.c: 70:     ADCON0 = 0x01;
  5396  0575  3001               	movlw	1
  5397  0576  0141               	movlb	1	; select bank1
  5398  0577  009D               	movwf	29	;volatile
  5399                           
  5400                           ;mcc_generated_files/adc.c: 73:     ADCON1 = 0x80;
  5401  0578  3080               	movlw	128
  5402  0579  009E               	movwf	30	;volatile
  5403  057A                     l1646:	
  5404                           
  5405                           ;mcc_generated_files/adc.c: 76:     ADRESL = 0x00;
  5406  057A  019B               	clrf	27	;volatile
  5407  057B                     l1648:	
  5408                           
  5409                           ;mcc_generated_files/adc.c: 79:     ADRESH = 0x00;
  5410  057B  019C               	clrf	28	;volatile
  5411  057C                     l79:	
  5412  057C  0008               	return
  5413  057D                     __end_of_ADC_Initialize:	
  5414                           
  5415                           	psect	intentry
  5416  0004                     __pintentry:	
  5417 ;; *************** function _INTERRUPT_InterruptManager *****************
  5418 ;; Defined at:
  5419 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  5420 ;; Parameters:    Size  Location     Type
  5421 ;;		None
  5422 ;; Auto vars:     Size  Location     Type
  5423 ;;		None
  5424 ;; Return value:  Size  Location     Type
  5425 ;;                  1    wreg      void 
  5426 ;; Registers used:
  5427 ;;		wreg, status,2, status,0, pclath, cstack
  5428 ;; Tracked objects:
  5429 ;;		On entry : 0/0
  5430 ;;		On exit  : 0/0
  5431 ;;		Unchanged: 0/0
  5432 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5433 ;;      Params:         0       0       0       0       0       0       0       0
  5434 ;;      Locals:         0       0       0       0       0       0       0       0
  5435 ;;      Temps:          0       0       0       0       0       0       0       0
  5436 ;;      Totals:         0       0       0       0       0       0       0       0
  5437 ;;Total ram usage:        0 bytes
  5438 ;; Hardware stack levels used:    1
  5439 ;; Hardware stack levels required when called:    2
  5440 ;; This function calls:
  5441 ;;		_TMR1_ISR
  5442 ;; This function is called by:
  5443 ;;		Interrupt level 1
  5444 ;; This function uses a non-reentrant model
  5445 ;;
  5446                           
  5447  0004                     _INTERRUPT_InterruptManager:	
  5448                           
  5449                           ;incstack = 0
  5450  0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
  5451                           
  5452                           ; Regs used in _INTERRUPT_InterruptManager: [wreg+status,2+status,0+pclath+cstack]
  5453  0005  3180               	pagesel	$
  5454  0006                     i1l1848:	
  5455                           
  5456                           ;mcc_generated_files/interrupt_manager.c: 55:     if(INTCONbits.PEIE == 1)
  5457  0006  1F0B               	btfss	11,6	;volatile
  5458  0007  2809               	goto	u100_21
  5459  0008  280A               	goto	u100_20
  5460  0009                     u100_21:	
  5461  0009  2816               	goto	i1l211
  5462  000A                     u100_20:	
  5463  000A                     i1l1850:	
  5464                           
  5465                           ;mcc_generated_files/interrupt_manager.c: 56:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 57:         if(PIE4bits.TMR1IE == 1 && PIR4bits.TMR1IF == 1)
  5466  000A  014E               	movlb	14	; select bank14
  5467  000B  1C1A               	btfss	26,0	;volatile
  5468  000C  280E               	goto	u101_21
  5469  000D  280F               	goto	u101_20
  5470  000E                     u101_21:	
  5471  000E  2816               	goto	i1l211
  5472  000F                     u101_20:	
  5473  000F                     i1l1852:	
  5474  000F  1C10               	btfss	16,0	;volatile
  5475  0010  2812               	goto	u102_21
  5476  0011  2813               	goto	u102_20
  5477  0012                     u102_21:	
  5478  0012  2816               	goto	i1l211
  5479  0013                     u102_20:	
  5480  0013                     i1l1854:	
  5481                           
  5482                           ;mcc_generated_files/interrupt_manager.c: 58:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 59:             TMR1_ISR();
  5483  0013  3185  2528  3180   	fcall	_TMR1_ISR
  5484  0016                     i1l211:	
  5485                           ;mcc_generated_files/interrupt_manager.c: 60:         }
  5486                           
  5487  0016  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  5488  0017  0009               	retfie
  5489  0018                     __end_of_INTERRUPT_InterruptManager:	
  5490                           
  5491                           	psect	text17
  5492  0528                     __ptext17:	
  5493 ;; *************** function _TMR1_ISR *****************
  5494 ;; Defined at:
  5495 ;;		line 164 in file "mcc_generated_files/tmr1.c"
  5496 ;; Parameters:    Size  Location     Type
  5497 ;;		None
  5498 ;; Auto vars:     Size  Location     Type
  5499 ;;		None
  5500 ;; Return value:  Size  Location     Type
  5501 ;;                  1    wreg      void 
  5502 ;; Registers used:
  5503 ;;		wreg, status,2, status,0, pclath, cstack
  5504 ;; Tracked objects:
  5505 ;;		On entry : 0/0
  5506 ;;		On exit  : 0/0
  5507 ;;		Unchanged: 0/0
  5508 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5509 ;;      Params:         0       0       0       0       0       0       0       0
  5510 ;;      Locals:         0       0       0       0       0       0       0       0
  5511 ;;      Temps:          0       0       0       0       0       0       0       0
  5512 ;;      Totals:         0       0       0       0       0       0       0       0
  5513 ;;Total ram usage:        0 bytes
  5514 ;; Hardware stack levels used:    1
  5515 ;; Hardware stack levels required when called:    1
  5516 ;; This function calls:
  5517 ;;		Absolute function
  5518 ;;		_TMR1_DefaultInterruptHandler
  5519 ;;		_TMR1_WriteTimer
  5520 ;;		_v_1s_service_routine
  5521 ;; This function is called by:
  5522 ;;		_INTERRUPT_InterruptManager
  5523 ;; This function uses a non-reentrant model
  5524 ;;
  5525                           
  5526                           
  5527                           ;psect for function _TMR1_ISR
  5528  0528                     _TMR1_ISR:	
  5529  0528                     i1l1734:	
  5530                           ;incstack = 0
  5531                           ; Regs used in _TMR1_ISR: [wreg+status,2+status,0+pclath+cstack]
  5532                           
  5533                           
  5534                           ;mcc_generated_files/tmr1.c: 168:     PIR4bits.TMR1IF = 0;
  5535  0528  014E               	movlb	14	; select bank14
  5536  0529  1010               	bcf	16,0	;volatile
  5537  052A                     i1l1736:	
  5538                           
  5539                           ;mcc_generated_files/tmr1.c: 169:     TMR1_WriteTimer(timer1ReloadVal);
  5540  052A  0140               	movlb	0	; select bank0
  5541  052B  0859               	movf	_timer1ReloadVal+1,w	;volatile
  5542  052C  00F1               	movwf	TMR1_WriteTimer@timerVal+1
  5543  052D  0858               	movf	_timer1ReloadVal,w	;volatile
  5544  052E  00F0               	movwf	TMR1_WriteTimer@timerVal
  5545  052F  3185  2552  3185   	fcall	_TMR1_WriteTimer
  5546  0532                     i1l1738:	
  5547                           
  5548                           ;mcc_generated_files/tmr1.c: 171:     if(TMR1_InterruptHandler)
  5549  0532  0140               	movlb	0	; select bank0
  5550  0533  0856               	movf	_TMR1_InterruptHandler,w
  5551  0534  0457               	iorwf	_TMR1_InterruptHandler+1,w
  5552  0535  1903               	btfsc	3,2
  5553  0536  2D38               	goto	u82_21
  5554  0537  2D39               	goto	u82_20
  5555  0538                     u82_21:	
  5556  0538  2D3E               	goto	i1l58
  5557  0539                     u82_20:	
  5558  0539                     i1l1740:	
  5559                           
  5560                           ;mcc_generated_files/tmr1.c: 172:     {;mcc_generated_files/tmr1.c: 173:         TMR1_In
      +                          terruptHandler();
  5561  0539  0857               	movf	_TMR1_InterruptHandler+1,w
  5562  053A  008A               	movwf	10
  5563  053B  0856               	movf	_TMR1_InterruptHandler,w
  5564  053C  000A               	callw
  5565  053D  3185               	pagesel	$
  5566  053E                     i1l58:	
  5567  053E  0008               	return
  5568  053F                     __end_of_TMR1_ISR:	
  5569                           
  5570                           	psect	text18
  5571  059B                     __ptext18:	
  5572 ;; *************** function _TMR1_DefaultInterruptHandler *****************
  5573 ;; Defined at:
  5574 ;;		line 182 in file "mcc_generated_files/tmr1.c"
  5575 ;; Parameters:    Size  Location     Type
  5576 ;;		None
  5577 ;; Auto vars:     Size  Location     Type
  5578 ;;		None
  5579 ;; Return value:  Size  Location     Type
  5580 ;;                  1    wreg      void 
  5581 ;; Registers used:
  5582 ;;		None
  5583 ;; Tracked objects:
  5584 ;;		On entry : 0/0
  5585 ;;		On exit  : 0/0
  5586 ;;		Unchanged: 0/0
  5587 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5588 ;;      Params:         0       0       0       0       0       0       0       0
  5589 ;;      Locals:         0       0       0       0       0       0       0       0
  5590 ;;      Temps:          0       0       0       0       0       0       0       0
  5591 ;;      Totals:         0       0       0       0       0       0       0       0
  5592 ;;Total ram usage:        0 bytes
  5593 ;; Hardware stack levels used:    1
  5594 ;; This function calls:
  5595 ;;		Nothing
  5596 ;; This function is called by:
  5597 ;;		_TMR1_Initialize
  5598 ;;		_TMR1_ISR
  5599 ;; This function uses a non-reentrant model
  5600 ;;
  5601                           
  5602                           
  5603                           ;psect for function _TMR1_DefaultInterruptHandler
  5604  059B                     _TMR1_DefaultInterruptHandler:	
  5605  059B                     i1l64:	
  5606                           ;incstack = 0
  5607                           ; Regs used in _TMR1_DefaultInterruptHandler: []
  5608                           
  5609  059B  0008               	return
  5610  059C                     __end_of_TMR1_DefaultInterruptHandler:	
  5611                           
  5612                           	psect	text19
  5613  0408                     __ptext19:	
  5614 ;; *************** function _v_1s_service_routine *****************
  5615 ;; Defined at:
  5616 ;;		line 104 in file "main.c"
  5617 ;; Parameters:    Size  Location     Type
  5618 ;;		None
  5619 ;; Auto vars:     Size  Location     Type
  5620 ;;		None
  5621 ;; Return value:  Size  Location     Type
  5622 ;;                  1    wreg      void 
  5623 ;; Registers used:
  5624 ;;		wreg, status,2, status,0
  5625 ;; Tracked objects:
  5626 ;;		On entry : 0/0
  5627 ;;		On exit  : 0/0
  5628 ;;		Unchanged: 0/0
  5629 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5630 ;;      Params:         0       0       0       0       0       0       0       0
  5631 ;;      Locals:         0       0       0       0       0       0       0       0
  5632 ;;      Temps:          0       0       0       0       0       0       0       0
  5633 ;;      Totals:         0       0       0       0       0       0       0       0
  5634 ;;Total ram usage:        0 bytes
  5635 ;; Hardware stack levels used:    1
  5636 ;; This function calls:
  5637 ;;		Nothing
  5638 ;; This function is called by:
  5639 ;;		_main
  5640 ;;		_TMR1_ISR
  5641 ;; This function uses a non-reentrant model
  5642 ;;
  5643                           
  5644                           
  5645                           ;psect for function _v_1s_service_routine
  5646  0408                     _v_1s_service_routine:	
  5647  0408                     i1l1712:	
  5648                           ;incstack = 0
  5649                           ; Regs used in _v_1s_service_routine: [wreg+status,2+status,0]
  5650                           
  5651                           
  5652                           ;main.c: 106:     if (u16_CompressorStart_CountDown && u8_CompressorStatus == 2) {
  5653  0408  0140               	movlb	0	; select bank0
  5654  0409  083E               	movf	_u16_CompressorStart_CountDown,w
  5655  040A  043F               	iorwf	_u16_CompressorStart_CountDown+1,w
  5656  040B  1903               	btfsc	3,2
  5657  040C  2C0E               	goto	u74_21
  5658  040D  2C0F               	goto	u74_20
  5659  040E                     u74_21:	
  5660  040E  2C24               	goto	i1l1720
  5661  040F                     u74_20:	
  5662  040F                     i1l1714:	
  5663  040F  3002               	movlw	2
  5664  0410  067B               	xorwf	_u8_CompressorStatus,w
  5665  0411  1D03               	btfss	3,2
  5666  0412  2C14               	goto	u75_21
  5667  0413  2C15               	goto	u75_20
  5668  0414                     u75_21:	
  5669  0414  2C24               	goto	i1l1720
  5670  0415                     u75_20:	
  5671  0415                     i1l1716:	
  5672                           
  5673                           ;main.c: 107:         u16_CompressorStart_CountDown--;
  5674  0415  3001               	movlw	1
  5675  0416  02BE               	subwf	_u16_CompressorStart_CountDown,f
  5676  0417  3000               	movlw	0
  5677  0418  3BBF               	subwfb	_u16_CompressorStart_CountDown+1,f
  5678  0419                     i1l1718:	
  5679  0419  1003               	clrc
  5680  041A  1F99               	btfss	25,7	;volatile
  5681  041B  1403               	setc
  5682  041C  1803               	btfsc	3,0
  5683  041D  2C1F               	goto	u76_21
  5684  041E  2C22               	goto	u76_20
  5685  041F                     u76_21:	
  5686  041F  0140               	movlb	0	; select bank0
  5687  0420  1799               	bsf	25,7	;volatile
  5688  0421  2C24               	goto	u77_24
  5689  0422                     u76_20:	
  5690  0422  0140               	movlb	0	; select bank0
  5691  0423  1399               	bcf	25,7	;volatile
  5692  0424                     u77_24:	
  5693  0424                     i1l1720:	
  5694                           
  5695                           ;main.c: 111:     if (u16_CompressorStop_CountDown && u8_CompressorStatus == 3) {
  5696  0424  083C               	movf	_u16_CompressorStop_CountDown,w
  5697  0425  043D               	iorwf	_u16_CompressorStop_CountDown+1,w
  5698  0426  1903               	btfsc	3,2
  5699  0427  2C29               	goto	u78_21
  5700  0428  2C2A               	goto	u78_20
  5701  0429                     u78_21:	
  5702  0429  2C34               	goto	i1l1726
  5703  042A                     u78_20:	
  5704  042A                     i1l1722:	
  5705  042A  3003               	movlw	3
  5706  042B  067B               	xorwf	_u8_CompressorStatus,w
  5707  042C  1D03               	btfss	3,2
  5708  042D  2C2F               	goto	u79_21
  5709  042E  2C30               	goto	u79_20
  5710  042F                     u79_21:	
  5711  042F  2C34               	goto	i1l1726
  5712  0430                     u79_20:	
  5713  0430                     i1l1724:	
  5714                           
  5715                           ;main.c: 112:         u16_CompressorStop_CountDown--;
  5716  0430  3001               	movlw	1
  5717  0431  02BC               	subwf	_u16_CompressorStop_CountDown,f
  5718  0432  3000               	movlw	0
  5719  0433  3BBD               	subwfb	_u16_CompressorStop_CountDown+1,f
  5720  0434                     i1l1726:	
  5721                           
  5722                           ;main.c: 116:     if (u16_Error_CompressorON_Duration) {
  5723  0434  083A               	movf	_u16_Error_CompressorON_Duration,w
  5724  0435  043B               	iorwf	_u16_Error_CompressorON_Duration+1,w
  5725  0436  1903               	btfsc	3,2
  5726  0437  2C39               	goto	u80_21
  5727  0438  2C3A               	goto	u80_20
  5728  0439                     u80_21:	
  5729  0439  2C3E               	goto	i1l1730
  5730  043A                     u80_20:	
  5731  043A                     i1l1728:	
  5732                           
  5733                           ;main.c: 117:         u16_Error_CompressorON_Duration--;
  5734  043A  3001               	movlw	1
  5735  043B  02BA               	subwf	_u16_Error_CompressorON_Duration,f
  5736  043C  3000               	movlw	0
  5737  043D  3BBB               	subwfb	_u16_Error_CompressorON_Duration+1,f
  5738  043E                     i1l1730:	
  5739                           
  5740                           ;main.c: 120:     if (u16_Error_CompressorOFF_Duration) {
  5741  043E  0838               	movf	_u16_Error_CompressorOFF_Duration,w
  5742  043F  0439               	iorwf	_u16_Error_CompressorOFF_Duration+1,w
  5743  0440  1903               	btfsc	3,2
  5744  0441  2C43               	goto	u81_21
  5745  0442  2C44               	goto	u81_20
  5746  0443                     u81_21:	
  5747  0443  2C48               	goto	i1l365
  5748  0444                     u81_20:	
  5749  0444                     i1l1732:	
  5750                           
  5751                           ;main.c: 121:         u16_Error_CompressorOFF_Duration--;
  5752  0444  3001               	movlw	1
  5753  0445  02B8               	subwf	_u16_Error_CompressorOFF_Duration,f
  5754  0446  3000               	movlw	0
  5755  0447  3BB9               	subwfb	_u16_Error_CompressorOFF_Duration+1,f
  5756  0448                     i1l365:	
  5757  0448  0008               	return
  5758  0449                     __end_of_v_1s_service_routine:	
  5759                           
  5760                           	psect	text20
  5761  0552                     __ptext20:	
  5762 ;; *************** function _TMR1_WriteTimer *****************
  5763 ;; Defined at:
  5764 ;;		line 127 in file "mcc_generated_files/tmr1.c"
  5765 ;; Parameters:    Size  Location     Type
  5766 ;;  timerVal        2    0[COMMON] unsigned short 
  5767 ;; Auto vars:     Size  Location     Type
  5768 ;;		None
  5769 ;; Return value:  Size  Location     Type
  5770 ;;                  1    wreg      void 
  5771 ;; Registers used:
  5772 ;;		wreg, status,2
  5773 ;; Tracked objects:
  5774 ;;		On entry : 0/0
  5775 ;;		On exit  : 0/0
  5776 ;;		Unchanged: 0/0
  5777 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5778 ;;      Params:         2       0       0       0       0       0       0       0
  5779 ;;      Locals:         0       0       0       0       0       0       0       0
  5780 ;;      Temps:          0       0       0       0       0       0       0       0
  5781 ;;      Totals:         2       0       0       0       0       0       0       0
  5782 ;;Total ram usage:        2 bytes
  5783 ;; Hardware stack levels used:    1
  5784 ;; This function calls:
  5785 ;;		Nothing
  5786 ;; This function is called by:
  5787 ;;		_TMR1_ISR
  5788 ;;		_TMR1_Reload
  5789 ;; This function uses a non-reentrant model
  5790 ;;
  5791                           
  5792                           
  5793                           ;psect for function _TMR1_WriteTimer
  5794  0552                     _TMR1_WriteTimer:	
  5795  0552                     i1l1630:	
  5796                           ;incstack = 0
  5797                           ; Regs used in _TMR1_WriteTimer: [wreg+status,2]
  5798                           
  5799                           
  5800                           ;mcc_generated_files/tmr1.c: 127: void TMR1_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr1.c: 128: {;mcc_generated_files/tmr1.c: 129:     if (T1CONbits.nT1SYNC == 1)
  5801  0552  0144               	movlb	4	; select bank4
  5802  0553  1D0E               	btfss	14,2	;volatile
  5803  0554  2D56               	goto	u72_21
  5804  0555  2D57               	goto	u72_20
  5805  0556                     u72_21:	
  5806  0556  2D5E               	goto	i1l1640
  5807  0557                     u72_20:	
  5808  0557                     i1l1632:	
  5809                           
  5810                           ;mcc_generated_files/tmr1.c: 130:     {;mcc_generated_files/tmr1.c: 132:         T1CONbi
      +                          ts.TMR1ON = 0;
  5811  0557  100E               	bcf	14,0	;volatile
  5812  0558                     i1l1634:	
  5813                           
  5814                           ;mcc_generated_files/tmr1.c: 135:         TMR1H = (timerVal >> 8);
  5815  0558  0871               	movf	TMR1_WriteTimer@timerVal+1,w
  5816  0559  008D               	movwf	13	;volatile
  5817  055A                     i1l1636:	
  5818                           
  5819                           ;mcc_generated_files/tmr1.c: 136:         TMR1L = timerVal;
  5820  055A  0870               	movf	TMR1_WriteTimer@timerVal,w
  5821  055B  008C               	movwf	12	;volatile
  5822  055C                     i1l1638:	
  5823                           
  5824                           ;mcc_generated_files/tmr1.c: 139:         T1CONbits.TMR1ON =1;
  5825  055C  140E               	bsf	14,0	;volatile
  5826                           
  5827                           ;mcc_generated_files/tmr1.c: 140:     }
  5828  055D  2D62               	goto	i1l45
  5829  055E                     i1l1640:	
  5830                           
  5831                           ;mcc_generated_files/tmr1.c: 142:     {;mcc_generated_files/tmr1.c: 144:         TMR1H =
      +                           (timerVal >> 8);
  5832  055E  0871               	movf	TMR1_WriteTimer@timerVal+1,w
  5833  055F  008D               	movwf	13	;volatile
  5834  0560                     i1l1642:	
  5835                           
  5836                           ;mcc_generated_files/tmr1.c: 145:         TMR1L = timerVal;
  5837  0560  0870               	movf	TMR1_WriteTimer@timerVal,w
  5838  0561  008C               	movwf	12	;volatile
  5839  0562                     i1l45:	
  5840  0562  0008               	return
  5841  0563                     __end_of_TMR1_WriteTimer:	
  5842  007E                     btemp	set	126	;btemp
  5843  007E                     int$flags	set	126
  5844  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         39
    Persistent  43
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8      12
    BANK0            80     13      59
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            16      0       0

Pointer List with Targets:

    EUSART1_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultErrorHandler(), 

    EUSART1_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultErrorHandler(), Absolute function(), 

    EUSART1_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorHandler(), Absolute function(), 

    EUSART1_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultFramingErrorHandler(), 

    EUSART1_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultFramingErrorHandler(), Absolute function(), 

    TMR1_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> v_1s_service_routine(), TMR1_DefaultInterruptHandler(), 

    TMR1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> v_1s_service_routine(), Absolute function(), TMR1_DefaultInterruptHandler(), 


Critical Paths under _main in COMMON

    _main->_u16_get_adc_value
    _u16_get_adc_value->_ADC_GetConversion
    _TMR1_Initialize->_TMR1_SetInterruptHandler
    _EUSART1_Initialize->_EUSART1_SetErrorHandler
    _EUSART1_Initialize->_EUSART1_SetFramingErrorHandler
    _EUSART1_Initialize->_EUSART1_SetOverrunErrorHandler

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _TMR1_ISR->_TMR1_WriteTimer

Critical Paths under _main in BANK0

    _main->___lmul

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0    1366
                                              8 BANK0      5     5      0
                  _SYSTEM_Initialize
           _TMR1_SetInterruptHandler
                             ___lmul
                  _u16_get_adc_value
              _v_get_slope_intercept
 ---------------------------------------------------------------------------------
 (1) _v_get_slope_intercept                                2     0      2     318
                                              2 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (1) _u16_get_adc_value                                    7     5      2      90
                                              6 COMMON     2     0      2
                                              0 BANK0      5     5      0
                  _ADC_GetConversion
 ---------------------------------------------------------------------------------
 (2) _ADC_GetConversion                                    4     2      2      22
                                              2 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (1) ___lmul                                              12     4      8     316
                                              2 COMMON     4     4      0
                                              0 BANK0      8     0      8
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     468
                     _ADC_Initialize
                 _EUSART1_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _TMR1_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      0     0      0     174
           _TMR1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR1_SetInterruptHandler                             2     0      2     174
                                              2 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0     294
            _EUSART1_SetErrorHandler
     _EUSART1_SetFramingErrorHandler
     _EUSART1_SetOverrunErrorHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetOverrunErrorHandler                       2     0      2      98
                                              2 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetFramingErrorHandler                       2     0      2      98
                                              2 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetErrorHandler                              2     0      2      98
                                              2 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _INTERRUPT_InterruptManager                           0     0      0     240
                           _TMR1_ISR
 ---------------------------------------------------------------------------------
 (5) _TMR1_ISR                                             0     0      0     240
                   Absolute function *
       _TMR1_DefaultInterruptHandler *
                    _TMR1_WriteTimer
               _v_1s_service_routine *
 ---------------------------------------------------------------------------------
 (6) _v_1s_service_routine                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _TMR1_WriteTimer                                      2     0      2     240
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (6) _TMR1_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (6) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _ADC_Initialize
     _EUSART1_Initialize
       _EUSART1_SetErrorHandler
       _EUSART1_SetFramingErrorHandler
       _EUSART1_SetOverrunErrorHandler
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _TMR1_Initialize
       _TMR1_SetInterruptHandler
   _TMR1_SetInterruptHandler
   ___lmul
   _u16_get_adc_value
     _ADC_GetConversion
   _v_get_slope_intercept

 _INTERRUPT_InterruptManager (ROOT)
   _TMR1_ISR
     Absolute function(Fake) *
     _TMR1_DefaultInterruptHandler *
     _TMR1_WriteTimer *
     _v_1s_service_routine *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             1F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      8       C       2       85.7%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      47       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50      D      3B       6       73.8%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            10      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               10      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
DATA                 0      0      47      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%
BITSFR32             0      0       0      33        0.0%
SFR32                0      0       0      33        0.0%
BITSFR33             0      0       0      34        0.0%
SFR33                0      0       0      34        0.0%
BITSFR34             0      0       0      35        0.0%
SFR34                0      0       0      35        0.0%
BITSFR35             0      0       0      36        0.0%
SFR35                0      0       0      36        0.0%
BITSFR36             0      0       0      37        0.0%
SFR36                0      0       0      37        0.0%
BITSFR37             0      0       0      38        0.0%
SFR37                0      0       0      38        0.0%
BITSFR38             0      0       0      39        0.0%
SFR38                0      0       0      39        0.0%
BITSFR39             0      0       0      40        0.0%
SFR39                0      0       0      40        0.0%
BITSFR40             0      0       0      41        0.0%
SFR40                0      0       0      41        0.0%
BITSFR41             0      0       0      42        0.0%
SFR41                0      0       0      42        0.0%
BITSFR42             0      0       0      43        0.0%
SFR42                0      0       0      43        0.0%
BITSFR43             0      0       0      44        0.0%
SFR43                0      0       0      44        0.0%
BITSFR44             0      0       0      45        0.0%
SFR44                0      0       0      45        0.0%
BITSFR45             0      0       0      46        0.0%
SFR45                0      0       0      46        0.0%
BITSFR46             0      0       0      47        0.0%
SFR46                0      0       0      47        0.0%
BITSFR47             0      0       0      48        0.0%
SFR47                0      0       0      48        0.0%
BITSFR48             0      0       0      49        0.0%
SFR48                0      0       0      49        0.0%
BITSFR49             0      0       0      50        0.0%
SFR49                0      0       0      50        0.0%
BITSFR50             0      0       0      51        0.0%
SFR50                0      0       0      51        0.0%
BITSFR51             0      0       0      52        0.0%
SFR51                0      0       0      52        0.0%
BITSFR52             0      0       0      53        0.0%
SFR52                0      0       0      53        0.0%
BITSFR53             0      0       0      54        0.0%
SFR53                0      0       0      54        0.0%
BITSFR54             0      0       0      55        0.0%
SFR54                0      0       0      55        0.0%
BITSFR55             0      0       0      56        0.0%
SFR55                0      0       0      56        0.0%
BITSFR56             0      0       0      57        0.0%
SFR56                0      0       0      57        0.0%
BITSFR57             0      0       0      58        0.0%
SFR57                0      0       0      58        0.0%
BITSFR58             0      0       0      59        0.0%
SFR58                0      0       0      59        0.0%
BITSFR59             0      0       0      60        0.0%
SFR59                0      0       0      60        0.0%
BITSFR60             0      0       0      61        0.0%
SFR60                0      0       0      61        0.0%
BITSFR61             0      0       0      62        0.0%
SFR61                0      0       0      62        0.0%
BITSFR62             0      0       0      63        0.0%
SFR62                0      0       0      63        0.0%
BITSFR63             0      0       0      64        0.0%
SFR63                0      0       0      64        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Wed Oct 16 16:52:55 2019

                                   __CFG_CP$OFF 0000                                              l31 050F  
                                            l61 0588                                              l94 051F  
                                            l79 057C                                              l97 0527  
                                   __CFG_LVP$ON 0000                                             l143 04F1  
                                           l305 04CF                                             l250 0551  
                                           l253 056C                                             l191 058E  
                                           l256 0574                                             l432 020A  
                                           l441 02D9                                             l194 059A  
                                           l188 0594                                             l372 04A8  
                                           l460 02DA                                             l462 02DB  
                                           l554 047C                                             l466 02DD  
                                           l395 0407                                             l468 02DE  
                                           l389 0407                                             u730 0523  
                                           u731 0522                                             u900 036E  
                                           u901 036D                                             u910 0389  
                                           u911 0388                                             u920 03A4  
                                           u921 03A3                                             u930 03BF  
                                           u850 02F9                                             u931 03BE  
                                           u851 02F8                                             u940 03DA  
                                           u860 0302                                             u941 03D9  
                                           u861 0301                                             u950 03F5  
                                           u870 031D                                             u951 03F4  
                                           u871 031C                                             u880 0338  
                                           u881 0337                                             u890 0353  
                                           u891 0352                                 _timer1ReloadVal 0058  
                       __size_of_PMD_Initialize 0008                                    __CFG_BORV$LO 0000  
                                           wreg 0009                                   __CFG_BBEN$OFF 0000  
                         _u8_Refrigeration_Mode 0041                                    __CFG_ZCD$OFF 0000  
                                          l2200 047F                                            l2210 04A4  
                                          l2202 0480                                            l2220 0449  
                                          l2204 048A                                            l2300 0112  
                                          l2230 0474                                            l2222 0451  
                                          l2310 0148                                            l2302 0129  
                                          l2224 0456                                            l2208 0494  
                                          l2400 0266                                            l2320 016A  
                                          l2312 014A                                            l2304 012F  
                                          l2240 0036                                            l1610 0595  
                                          l2226 045E                                            l2410 028C  
                                          l2402 026D                                            l2330 018E  
                                          l2322 0173                                            l2314 0153  
                                          l2306 0137                                            l2250 0040  
                                          l2242 0037                                            l2234 002A  
                                          l1700 04CC                                            l1604 0583  
                                          l1620 04FB                                            l1612 04F2  
                                          l2228 0465                                            l2420 02A1  
                                          l2412 0292                                            l2404 026F  
                                          l2340 01AE                                            l2332 0193  
                                          l2324 0178                                            l2316 0158  
                                          l2308 013F                                            l2260 0049  
                                          l2252 0042                                            l2244 003A  
                                          l2236 002D                                            l1606 058F  
                                          l1710 056B                                            l1702 0563  
                                          l1622 0502                                            l1614 04F5  
                                          l2430 02B3                                            l2422 02A6  
                                          l2406 0274                                            l2350 01C2  
                                          l2342 01B2                                            l2318 0165  
                                          l2270 006B                                            l2262 0051  
                                          l2254 0044                                            l2246 003C  
                                          l2238 002E                                            l1608 0589  
                                          l1704 0566                                            l1624 0504  
                                          l1616 04F7                                            l1800 034A  
                                          l2424 02AC                                            l2416 029A  
                                          l2408 0283                                            l2360 01E2  
                                          l2352 01C7                                            l2344 01B4  
                                          l2336 01A0                                            l2328 0185  
                                          l2280 008A                                            l2272 006C  
                                          l2264 0059                                            l2256 0045  
                                          l2248 003E                                            l1706 0567  
                                          l1626 0505                                            l1618 04F9  
                                          l1650 0511                                            l1810 0389  
                                          l1802 0353                                            l2426 02AE  
                                          l2418 02A0                                            l2338 01A9  
                                          l2434 02C3                                            l2290 00CE  
                                          l2282 0091                                            l2274 006E  
                                          l2266 0061                                            l2258 0047  
                                          l1644 0575                                            l1708 056A  
                                          l1628 050C                                            l1652 051B  
                                          l1820 03D1                                            l1812 039B  
                                          l1804 0365                                            l2380 0226  
                                          l2372 020D                                            l2364 01EF  
                                          l2356 01D4                                            l2348 01B9  
                                          l2292 00CF                                            l2284 00BA  
                                          l2276 007A                                            l2268 0069  
                                          l1646 057A                                            l1670 04E8  
                                          l1662 04D0                                            l1654 051C  
                                          l1822 03DA                                            l1814 03A4  
                                          l1806 036E                                            l2390 0241  
                                          l2382 0228                                            l2438 02E0  
                                          l2374 0212                                            l2366 01F8  
                                          l2358 01DD                                            l2294 00D6  
                                          l2286 00BD                                            l2278 0086  
                                          l1648 057B                                            l1672 04EF  
                                          l1664 04D9                                            l1680 04AF  
                                          l1760 0548                                            l1656 051D  
                                          l1824 03EC                                            l1816 03B6  
                                          l1808 0380                                            l2392 0244  
                                          l2384 022D                                            l2376 021A  
                                          l2368 01FD                                            l2296 00F3  
                                          l1666 04DA                                            l1690 04C0  
                                          l1682 04B1                                            l1674 056D  
                                          l1762 054B                                            l1754 053F  
                                          l1658 0523                                            l1826 03F5  
                                          l1818 03BF                                            l2394 0249  
                                          l2386 0235                                            l2378 0220  
                                          l2298 010E                                            l1668 04E1  
                                          l1692 04C2                                            l1684 04B3  
                                          l1676 04A9                                            l1764 054E  
                                          l1756 0542                                            l2580 02CB  
                                          l2396 0257                                            l2388 023B  
                                          l1694 04C7                                            l1686 04B6  
                                          l1678 04AD                                            l1758 0545  
                                          l1790 0302                                            l2582 02E9  
                                          l2398 0260                                            l1696 04C8  
                                          l1688 04B8                                            l2584 049C  
                                          l1792 0314                                            l1698 04CA  
                                          l1794 031D                                            l1786 02F3  
                                          l2578 02BB                                            l1796 032F  
                                          l1788 02F9                                            l1798 0338  
                                          u1400 0456                                            u1401 0455  
                                          u1500 0148                                            u1501 0147  
                                          _LATA 0018                                            u1430 0474  
                                          u1510 0153                                            _LATB 0019  
                                          u1431 0473                                            u1415 045F  
                                          u1511 0152                                            _LATC 001A  
                                          u1600 01C7                                            u1520 0158  
                                          u1440 0091                                            u1425 0466  
                                          u1601 01C6                                            u1521 0157  
                                          u1441 0090                                            u1610 01DD  
                                          u1530 0173                                            u1450 009F  
                                          u1611 01DC                                            u1531 0172  
                                          u1700 0241                                            u1620 01E2  
                                          u1540 0178                                            u1460 00BA  
                                          u1701 0240                                            u1621 01E1  
                                          u1541 0177                                            u1461 00B9  
                                          u1710 0249                                            u1630 01F8  
                                          u1550 018E                                            u1470 00CD  
                                          u1711 0248                                            u1631 01F7  
                                          u1551 018D                                            u1471 00CC  
                                          u1455 009B                                            u1800 02AC  
                                          u1720 0257                                            u1640 01FD  
                                          u1560 0193                                            u1480 0104  
                                          u1801 02AB                                            u1721 0256  
                                          u1641 01FC                                            u1561 0192  
                                          u1730 0266                                            u1650 0212  
                                          u1570 01A9                                            u1490 011F  
                                          u1731 0265                                            u1651 0211  
                                          u1571 01A8                                            u1740 026D  
                                          u1660 0220                                            u1580 01AE  
                                          u1741 026C                                            u1725 0253  
                                          u1661 021F                                            u1581 01AD  
                                          u1485 0100                                            u1750 0274  
                                          u1670 0226                                            u1590 01C2  
                                          u1751 0273                                            u1671 0225  
                                          u1591 01C1                                            u1495 011B  
                                          u1760 0283                                            u1680 022D  
                                          u1761 0282                                            u1681 022C  
                                          u1770 0292                                            u1690 023B  
                                          u1771 0291                                            u1691 023A  
                                          u1780 0299                                            u1781 0298  
                                          u1765 027F                                            u1790 02A0  
                                          u1791 029F                                            _PMD0 0796  
                                          _PMD1 0797                                            _PMD2 0798  
                                          _PMD3 0799                                            _PMD4 079A  
                                          _PMD5 079B                                            i1l45 0562  
                                          i1l64 059B                                            i1l58 053E  
                                          _WPUA 1F39                                            _WPUB 1F44  
                                          _WPUC 1F4F                                   __CFG_FCMEN$ON 0000  
                                          _main 002A                                            fsr0h 0005  
                                          indf0 0000                                            fsr0l 0004  
                                          btemp 007E                                   __CFG_BOREN$ON 0000  
                      _i16_CompressorStart_Temp 0036                                            start 0018  
                    ??_TMR1_SetInterruptHandler 0074                                   __CFG_CSWEN$ON 0000  
                                 __CFG_MCLRE$ON 0000                          _u8_Refrigeration_State 005A  
                __size_of_OSCILLATOR_Initialize 000A                   __end_of_OSCILLATOR_Initialize 056D  
                                         ?_main 0070                                   __CFG_WDTE$OFF 0000  
                                         _T1CLK 0211                                           _T1CON 020E  
                                         i1l211 0016                                           i1l365 0448  
                                         _OSCEN 0891                                           _TMR1H 020D  
                                         _TMR1L 020C                                           u72_20 0557  
                                         u80_20 043A                                           u72_21 0556  
                                         u80_21 0439                                           u81_20 0444  
                                         u81_21 0443                                           _TRISA 0012  
                                         _TRISB 0013                                           _TRISC 0014  
                                         u74_20 040F                                           u82_20 0539  
                                         u74_21 040E                                           u82_21 0538  
                                         u75_20 0415                                           u75_21 0414  
                                         u76_20 0422                                           u76_21 041F  
                                         u77_24 0424                                           u78_20 042A  
                                         u78_21 0429                                           u79_20 0430  
                                         u79_21 042F                             ___lmul@multiplicand 0047  
                              __end_of_TMR1_ISR 053F                                   __CFG_WRTB$OFF 0000  
                                 __CFG_WRTC$OFF 0000                           _u32_KnobPOT_ADCsample 0024  
                       __end_of_TMR1_Initialize 0510                                           pclath 000A  
                                         status 0003                                           wtemp0 007E  
            _EUSART1_DefaultFramingErrorHandler 0000                                 _TMR1_WriteTimer 0552  
                        ?_v_get_slope_intercept 0072                                 __initialization 001A  
                    __end_of_EUSART1_Initialize 04F2                                    __end_of_main 02F3  
                                __CFG_SAFEN$OFF 0000                     ?_INTERRUPT_InterruptManager 0070  
                                        ??_main 004B                    __end_of_v_1s_service_routine 0449  
                                        _ADCON0 009D                                          _ADCON1 009E  
                                        _ADRESH 009C                                          _ADRESL 009B  
                                        _ANSELA 1F38                                          _ANSELB 1F43  
                                        _ANSELC 1F4E                              __CFG_RSTOSC$HFINT1 0000  
                                        _T1GATE 0210                                          _T1GCON 020F  
                                        _RC1REG 0119                                          _RC1STA 011D  
                                        u100_20 000A                                          u100_21 0009  
                                        _RB4PPS 1F1C                                          u101_20 000F  
                                        u101_21 000E                                          u102_20 0013  
                                        u102_21 0012                         TMR1_WriteTimer@timerVal 0070  
                                        _ODCONA 1F3A                                          _ODCONB 1F45  
                                        _ODCONC 1F50                                          i1l1630 0552  
                                        i1l1632 0557                                          i1l1640 055E  
                                        i1l1720 0424                                          i1l1712 0408  
                                        i1l1642 0560                                          i1l1634 0558  
                                        i1l1730 043E                                          i1l1722 042A  
                                        i1l1714 040F                                          i1l1636 055A  
                                        i1l1732 0444                                          i1l1724 0430  
                                        i1l1716 0415                                          i1l1740 0539  
                                        i1l1638 055C                                          i1l1726 0434  
                                        i1l1718 0419                                          i1l1734 0528  
                                        i1l1728 043A                                          i1l1736 052A  
                                        i1l1738 0532                                          i1l1850 000A  
                                        i1l1852 000F                                          i1l1854 0013  
                                        i1l1848 0006                                  __CFG_WDTCCS$SC 0000  
                                        _INLVLA 1F3C                                          _INLVLB 1F47  
                                        _INLVLC 1F52                                          _OSCFRQ 0893  
                                        _TX1REG 011A                                          _TX1STA 011E  
                                __CFG_PWRTE$OFF 0000                                          _u32_Cn 0028  
                                        _u32_Mn 002C            __end_of_TMR1_DefaultInterruptHandler 059C  
         __size_of_TMR1_DefaultInterruptHandler 0001                    _TMR1_DefaultInterruptHandler 059B  
                                        ___lmul 0449                                  __CFG_STVREN$ON 0000  
                      ?_EUSART1_SetErrorHandler 0072                 u16_get_adc_value@u8_ADC_channel 0045  
                           _u16_ADCsample_Count 0032                ??_EUSART1_SetOverrunErrorHandler 0074  
               ?_EUSART1_SetOverrunErrorHandler 0072                                  _PMD_Initialize 056D  
                      ADC_GetConversion@channel 0075        TMR1_SetInterruptHandler@InterruptHandler 0072  
                       __end_of_TMR1_WriteTimer 0563                                ?_TMR1_Initialize 0070  
                             _SYSTEM_Initialize 053F                         __end_of__initialization 0026  
                            ?_SYSTEM_Initialize 0070                                  __pcstackCOMMON 0070  
                           ??_SYSTEM_Initialize 0074                                       ?_TMR1_ISR 0070  
                 ?_TMR1_DefaultInterruptHandler 0070                          __end_of_PMD_Initialize 0575  
                        _u8_CabinetSensor_Error 007A                       __end_of_SYSTEM_Initialize 0552  
                                    __pbssBANK0 0020                            _v_1s_service_routine 0408  
               __end_of_EUSART1_SetErrorHandler 059B                                      __pmaintext 002A  
                                       ?___lmul 0043                                      ??_TMR1_ISR 0072  
                               __CFG_PPS1WAY$ON 0000                                      __pintentry 0004  
                                ___lmul@product 0072                                 ?_PMD_Initialize 0070  
                       __size_of_ADC_Initialize 0008          __end_of_EUSART1_SetFramingErrorHandler 0595  
       __size_of_EUSART1_SetFramingErrorHandler 0006                  _EUSART1_SetFramingErrorHandler 058F  
                                       _SP1BRGH 011C                                         _SP1BRGL 011B  
                                       _OSCCON1 088D                                         _OSCCON3 088F  
                                       _OSCSTAT 0890                                         _OSCTUNE 0892  
                                       _SLRCONA 1F3B                                         _SLRCONB 1F46  
                                       _SLRCONC 1F51                                ?_TMR1_WriteTimer 0070  
                 _u16_CompressorStart_CountDown 003E                         ??_v_get_slope_intercept 0074  
                         ?_v_1s_service_routine 0070                                 __size_of___lmul 0034  
                                       __ptext1 02F3                                         __ptext2 047D  
                                       __ptext3 0510                                         __ptext4 0449  
                                       __ptext5 053F                                         __ptext6 04F2  
                                       __ptext7 0583                                         __ptext8 056D  
                                       __ptext9 04A9                  ??_TMR1_DefaultInterruptHandler 0070  
                               __CFG_WRTAPP$OFF 0000                                       _T1CONbits 020E  
                         _OSCILLATOR_Initialize 0563                    _u16_CompressorStop_CountDown 003C  
             __size_of_TMR1_SetInterruptHandler 0006                              _EUSART1_Initialize 04D0  
                      ??_PIN_MANAGER_Initialize 0072                       ?_TMR1_SetInterruptHandler 0072  
                               __CFG_WRTSAF$OFF 0000                      __size_of_SYSTEM_Initialize 0013  
                                       clrloop0 057E                            end_of_initialization 0026  
                           ?_EUSART1_Initialize 0070                     _EUSART1_OverrunErrorHandler 0052  
                                   _u8_SetLevel 0040                                    _u16_Knob_Res 0078  
                          ??_EUSART1_Initialize 0074                           __CFG_WDTCPS$WDTCPS_31 0000  
              __size_of_EUSART1_SetErrorHandler 0006                                __CFG_FEXTOSC$OFF 0000  
                        ??_v_1s_service_routine 0070                 _u16_Error_CompressorON_Duration 003A  
                       _i16_CompressorStop_Temp 0034                                  __end_of___lmul 047D  
                             __size_of_TMR1_ISR 0017                                  _ADC_Initialize 0575  
                        ?_OSCILLATOR_Initialize 0070                             start_initialization 001A  
               __size_of_PIN_MANAGER_Initialize 0027                                __CFG_LPBOREN$OFF 0000  
                      __size_of_TMR1_Initialize 001E                                ??_PMD_Initialize 0072  
                                      ??___lmul 0072                          __end_of_ADC_Initialize 057D  
                             _u16_get_adc_value 047D                                     __pbssCOMMON 0078  
                            ?_u16_get_adc_value 0076                                       ___latbits 0001  
                                 __pcstackBANK0 0043                             ??_u16_get_adc_value 0043  
              ??_EUSART1_SetFramingErrorHandler 0074                 ?_EUSART1_SetFramingErrorHandler 0072  
                        _i16_CabinetSensor_Temp 0030                  __size_of_v_get_slope_intercept 0115  
                                     __pnvBANK0 0050                   __end_of_v_get_slope_intercept 0408  
                        _PIN_MANAGER_Initialize 04A9                __end_of_TMR1_SetInterruptHandler 0589  
                               ?_ADC_Initialize 0070                       __end_of_u16_get_adc_value 04A9  
                  ??_INTERRUPT_InterruptManager 0072                                        _BAUD1CON 011F  
            _EUSART1_DefaultOverrunErrorHandler 0000                            _EUSART1_ErrorHandler 0050  
                       _EUSART1_SetErrorHandler 0595                    v_get_slope_intercept@u16_adc 0072  
              _u16_Error_CompressorOFF_Duration 0038                                        _LATAbits 0018  
       EUSART1_SetErrorHandler@interruptHandler 0072                                        _LATBbits 0019  
                                     clear_ram0 057D                                        _PIE4bits 071A  
                      __size_of_TMR1_WriteTimer 0011             __size_of_INTERRUPT_InterruptManager 0014  
                                      _PIR3bits 070F                                        _PIR4bits 0710  
                                      _RX1DTPPS 1ECB                     _i32_CabinetSensor_ADCsample 0020  
                             __CFG_BBSIZE$BB512 0000                                        _TMR1_ISR 0528  
                             ??_TMR1_Initialize 0074                                      _ADCON0bits 009D  
                             ___lmul@multiplier 0043                 u16_get_adc_value@u16_ADC_sample 0046  
                             _ADC_GetConversion 0510                         ??_OSCILLATOR_Initialize 0072  
                            ?_ADC_GetConversion 0072                     __size_of_EUSART1_Initialize 0022  
                    __size_of_u16_get_adc_value 002C                             _u8_CompressorStatus 007B  
                      _TMR1_SetInterruptHandler 0583                           _TMR1_InterruptHandler 0056  
                     ??_EUSART1_SetErrorHandler 0074                     _EUSART1_DefaultErrorHandler 0000  
                           ??_ADC_GetConversion 0074                                        __ptext10 0563  
                                      __ptext11 04D0                                        __ptext20 0552  
                                      __ptext12 0589                                        __ptext13 058F  
                                    _T1GCONbits 020F                                        __ptext14 0595  
                                      __ptext15 0575                                        __ptext17 0528  
                                      __ptext18 059B                                        __ptext19 0408  
                                 __size_of_main 02C9                       __end_of_ADC_GetConversion 0528  
                          __CFG_WDTCWS$WDTCWS_7 0000                   __size_of_v_1s_service_routine 0041  
                                    _RC1STAbits 011D  EUSART1_SetOverrunErrorHandler@interruptHandler 0072  
                                      int$flags 007E              __end_of_INTERRUPT_InterruptManager 0018  
                    _INTERRUPT_InterruptManager 0004                               ??_TMR1_WriteTimer 0072  
                   _EUSART1_FramingErrorHandler 0054                                      _INTCONbits 000B  
                                      intlevel1 0000                         ?_PIN_MANAGER_Initialize 0070  
                             __CFG_CLKOUTEN$OFF 0000          __end_of_EUSART1_SetOverrunErrorHandler 058F  
       __size_of_EUSART1_SetOverrunErrorHandler 0006                  _EUSART1_SetOverrunErrorHandler 0589  
                              ??_ADC_Initialize 0072  EUSART1_SetFramingErrorHandler@interruptHandler 0072  
                            _eusart1RxLastError 0042                                      _TX1STAbits 011E  
                __end_of_PIN_MANAGER_Initialize 04D0                      __size_of_ADC_GetConversion 0018  
                               _TMR1_Initialize 04F2                           _v_get_slope_intercept 02F3  
